// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/sequencer/admin/v30/sequencer_bft_additional_snapshot_info.proto

package v30

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BftSequencerSnapshotAdditionalInfo struct {
	state              protoimpl.MessageState                                           `protogen:"open.v1"`
	SequencersActiveAt map[string]*BftSequencerSnapshotAdditionalInfo_SequencerActiveAt `protobuf:"bytes,1,rep,name=sequencers_active_at,json=sequencersActiveAt,proto3" json:"sequencers_active_at,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BftSequencerSnapshotAdditionalInfo) Reset() {
	*x = BftSequencerSnapshotAdditionalInfo{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BftSequencerSnapshotAdditionalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BftSequencerSnapshotAdditionalInfo) ProtoMessage() {}

func (x *BftSequencerSnapshotAdditionalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BftSequencerSnapshotAdditionalInfo.ProtoReflect.Descriptor instead.
func (*BftSequencerSnapshotAdditionalInfo) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDescGZIP(), []int{0}
}

func (x *BftSequencerSnapshotAdditionalInfo) GetSequencersActiveAt() map[string]*BftSequencerSnapshotAdditionalInfo_SequencerActiveAt {
	if x != nil {
		return x.SequencersActiveAt
	}
	return nil
}

type BftSequencerSnapshotAdditionalInfo_SequencerActiveAt struct {
	state                                protoimpl.MessageState `protogen:"open.v1"`
	Timestamp                            int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	StartEpochNumber                     *int64                 `protobuf:"varint,2,opt,name=start_epoch_number,json=startEpochNumber,proto3,oneof" json:"start_epoch_number,omitempty"`
	FirstBlockNumberInStartEpoch         *int64                 `protobuf:"varint,3,opt,name=first_block_number_in_start_epoch,json=firstBlockNumberInStartEpoch,proto3,oneof" json:"first_block_number_in_start_epoch,omitempty"`
	StartEpochTopologyQueryTimestamp     *int64                 `protobuf:"varint,4,opt,name=start_epoch_topology_query_timestamp,json=startEpochTopologyQueryTimestamp,proto3,oneof" json:"start_epoch_topology_query_timestamp,omitempty"`
	StartEpochCouldAlterOrderingTopology *bool                  `protobuf:"varint,5,opt,name=start_epoch_could_alter_ordering_topology,json=startEpochCouldAlterOrderingTopology,proto3,oneof" json:"start_epoch_could_alter_ordering_topology,omitempty"`
	PreviousBftTime                      *int64                 `protobuf:"varint,6,opt,name=previous_bft_time,json=previousBftTime,proto3,oneof" json:"previous_bft_time,omitempty"`
	PreviousEpochTopologyQueryTimestamp  *int64                 `protobuf:"varint,7,opt,name=previous_epoch_topology_query_timestamp,json=previousEpochTopologyQueryTimestamp,proto3,oneof" json:"previous_epoch_topology_query_timestamp,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) Reset() {
	*x = BftSequencerSnapshotAdditionalInfo_SequencerActiveAt{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) ProtoMessage() {}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BftSequencerSnapshotAdditionalInfo_SequencerActiveAt.ProtoReflect.Descriptor instead.
func (*BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) GetStartEpochNumber() int64 {
	if x != nil && x.StartEpochNumber != nil {
		return *x.StartEpochNumber
	}
	return 0
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) GetFirstBlockNumberInStartEpoch() int64 {
	if x != nil && x.FirstBlockNumberInStartEpoch != nil {
		return *x.FirstBlockNumberInStartEpoch
	}
	return 0
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) GetStartEpochTopologyQueryTimestamp() int64 {
	if x != nil && x.StartEpochTopologyQueryTimestamp != nil {
		return *x.StartEpochTopologyQueryTimestamp
	}
	return 0
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) GetStartEpochCouldAlterOrderingTopology() bool {
	if x != nil && x.StartEpochCouldAlterOrderingTopology != nil {
		return *x.StartEpochCouldAlterOrderingTopology
	}
	return false
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) GetPreviousBftTime() int64 {
	if x != nil && x.PreviousBftTime != nil {
		return *x.PreviousBftTime
	}
	return 0
}

func (x *BftSequencerSnapshotAdditionalInfo_SequencerActiveAt) GetPreviousEpochTopologyQueryTimestamp() int64 {
	if x != nil && x.PreviousEpochTopologyQueryTimestamp != nil {
		return *x.PreviousEpochTopologyQueryTimestamp
	}
	return 0
}

var File_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDesc = "" +
	"\n" +
	"Xcom/digitalasset/canton/sequencer/admin/v30/sequencer_bft_additional_snapshot_info.proto\x12+com.digitalasset.canton.sequencer.admin.v30\"\xb5\b\n" +
	"\"BftSequencerSnapshotAdditionalInfo\x12\x99\x01\n" +
	"\x14sequencers_active_at\x18\x01 \x03(\v2g.com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencersActiveAtEntryR\x12sequencersActiveAt\x1a\xa8\x01\n" +
	"\x17SequencersActiveAtEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12w\n" +
	"\x05value\x18\x02 \x01(\v2a.com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencerActiveAtR\x05value:\x028\x01\x1a\xc7\x05\n" +
	"\x11SequencerActiveAt\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x121\n" +
	"\x12start_epoch_number\x18\x02 \x01(\x03H\x00R\x10startEpochNumber\x88\x01\x01\x12L\n" +
	"!first_block_number_in_start_epoch\x18\x03 \x01(\x03H\x01R\x1cfirstBlockNumberInStartEpoch\x88\x01\x01\x12S\n" +
	"$start_epoch_topology_query_timestamp\x18\x04 \x01(\x03H\x02R startEpochTopologyQueryTimestamp\x88\x01\x01\x12\\\n" +
	")start_epoch_could_alter_ordering_topology\x18\x05 \x01(\bH\x03R$startEpochCouldAlterOrderingTopology\x88\x01\x01\x12/\n" +
	"\x11previous_bft_time\x18\x06 \x01(\x03H\x04R\x0fpreviousBftTime\x88\x01\x01\x12Y\n" +
	"'previous_epoch_topology_query_timestamp\x18\a \x01(\x03H\x05R#previousEpochTopologyQueryTimestamp\x88\x01\x01B\x15\n" +
	"\x13_start_epoch_numberB$\n" +
	"\"_first_block_number_in_start_epochB'\n" +
	"%_start_epoch_topology_query_timestampB,\n" +
	"*_start_epoch_could_alter_ordering_topologyB\x14\n" +
	"\x12_previous_bft_timeB*\n" +
	"(_previous_epoch_topology_query_timestampB\\ZZgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/sequencer/admin/v30b\x06proto3"

var (
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDescData []byte
)

func file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDesc), len(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDescData
}

var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_goTypes = []any{
	(*BftSequencerSnapshotAdditionalInfo)(nil), // 0: com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo
	nil, // 1: com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencersActiveAtEntry
	(*BftSequencerSnapshotAdditionalInfo_SequencerActiveAt)(nil), // 2: com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencerActiveAt
}
var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_depIdxs = []int32{
	1, // 0: com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.sequencers_active_at:type_name -> com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencersActiveAtEntry
	2, // 1: com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencersActiveAtEntry.value:type_name -> com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencerActiveAt
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() {
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_init()
}
func file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_init() {
	if File_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto != nil {
		return
	}
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDesc), len(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto = out.File
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_goTypes = nil
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_additional_snapshot_info_proto_depIdxs = nil
}
