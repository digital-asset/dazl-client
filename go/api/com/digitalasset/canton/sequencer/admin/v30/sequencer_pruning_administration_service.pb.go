// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/sequencer/admin/v30/sequencer_pruning_administration_service.proto

package v30

import (
	v30 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/admin/pruning/v30"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PruneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PruneRequest) Reset() {
	*x = PruneRequest{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruneRequest) ProtoMessage() {}

func (x *PruneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruneRequest.ProtoReflect.Descriptor instead.
func (*PruneRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDescGZIP(), []int{0}
}

func (x *PruneRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type PruneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       string                 `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PruneResponse) Reset() {
	*x = PruneResponse{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruneResponse) ProtoMessage() {}

func (x *PruneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruneResponse.ProtoReflect.Descriptor instead.
func (*PruneResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDescGZIP(), []int{1}
}

func (x *PruneResponse) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

var File_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDesc = "" +
	"\n" +
	"Zcom/digitalasset/canton/sequencer/admin/v30/sequencer_pruning_administration_service.proto\x12+com.digitalasset.canton.sequencer.admin.v30\x1a7com/digitalasset/canton/admin/pruning/v30/pruning.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"H\n" +
	"\fPruneRequest\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\")\n" +
	"\rPruneResponse\x12\x18\n" +
	"\adetails\x18\x01 \x01(\tR\adetails2\xb7\t\n" +
	"%SequencerPruningAdministrationService\x12~\n" +
	"\x05Prune\x129.com.digitalasset.canton.sequencer.admin.v30.PruneRequest\x1a:.com.digitalasset.canton.sequencer.admin.v30.PruneResponse\x12\x8c\x01\n" +
	"\vSetSchedule\x12=.com.digitalasset.canton.admin.pruning.v30.SetScheduleRequest\x1a>.com.digitalasset.canton.admin.pruning.v30.SetScheduleResponse\x12\x80\x01\n" +
	"\aSetCron\x129.com.digitalasset.canton.admin.pruning.v30.SetCronRequest\x1a:.com.digitalasset.canton.admin.pruning.v30.SetCronResponse\x12\x95\x01\n" +
	"\x0eSetMaxDuration\x12@.com.digitalasset.canton.admin.pruning.v30.SetMaxDurationRequest\x1aA.com.digitalasset.canton.admin.pruning.v30.SetMaxDurationResponse\x12\x8f\x01\n" +
	"\fSetRetention\x12>.com.digitalasset.canton.admin.pruning.v30.SetRetentionRequest\x1a?.com.digitalasset.canton.admin.pruning.v30.SetRetentionResponse\x12\x92\x01\n" +
	"\rClearSchedule\x12?.com.digitalasset.canton.admin.pruning.v30.ClearScheduleRequest\x1a@.com.digitalasset.canton.admin.pruning.v30.ClearScheduleResponse\x12\x8c\x01\n" +
	"\vGetSchedule\x12=.com.digitalasset.canton.admin.pruning.v30.GetScheduleRequest\x1a>.com.digitalasset.canton.admin.pruning.v30.GetScheduleResponse\x12\xad\x01\n" +
	"\x16LocatePruningTimestamp\x12H.com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestampRequest\x1aI.com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestampResponseB\\ZZgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/sequencer/admin/v30b\x06proto3"

var (
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDescData []byte
)

func file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDesc), len(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDescData
}

var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_goTypes = []any{
	(*PruneRequest)(nil),                       // 0: com.digitalasset.canton.sequencer.admin.v30.PruneRequest
	(*PruneResponse)(nil),                      // 1: com.digitalasset.canton.sequencer.admin.v30.PruneResponse
	(*timestamppb.Timestamp)(nil),              // 2: google.protobuf.Timestamp
	(*v30.SetScheduleRequest)(nil),             // 3: com.digitalasset.canton.admin.pruning.v30.SetScheduleRequest
	(*v30.SetCronRequest)(nil),                 // 4: com.digitalasset.canton.admin.pruning.v30.SetCronRequest
	(*v30.SetMaxDurationRequest)(nil),          // 5: com.digitalasset.canton.admin.pruning.v30.SetMaxDurationRequest
	(*v30.SetRetentionRequest)(nil),            // 6: com.digitalasset.canton.admin.pruning.v30.SetRetentionRequest
	(*v30.ClearScheduleRequest)(nil),           // 7: com.digitalasset.canton.admin.pruning.v30.ClearScheduleRequest
	(*v30.GetScheduleRequest)(nil),             // 8: com.digitalasset.canton.admin.pruning.v30.GetScheduleRequest
	(*v30.LocatePruningTimestampRequest)(nil),  // 9: com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestampRequest
	(*v30.SetScheduleResponse)(nil),            // 10: com.digitalasset.canton.admin.pruning.v30.SetScheduleResponse
	(*v30.SetCronResponse)(nil),                // 11: com.digitalasset.canton.admin.pruning.v30.SetCronResponse
	(*v30.SetMaxDurationResponse)(nil),         // 12: com.digitalasset.canton.admin.pruning.v30.SetMaxDurationResponse
	(*v30.SetRetentionResponse)(nil),           // 13: com.digitalasset.canton.admin.pruning.v30.SetRetentionResponse
	(*v30.ClearScheduleResponse)(nil),          // 14: com.digitalasset.canton.admin.pruning.v30.ClearScheduleResponse
	(*v30.GetScheduleResponse)(nil),            // 15: com.digitalasset.canton.admin.pruning.v30.GetScheduleResponse
	(*v30.LocatePruningTimestampResponse)(nil), // 16: com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestampResponse
}
var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_depIdxs = []int32{
	2,  // 0: com.digitalasset.canton.sequencer.admin.v30.PruneRequest.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 1: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.Prune:input_type -> com.digitalasset.canton.sequencer.admin.v30.PruneRequest
	3,  // 2: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.SetSchedule:input_type -> com.digitalasset.canton.admin.pruning.v30.SetScheduleRequest
	4,  // 3: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.SetCron:input_type -> com.digitalasset.canton.admin.pruning.v30.SetCronRequest
	5,  // 4: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.SetMaxDuration:input_type -> com.digitalasset.canton.admin.pruning.v30.SetMaxDurationRequest
	6,  // 5: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.SetRetention:input_type -> com.digitalasset.canton.admin.pruning.v30.SetRetentionRequest
	7,  // 6: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.ClearSchedule:input_type -> com.digitalasset.canton.admin.pruning.v30.ClearScheduleRequest
	8,  // 7: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.GetSchedule:input_type -> com.digitalasset.canton.admin.pruning.v30.GetScheduleRequest
	9,  // 8: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.LocatePruningTimestamp:input_type -> com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestampRequest
	1,  // 9: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.Prune:output_type -> com.digitalasset.canton.sequencer.admin.v30.PruneResponse
	10, // 10: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.SetSchedule:output_type -> com.digitalasset.canton.admin.pruning.v30.SetScheduleResponse
	11, // 11: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.SetCron:output_type -> com.digitalasset.canton.admin.pruning.v30.SetCronResponse
	12, // 12: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.SetMaxDuration:output_type -> com.digitalasset.canton.admin.pruning.v30.SetMaxDurationResponse
	13, // 13: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.SetRetention:output_type -> com.digitalasset.canton.admin.pruning.v30.SetRetentionResponse
	14, // 14: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.ClearSchedule:output_type -> com.digitalasset.canton.admin.pruning.v30.ClearScheduleResponse
	15, // 15: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.GetSchedule:output_type -> com.digitalasset.canton.admin.pruning.v30.GetScheduleResponse
	16, // 16: com.digitalasset.canton.sequencer.admin.v30.SequencerPruningAdministrationService.LocatePruningTimestamp:output_type -> com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestampResponse
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() {
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_init()
}
func file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_init() {
	if File_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDesc), len(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto = out.File
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_goTypes = nil
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_pruning_administration_service_proto_depIdxs = nil
}
