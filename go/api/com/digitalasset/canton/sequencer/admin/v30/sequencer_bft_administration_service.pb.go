// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/sequencer/admin/v30/sequencer_bft_administration_service.proto

package v30

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerEndpointHealthStatus int32

const (
	PeerEndpointHealthStatus_PEER_ENDPOINT_HEALTH_STATUS_UNSPECIFIED      PeerEndpointHealthStatus = 0
	PeerEndpointHealthStatus_PEER_ENDPOINT_HEALTH_STATUS_UNKNOWN_ENDPOINT PeerEndpointHealthStatus = 1
	PeerEndpointHealthStatus_PEER_ENDPOINT_HEALTH_STATUS_UNAUTHENTICATED  PeerEndpointHealthStatus = 3
	PeerEndpointHealthStatus_PEER_ENDPOINT_HEALTH_STATUS_AUTHENTICATED    PeerEndpointHealthStatus = 4
)

// Enum value maps for PeerEndpointHealthStatus.
var (
	PeerEndpointHealthStatus_name = map[int32]string{
		0: "PEER_ENDPOINT_HEALTH_STATUS_UNSPECIFIED",
		1: "PEER_ENDPOINT_HEALTH_STATUS_UNKNOWN_ENDPOINT",
		3: "PEER_ENDPOINT_HEALTH_STATUS_UNAUTHENTICATED",
		4: "PEER_ENDPOINT_HEALTH_STATUS_AUTHENTICATED",
	}
	PeerEndpointHealthStatus_value = map[string]int32{
		"PEER_ENDPOINT_HEALTH_STATUS_UNSPECIFIED":      0,
		"PEER_ENDPOINT_HEALTH_STATUS_UNKNOWN_ENDPOINT": 1,
		"PEER_ENDPOINT_HEALTH_STATUS_UNAUTHENTICATED":  3,
		"PEER_ENDPOINT_HEALTH_STATUS_AUTHENTICATED":    4,
	}
)

func (x PeerEndpointHealthStatus) Enum() *PeerEndpointHealthStatus {
	p := new(PeerEndpointHealthStatus)
	*p = x
	return p
}

func (x PeerEndpointHealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerEndpointHealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_enumTypes[0].Descriptor()
}

func (PeerEndpointHealthStatus) Type() protoreflect.EnumType {
	return &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_enumTypes[0]
}

func (x PeerEndpointHealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerEndpointHealthStatus.Descriptor instead.
func (PeerEndpointHealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{0}
}

type AddPeerEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *PeerEndpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *AddPeerEndpointRequest) Reset() {
	*x = AddPeerEndpointRequest{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPeerEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerEndpointRequest) ProtoMessage() {}

func (x *AddPeerEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerEndpointRequest.ProtoReflect.Descriptor instead.
func (*AddPeerEndpointRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddPeerEndpointRequest) GetEndpoint() *PeerEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type RemovePeerEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *PeerEndpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *RemovePeerEndpointRequest) Reset() {
	*x = RemovePeerEndpointRequest{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePeerEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerEndpointRequest) ProtoMessage() {}

func (x *RemovePeerEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerEndpointRequest.ProtoReflect.Descriptor instead.
func (*RemovePeerEndpointRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{1}
}

func (x *RemovePeerEndpointRequest) GetEndpoint() *PeerEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

type PeerEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PeerEndpoint) Reset() {
	*x = PeerEndpoint{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerEndpoint) ProtoMessage() {}

func (x *PeerEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerEndpoint.ProtoReflect.Descriptor instead.
func (*PeerEndpoint) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{2}
}

func (x *PeerEndpoint) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PeerEndpoint) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type AddPeerEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added bool `protobuf:"varint,1,opt,name=added,proto3" json:"added,omitempty"`
}

func (x *AddPeerEndpointResponse) Reset() {
	*x = AddPeerEndpointResponse{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPeerEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPeerEndpointResponse) ProtoMessage() {}

func (x *AddPeerEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPeerEndpointResponse.ProtoReflect.Descriptor instead.
func (*AddPeerEndpointResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{3}
}

func (x *AddPeerEndpointResponse) GetAdded() bool {
	if x != nil {
		return x.Added
	}
	return false
}

type RemovePeerEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removed bool `protobuf:"varint,1,opt,name=removed,proto3" json:"removed,omitempty"`
}

func (x *RemovePeerEndpointResponse) Reset() {
	*x = RemovePeerEndpointResponse{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePeerEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePeerEndpointResponse) ProtoMessage() {}

func (x *RemovePeerEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePeerEndpointResponse.ProtoReflect.Descriptor instead.
func (*RemovePeerEndpointResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{4}
}

func (x *RemovePeerEndpointResponse) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

type PeerEndpointHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      PeerEndpointHealthStatus `protobuf:"varint,1,opt,name=status,proto3,enum=com.digitalasset.canton.sequencer.admin.v30.PeerEndpointHealthStatus" json:"status,omitempty"`
	Description *wrapperspb.StringValue  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PeerEndpointHealth) Reset() {
	*x = PeerEndpointHealth{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerEndpointHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerEndpointHealth) ProtoMessage() {}

func (x *PeerEndpointHealth) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerEndpointHealth.ProtoReflect.Descriptor instead.
func (*PeerEndpointHealth) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{5}
}

func (x *PeerEndpointHealth) GetStatus() PeerEndpointHealthStatus {
	if x != nil {
		return x.Status
	}
	return PeerEndpointHealthStatus_PEER_ENDPOINT_HEALTH_STATUS_UNSPECIFIED
}

func (x *PeerEndpointHealth) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

type PeerEndpointStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint *PeerEndpoint       `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Health   *PeerEndpointHealth `protobuf:"bytes,2,opt,name=health,proto3" json:"health,omitempty"`
}

func (x *PeerEndpointStatus) Reset() {
	*x = PeerEndpointStatus{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerEndpointStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerEndpointStatus) ProtoMessage() {}

func (x *PeerEndpointStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerEndpointStatus.ProtoReflect.Descriptor instead.
func (*PeerEndpointStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{6}
}

func (x *PeerEndpointStatus) GetEndpoint() *PeerEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *PeerEndpointStatus) GetHealth() *PeerEndpointHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

type GetPeerNetworkStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoints []*PeerEndpoint `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
}

func (x *GetPeerNetworkStatusRequest) Reset() {
	*x = GetPeerNetworkStatusRequest{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeerNetworkStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerNetworkStatusRequest) ProtoMessage() {}

func (x *GetPeerNetworkStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerNetworkStatusRequest.ProtoReflect.Descriptor instead.
func (*GetPeerNetworkStatusRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetPeerNetworkStatusRequest) GetEndpoints() []*PeerEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

type GetPeerNetworkStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses []*PeerEndpointStatus `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
}

func (x *GetPeerNetworkStatusResponse) Reset() {
	*x = GetPeerNetworkStatusResponse{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeerNetworkStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerNetworkStatusResponse) ProtoMessage() {}

func (x *GetPeerNetworkStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerNetworkStatusResponse.ProtoReflect.Descriptor instead.
func (*GetPeerNetworkStatusResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetPeerNetworkStatusResponse) GetStatuses() []*PeerEndpointStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type GetOrderingTopologyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrderingTopologyRequest) Reset() {
	*x = GetOrderingTopologyRequest{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderingTopologyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderingTopologyRequest) ProtoMessage() {}

func (x *GetOrderingTopologyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderingTopologyRequest.ProtoReflect.Descriptor instead.
func (*GetOrderingTopologyRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{9}
}

type GetOrderingTopologyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentEpoch int64    `protobuf:"varint,1,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	SequencerIds []string `protobuf:"bytes,2,rep,name=sequencer_ids,json=sequencerIds,proto3" json:"sequencer_ids,omitempty"`
}

func (x *GetOrderingTopologyResponse) Reset() {
	*x = GetOrderingTopologyResponse{}
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderingTopologyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderingTopologyResponse) ProtoMessage() {}

func (x *GetOrderingTopologyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderingTopologyResponse.ProtoReflect.Descriptor instead.
func (*GetOrderingTopologyResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetOrderingTopologyResponse) GetCurrentEpoch() int64 {
	if x != nil {
		return x.CurrentEpoch
	}
	return 0
}

func (x *GetOrderingTopologyResponse) GetSequencerIds() []string {
	if x != nil {
		return x.SequencerIds
	}
	return nil
}

var File_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDesc = []byte{
	0x0a, 0x56, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x62, 0x66, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x33, 0x30, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x55, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x33, 0x30, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x0c, 0x50, 0x65,
	0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x2f, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65,
	0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x12,
	0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x5d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x55, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x57, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x76, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x22, 0x7b, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5b, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x1c, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x2a, 0xd9, 0x01, 0x0a, 0x18, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2b, 0x0a, 0x27, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49,
	0x4e, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x30,
	0x0a, 0x2c, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f,
	0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x01,
	0x12, 0x2f, 0x0a, 0x2b, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x2d, 0x0a, 0x29, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49,
	0x4e, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04,
	0x32, 0xc3, 0x05, 0x0a, 0x21, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x42, 0x66,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x65,
	0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x43, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa5, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x46, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e,
	0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xab, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x33, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x12, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33,
	0x30, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e,
	0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x5c, 0x5a, 0x5a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x76, 0x33, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescData = file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDesc
)

func file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescData)
	})
	return file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDescData
}

var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_goTypes = []any{
	(PeerEndpointHealthStatus)(0),        // 0: com.digitalasset.canton.sequencer.admin.v30.PeerEndpointHealthStatus
	(*AddPeerEndpointRequest)(nil),       // 1: com.digitalasset.canton.sequencer.admin.v30.AddPeerEndpointRequest
	(*RemovePeerEndpointRequest)(nil),    // 2: com.digitalasset.canton.sequencer.admin.v30.RemovePeerEndpointRequest
	(*PeerEndpoint)(nil),                 // 3: com.digitalasset.canton.sequencer.admin.v30.PeerEndpoint
	(*AddPeerEndpointResponse)(nil),      // 4: com.digitalasset.canton.sequencer.admin.v30.AddPeerEndpointResponse
	(*RemovePeerEndpointResponse)(nil),   // 5: com.digitalasset.canton.sequencer.admin.v30.RemovePeerEndpointResponse
	(*PeerEndpointHealth)(nil),           // 6: com.digitalasset.canton.sequencer.admin.v30.PeerEndpointHealth
	(*PeerEndpointStatus)(nil),           // 7: com.digitalasset.canton.sequencer.admin.v30.PeerEndpointStatus
	(*GetPeerNetworkStatusRequest)(nil),  // 8: com.digitalasset.canton.sequencer.admin.v30.GetPeerNetworkStatusRequest
	(*GetPeerNetworkStatusResponse)(nil), // 9: com.digitalasset.canton.sequencer.admin.v30.GetPeerNetworkStatusResponse
	(*GetOrderingTopologyRequest)(nil),   // 10: com.digitalasset.canton.sequencer.admin.v30.GetOrderingTopologyRequest
	(*GetOrderingTopologyResponse)(nil),  // 11: com.digitalasset.canton.sequencer.admin.v30.GetOrderingTopologyResponse
	(*wrapperspb.StringValue)(nil),       // 12: google.protobuf.StringValue
}
var file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_depIdxs = []int32{
	3,  // 0: com.digitalasset.canton.sequencer.admin.v30.AddPeerEndpointRequest.endpoint:type_name -> com.digitalasset.canton.sequencer.admin.v30.PeerEndpoint
	3,  // 1: com.digitalasset.canton.sequencer.admin.v30.RemovePeerEndpointRequest.endpoint:type_name -> com.digitalasset.canton.sequencer.admin.v30.PeerEndpoint
	0,  // 2: com.digitalasset.canton.sequencer.admin.v30.PeerEndpointHealth.status:type_name -> com.digitalasset.canton.sequencer.admin.v30.PeerEndpointHealthStatus
	12, // 3: com.digitalasset.canton.sequencer.admin.v30.PeerEndpointHealth.description:type_name -> google.protobuf.StringValue
	3,  // 4: com.digitalasset.canton.sequencer.admin.v30.PeerEndpointStatus.endpoint:type_name -> com.digitalasset.canton.sequencer.admin.v30.PeerEndpoint
	6,  // 5: com.digitalasset.canton.sequencer.admin.v30.PeerEndpointStatus.health:type_name -> com.digitalasset.canton.sequencer.admin.v30.PeerEndpointHealth
	3,  // 6: com.digitalasset.canton.sequencer.admin.v30.GetPeerNetworkStatusRequest.endpoints:type_name -> com.digitalasset.canton.sequencer.admin.v30.PeerEndpoint
	7,  // 7: com.digitalasset.canton.sequencer.admin.v30.GetPeerNetworkStatusResponse.statuses:type_name -> com.digitalasset.canton.sequencer.admin.v30.PeerEndpointStatus
	1,  // 8: com.digitalasset.canton.sequencer.admin.v30.SequencerBftAdministrationService.AddPeerEndpoint:input_type -> com.digitalasset.canton.sequencer.admin.v30.AddPeerEndpointRequest
	2,  // 9: com.digitalasset.canton.sequencer.admin.v30.SequencerBftAdministrationService.RemovePeerEndpoint:input_type -> com.digitalasset.canton.sequencer.admin.v30.RemovePeerEndpointRequest
	8,  // 10: com.digitalasset.canton.sequencer.admin.v30.SequencerBftAdministrationService.GetPeerNetworkStatus:input_type -> com.digitalasset.canton.sequencer.admin.v30.GetPeerNetworkStatusRequest
	10, // 11: com.digitalasset.canton.sequencer.admin.v30.SequencerBftAdministrationService.GetOrderingTopology:input_type -> com.digitalasset.canton.sequencer.admin.v30.GetOrderingTopologyRequest
	4,  // 12: com.digitalasset.canton.sequencer.admin.v30.SequencerBftAdministrationService.AddPeerEndpoint:output_type -> com.digitalasset.canton.sequencer.admin.v30.AddPeerEndpointResponse
	5,  // 13: com.digitalasset.canton.sequencer.admin.v30.SequencerBftAdministrationService.RemovePeerEndpoint:output_type -> com.digitalasset.canton.sequencer.admin.v30.RemovePeerEndpointResponse
	9,  // 14: com.digitalasset.canton.sequencer.admin.v30.SequencerBftAdministrationService.GetPeerNetworkStatus:output_type -> com.digitalasset.canton.sequencer.admin.v30.GetPeerNetworkStatusResponse
	11, // 15: com.digitalasset.canton.sequencer.admin.v30.SequencerBftAdministrationService.GetOrderingTopology:output_type -> com.digitalasset.canton.sequencer.admin.v30.GetOrderingTopologyResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() {
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_init()
}
func file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_init() {
	if File_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_depIdxs,
		EnumInfos:         file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_enumTypes,
		MessageInfos:      file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto = out.File
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_rawDesc = nil
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_goTypes = nil
	file_com_digitalasset_canton_sequencer_admin_v30_sequencer_bft_administration_service_proto_depIdxs = nil
}
