// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/admin/domain/v30/sequencer_connection.proto

package v30

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SequencerConnectionValidation int32

const (
	SequencerConnectionValidation_UNKNOWN  SequencerConnectionValidation = 0
	SequencerConnectionValidation_DISABLED SequencerConnectionValidation = 1
	SequencerConnectionValidation_ACTIVE   SequencerConnectionValidation = 2
	SequencerConnectionValidation_ALL      SequencerConnectionValidation = 3
)

// Enum value maps for SequencerConnectionValidation.
var (
	SequencerConnectionValidation_name = map[int32]string{
		0: "UNKNOWN",
		1: "DISABLED",
		2: "ACTIVE",
		3: "ALL",
	}
	SequencerConnectionValidation_value = map[string]int32{
		"UNKNOWN":  0,
		"DISABLED": 1,
		"ACTIVE":   2,
		"ALL":      3,
	}
)

func (x SequencerConnectionValidation) Enum() *SequencerConnectionValidation {
	p := new(SequencerConnectionValidation)
	*p = x
	return p
}

func (x SequencerConnectionValidation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SequencerConnectionValidation) Descriptor() protoreflect.EnumDescriptor {
	return file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_enumTypes[0].Descriptor()
}

func (SequencerConnectionValidation) Type() protoreflect.EnumType {
	return &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_enumTypes[0]
}

func (x SequencerConnectionValidation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SequencerConnectionValidation.Descriptor instead.
func (SequencerConnectionValidation) EnumDescriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescGZIP(), []int{0}
}

type SequencerConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*SequencerConnection_Grpc_
	Type  isSequencerConnection_Type `protobuf_oneof:"type"`
	Alias string                     `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *SequencerConnection) Reset() {
	*x = SequencerConnection{}
	mi := &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnection) ProtoMessage() {}

func (x *SequencerConnection) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnection.ProtoReflect.Descriptor instead.
func (*SequencerConnection) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescGZIP(), []int{0}
}

func (m *SequencerConnection) GetType() isSequencerConnection_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SequencerConnection) GetGrpc() *SequencerConnection_Grpc {
	if x, ok := x.GetType().(*SequencerConnection_Grpc_); ok {
		return x.Grpc
	}
	return nil
}

func (x *SequencerConnection) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type isSequencerConnection_Type interface {
	isSequencerConnection_Type()
}

type SequencerConnection_Grpc_ struct {
	Grpc *SequencerConnection_Grpc `protobuf:"bytes,2,opt,name=grpc,proto3,oneof"`
}

func (*SequencerConnection_Grpc_) isSequencerConnection_Type() {}

type SequencerConnections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequencerConnections           []*SequencerConnection          `protobuf:"bytes,1,rep,name=sequencer_connections,json=sequencerConnections,proto3" json:"sequencer_connections,omitempty"`
	SequencerTrustThreshold        uint32                          `protobuf:"varint,2,opt,name=sequencerTrustThreshold,proto3" json:"sequencerTrustThreshold,omitempty"`
	SubmissionRequestAmplification *SubmissionRequestAmplification `protobuf:"bytes,3,opt,name=submission_request_amplification,json=submissionRequestAmplification,proto3" json:"submission_request_amplification,omitempty"`
}

func (x *SequencerConnections) Reset() {
	*x = SequencerConnections{}
	mi := &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnections) ProtoMessage() {}

func (x *SequencerConnections) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnections.ProtoReflect.Descriptor instead.
func (*SequencerConnections) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescGZIP(), []int{1}
}

func (x *SequencerConnections) GetSequencerConnections() []*SequencerConnection {
	if x != nil {
		return x.SequencerConnections
	}
	return nil
}

func (x *SequencerConnections) GetSequencerTrustThreshold() uint32 {
	if x != nil {
		return x.SequencerTrustThreshold
	}
	return 0
}

func (x *SequencerConnections) GetSubmissionRequestAmplification() *SubmissionRequestAmplification {
	if x != nil {
		return x.SubmissionRequestAmplification
	}
	return nil
}

type SubmissionRequestAmplification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Factor   uint32               `protobuf:"varint,1,opt,name=factor,proto3" json:"factor,omitempty"`
	Patience *durationpb.Duration `protobuf:"bytes,2,opt,name=patience,proto3" json:"patience,omitempty"`
}

func (x *SubmissionRequestAmplification) Reset() {
	*x = SubmissionRequestAmplification{}
	mi := &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionRequestAmplification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionRequestAmplification) ProtoMessage() {}

func (x *SubmissionRequestAmplification) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionRequestAmplification.ProtoReflect.Descriptor instead.
func (*SubmissionRequestAmplification) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescGZIP(), []int{2}
}

func (x *SubmissionRequestAmplification) GetFactor() uint32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *SubmissionRequestAmplification) GetPatience() *durationpb.Duration {
	if x != nil {
		return x.Patience
	}
	return nil
}

type SequencerConnection_Grpc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections             []string               `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	TransportSecurity       bool                   `protobuf:"varint,2,opt,name=transportSecurity,proto3" json:"transportSecurity,omitempty"`
	CustomTrustCertificates *wrapperspb.BytesValue `protobuf:"bytes,3,opt,name=customTrustCertificates,proto3" json:"customTrustCertificates,omitempty"`
}

func (x *SequencerConnection_Grpc) Reset() {
	*x = SequencerConnection_Grpc{}
	mi := &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnection_Grpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnection_Grpc) ProtoMessage() {}

func (x *SequencerConnection_Grpc) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnection_Grpc.ProtoReflect.Descriptor instead.
func (*SequencerConnection_Grpc) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SequencerConnection_Grpc) GetConnections() []string {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *SequencerConnection_Grpc) GetTransportSecurity() bool {
	if x != nil {
		return x.TransportSecurity
	}
	return false
}

func (x *SequencerConnection_Grpc) GetCustomTrustCertificates() *wrapperspb.BytesValue {
	if x != nil {
		return x.CustomTrustCertificates
	}
	return nil
}

var File_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDesc = []byte{
	0x0a, 0x43, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xbd, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x48, 0x00, 0x52, 0x04, 0x67, 0x72, 0x70,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x1a, 0xad, 0x01, 0x0a, 0x04, 0x47, 0x72, 0x70, 0x63,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x55, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x72, 0x75, 0x73, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x17,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x72, 0x75, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xd9, 0x02, 0x0a, 0x14, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x72, 0x0a, 0x15, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x17,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x54, 0x72, 0x75, 0x73, 0x74, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x92, 0x01, 0x0a, 0x20, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6d,
	0x70, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6d,
	0x70, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1e, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6d,
	0x70, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x1e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x6d, 0x70, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x2a, 0x4f, 0x0a, 0x1d,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x42, 0x59, 0x5a,
	0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x33, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescData = file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDesc
)

func file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescData)
	})
	return file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDescData
}

var file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_goTypes = []any{
	(SequencerConnectionValidation)(0),     // 0: com.digitalasset.canton.admin.domain.v30.SequencerConnectionValidation
	(*SequencerConnection)(nil),            // 1: com.digitalasset.canton.admin.domain.v30.SequencerConnection
	(*SequencerConnections)(nil),           // 2: com.digitalasset.canton.admin.domain.v30.SequencerConnections
	(*SubmissionRequestAmplification)(nil), // 3: com.digitalasset.canton.admin.domain.v30.SubmissionRequestAmplification
	(*SequencerConnection_Grpc)(nil),       // 4: com.digitalasset.canton.admin.domain.v30.SequencerConnection.Grpc
	(*durationpb.Duration)(nil),            // 5: google.protobuf.Duration
	(*wrapperspb.BytesValue)(nil),          // 6: google.protobuf.BytesValue
}
var file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_depIdxs = []int32{
	4, // 0: com.digitalasset.canton.admin.domain.v30.SequencerConnection.grpc:type_name -> com.digitalasset.canton.admin.domain.v30.SequencerConnection.Grpc
	1, // 1: com.digitalasset.canton.admin.domain.v30.SequencerConnections.sequencer_connections:type_name -> com.digitalasset.canton.admin.domain.v30.SequencerConnection
	3, // 2: com.digitalasset.canton.admin.domain.v30.SequencerConnections.submission_request_amplification:type_name -> com.digitalasset.canton.admin.domain.v30.SubmissionRequestAmplification
	5, // 3: com.digitalasset.canton.admin.domain.v30.SubmissionRequestAmplification.patience:type_name -> google.protobuf.Duration
	6, // 4: com.digitalasset.canton.admin.domain.v30.SequencerConnection.Grpc.customTrustCertificates:type_name -> google.protobuf.BytesValue
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_init() }
func file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_init() {
	if File_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto != nil {
		return
	}
	file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes[0].OneofWrappers = []any{
		(*SequencerConnection_Grpc_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_depIdxs,
		EnumInfos:         file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_enumTypes,
		MessageInfos:      file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto = out.File
	file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_rawDesc = nil
	file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_goTypes = nil
	file_com_digitalasset_canton_admin_domain_v30_sequencer_connection_proto_depIdxs = nil
}
