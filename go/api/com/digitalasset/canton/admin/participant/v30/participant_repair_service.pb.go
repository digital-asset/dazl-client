// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/admin/participant/v30/participant_repair_service.proto

package v30

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PurgeContractsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain              string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	ContractIds         []string `protobuf:"bytes,2,rep,name=contract_ids,json=contractIds,proto3" json:"contract_ids,omitempty"`
	IgnoreAlreadyPurged bool     `protobuf:"varint,3,opt,name=ignore_already_purged,json=ignoreAlreadyPurged,proto3" json:"ignore_already_purged,omitempty"`
}

func (x *PurgeContractsRequest) Reset() {
	*x = PurgeContractsRequest{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeContractsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeContractsRequest) ProtoMessage() {}

func (x *PurgeContractsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeContractsRequest.ProtoReflect.Descriptor instead.
func (*PurgeContractsRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{0}
}

func (x *PurgeContractsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PurgeContractsRequest) GetContractIds() []string {
	if x != nil {
		return x.ContractIds
	}
	return nil
}

func (x *PurgeContractsRequest) GetIgnoreAlreadyPurged() bool {
	if x != nil {
		return x.IgnoreAlreadyPurged
	}
	return false
}

type PurgeContractsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PurgeContractsResponse) Reset() {
	*x = PurgeContractsResponse{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeContractsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeContractsResponse) ProtoMessage() {}

func (x *PurgeContractsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeContractsResponse.ProtoReflect.Descriptor instead.
func (*PurgeContractsResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{1}
}

type MigrateDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAlias                  string                  `protobuf:"bytes,1,opt,name=source_alias,json=sourceAlias,proto3" json:"source_alias,omitempty"`
	TargetDomainConnectionConfig *DomainConnectionConfig `protobuf:"bytes,2,opt,name=target_domain_connection_config,json=targetDomainConnectionConfig,proto3" json:"target_domain_connection_config,omitempty"`
	Force                        bool                    `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *MigrateDomainRequest) Reset() {
	*x = MigrateDomainRequest{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateDomainRequest) ProtoMessage() {}

func (x *MigrateDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateDomainRequest.ProtoReflect.Descriptor instead.
func (*MigrateDomainRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{2}
}

func (x *MigrateDomainRequest) GetSourceAlias() string {
	if x != nil {
		return x.SourceAlias
	}
	return ""
}

func (x *MigrateDomainRequest) GetTargetDomainConnectionConfig() *DomainConnectionConfig {
	if x != nil {
		return x.TargetDomainConnectionConfig
	}
	return nil
}

func (x *MigrateDomainRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type MigrateDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MigrateDomainResponse) Reset() {
	*x = MigrateDomainResponse{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MigrateDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateDomainResponse) ProtoMessage() {}

func (x *MigrateDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateDomainResponse.ProtoReflect.Descriptor instead.
func (*MigrateDomainResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{3}
}

type ExportAcsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parties               []string                                  `protobuf:"bytes,1,rep,name=parties,proto3" json:"parties,omitempty"`
	FilterDomainId        string                                    `protobuf:"bytes,2,opt,name=filter_domain_id,json=filterDomainId,proto3" json:"filter_domain_id,omitempty"`
	Timestamp             *timestamppb.Timestamp                    `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ContractDomainRenames map[string]*ExportAcsRequest_TargetDomain `protobuf:"bytes,4,rep,name=contract_domain_renames,json=contractDomainRenames,proto3" json:"contract_domain_renames,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Force                 bool                                      `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
	PartiesOffboarding    bool                                      `protobuf:"varint,6,opt,name=parties_offboarding,json=partiesOffboarding,proto3" json:"parties_offboarding,omitempty"`
}

func (x *ExportAcsRequest) Reset() {
	*x = ExportAcsRequest{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportAcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportAcsRequest) ProtoMessage() {}

func (x *ExportAcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportAcsRequest.ProtoReflect.Descriptor instead.
func (*ExportAcsRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{4}
}

func (x *ExportAcsRequest) GetParties() []string {
	if x != nil {
		return x.Parties
	}
	return nil
}

func (x *ExportAcsRequest) GetFilterDomainId() string {
	if x != nil {
		return x.FilterDomainId
	}
	return ""
}

func (x *ExportAcsRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ExportAcsRequest) GetContractDomainRenames() map[string]*ExportAcsRequest_TargetDomain {
	if x != nil {
		return x.ContractDomainRenames
	}
	return nil
}

func (x *ExportAcsRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ExportAcsRequest) GetPartiesOffboarding() bool {
	if x != nil {
		return x.PartiesOffboarding
	}
	return false
}

type ExportAcsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *ExportAcsResponse) Reset() {
	*x = ExportAcsResponse{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportAcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportAcsResponse) ProtoMessage() {}

func (x *ExportAcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportAcsResponse.ProtoReflect.Descriptor instead.
func (*ExportAcsResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{5}
}

func (x *ExportAcsResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type ImportAcsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcsSnapshot                        []byte `protobuf:"bytes,1,opt,name=acs_snapshot,json=acsSnapshot,proto3" json:"acs_snapshot,omitempty"`
	WorkflowIdPrefix                   string `protobuf:"bytes,2,opt,name=workflow_id_prefix,json=workflowIdPrefix,proto3" json:"workflow_id_prefix,omitempty"`
	AllowContractIdSuffixRecomputation bool   `protobuf:"varint,3,opt,name=allow_contract_id_suffix_recomputation,json=allowContractIdSuffixRecomputation,proto3" json:"allow_contract_id_suffix_recomputation,omitempty"`
}

func (x *ImportAcsRequest) Reset() {
	*x = ImportAcsRequest{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportAcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportAcsRequest) ProtoMessage() {}

func (x *ImportAcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportAcsRequest.ProtoReflect.Descriptor instead.
func (*ImportAcsRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{6}
}

func (x *ImportAcsRequest) GetAcsSnapshot() []byte {
	if x != nil {
		return x.AcsSnapshot
	}
	return nil
}

func (x *ImportAcsRequest) GetWorkflowIdPrefix() string {
	if x != nil {
		return x.WorkflowIdPrefix
	}
	return ""
}

func (x *ImportAcsRequest) GetAllowContractIdSuffixRecomputation() bool {
	if x != nil {
		return x.AllowContractIdSuffixRecomputation
	}
	return false
}

type ImportAcsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractIdMapping map[string]string `protobuf:"bytes,1,rep,name=contract_id_mapping,json=contractIdMapping,proto3" json:"contract_id_mapping,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ImportAcsResponse) Reset() {
	*x = ImportAcsResponse{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportAcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportAcsResponse) ProtoMessage() {}

func (x *ImportAcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportAcsResponse.ProtoReflect.Descriptor instead.
func (*ImportAcsResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{7}
}

func (x *ImportAcsResponse) GetContractIdMapping() map[string]string {
	if x != nil {
		return x.ContractIdMapping
	}
	return nil
}

type PurgeDeactivatedDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainAlias string `protobuf:"bytes,1,opt,name=domain_alias,json=domainAlias,proto3" json:"domain_alias,omitempty"`
}

func (x *PurgeDeactivatedDomainRequest) Reset() {
	*x = PurgeDeactivatedDomainRequest{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeDeactivatedDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeDeactivatedDomainRequest) ProtoMessage() {}

func (x *PurgeDeactivatedDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeDeactivatedDomainRequest.ProtoReflect.Descriptor instead.
func (*PurgeDeactivatedDomainRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{8}
}

func (x *PurgeDeactivatedDomainRequest) GetDomainAlias() string {
	if x != nil {
		return x.DomainAlias
	}
	return ""
}

type PurgeDeactivatedDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PurgeDeactivatedDomainResponse) Reset() {
	*x = PurgeDeactivatedDomainResponse{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeDeactivatedDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeDeactivatedDomainResponse) ProtoMessage() {}

func (x *PurgeDeactivatedDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeDeactivatedDomainResponse.ProtoReflect.Descriptor instead.
func (*PurgeDeactivatedDomainResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{9}
}

type IgnoreEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId      string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	FromInclusive int64  `protobuf:"varint,2,opt,name=from_inclusive,json=fromInclusive,proto3" json:"from_inclusive,omitempty"`
	ToInclusive   int64  `protobuf:"varint,3,opt,name=to_inclusive,json=toInclusive,proto3" json:"to_inclusive,omitempty"`
	Force         bool   `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *IgnoreEventsRequest) Reset() {
	*x = IgnoreEventsRequest{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IgnoreEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgnoreEventsRequest) ProtoMessage() {}

func (x *IgnoreEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgnoreEventsRequest.ProtoReflect.Descriptor instead.
func (*IgnoreEventsRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{10}
}

func (x *IgnoreEventsRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *IgnoreEventsRequest) GetFromInclusive() int64 {
	if x != nil {
		return x.FromInclusive
	}
	return 0
}

func (x *IgnoreEventsRequest) GetToInclusive() int64 {
	if x != nil {
		return x.ToInclusive
	}
	return 0
}

func (x *IgnoreEventsRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type IgnoreEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IgnoreEventsResponse) Reset() {
	*x = IgnoreEventsResponse{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IgnoreEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgnoreEventsResponse) ProtoMessage() {}

func (x *IgnoreEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgnoreEventsResponse.ProtoReflect.Descriptor instead.
func (*IgnoreEventsResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{11}
}

type UnignoreEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId      string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	FromInclusive int64  `protobuf:"varint,2,opt,name=from_inclusive,json=fromInclusive,proto3" json:"from_inclusive,omitempty"`
	ToInclusive   int64  `protobuf:"varint,3,opt,name=to_inclusive,json=toInclusive,proto3" json:"to_inclusive,omitempty"`
	Force         bool   `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *UnignoreEventsRequest) Reset() {
	*x = UnignoreEventsRequest{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnignoreEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnignoreEventsRequest) ProtoMessage() {}

func (x *UnignoreEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnignoreEventsRequest.ProtoReflect.Descriptor instead.
func (*UnignoreEventsRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{12}
}

func (x *UnignoreEventsRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *UnignoreEventsRequest) GetFromInclusive() int64 {
	if x != nil {
		return x.FromInclusive
	}
	return 0
}

func (x *UnignoreEventsRequest) GetToInclusive() int64 {
	if x != nil {
		return x.ToInclusive
	}
	return 0
}

func (x *UnignoreEventsRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type UnignoreEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnignoreEventsResponse) Reset() {
	*x = UnignoreEventsResponse{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnignoreEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnignoreEventsResponse) ProtoMessage() {}

func (x *UnignoreEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnignoreEventsResponse.ProtoReflect.Descriptor instead.
func (*UnignoreEventsResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{13}
}

type ExportAcsRequest_TargetDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId        string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ProtocolVersion int32  `protobuf:"varint,2,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
}

func (x *ExportAcsRequest_TargetDomain) Reset() {
	*x = ExportAcsRequest_TargetDomain{}
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportAcsRequest_TargetDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportAcsRequest_TargetDomain) ProtoMessage() {}

func (x *ExportAcsRequest_TargetDomain) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportAcsRequest_TargetDomain.ProtoReflect.Descriptor instead.
func (*ExportAcsRequest_TargetDomain) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ExportAcsRequest_TargetDomain) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ExportAcsRequest_TargetDomain) GetProtocolVersion() int32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

var File_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDesc = []byte{
	0x0a, 0x4e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x33, 0x30, 0x2f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x2d, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x1a,
	0x47, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x50, 0x75,
	0x72, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x5f, 0x70, 0x75, 0x72, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x50, 0x75, 0x72, 0x67,
	0x65, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x50, 0x75, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xde, 0x01, 0x0a,
	0x14, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x1f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x1c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdd, 0x04, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x92, 0x01, 0x0a, 0x17, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x41, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f,
	0x6f, 0x66, 0x66, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x56, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x96, 0x01,
	0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x62,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x29, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x41, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x73, 0x5f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x63,
	0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x52, 0x0a, 0x26, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe3, 0x01, 0x0a, 0x11,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x87, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x57, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0x44, 0x0a, 0x16, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x42, 0x0a, 0x1d, 0x50, 0x75, 0x72, 0x67, 0x65, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x49, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x49, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x16, 0x0a, 0x14,
	0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x55,
	0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xef, 0x08, 0x0a, 0x18, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73,
	0x12, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33,
	0x30, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x90, 0x01, 0x0a, 0x09, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x41, 0x63, 0x73, 0x12, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e,
	0x76, 0x33, 0x30, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x2e, 0x76, 0x33, 0x30, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x9d, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x72,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x44, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x75, 0x72, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33,
	0x30, 0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x0d, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x43, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb5, 0x01, 0x0a, 0x16, 0x50, 0x75, 0x72, 0x67, 0x65, 0x44,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x4c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x50, 0x75, 0x72, 0x67, 0x65, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50,
	0x75, 0x72, 0x67, 0x65, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x97, 0x01,
	0x0a, 0x0c, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x42,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x44, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x55, 0x6e, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x55, 0x6e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x5e, 0x5a, 0x5c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x2f, 0x76, 0x33, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescData = file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDesc
)

func file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescData)
	})
	return file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDescData
}

var file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_goTypes = []any{
	(*PurgeContractsRequest)(nil),          // 0: com.digitalasset.canton.admin.participant.v30.PurgeContractsRequest
	(*PurgeContractsResponse)(nil),         // 1: com.digitalasset.canton.admin.participant.v30.PurgeContractsResponse
	(*MigrateDomainRequest)(nil),           // 2: com.digitalasset.canton.admin.participant.v30.MigrateDomainRequest
	(*MigrateDomainResponse)(nil),          // 3: com.digitalasset.canton.admin.participant.v30.MigrateDomainResponse
	(*ExportAcsRequest)(nil),               // 4: com.digitalasset.canton.admin.participant.v30.ExportAcsRequest
	(*ExportAcsResponse)(nil),              // 5: com.digitalasset.canton.admin.participant.v30.ExportAcsResponse
	(*ImportAcsRequest)(nil),               // 6: com.digitalasset.canton.admin.participant.v30.ImportAcsRequest
	(*ImportAcsResponse)(nil),              // 7: com.digitalasset.canton.admin.participant.v30.ImportAcsResponse
	(*PurgeDeactivatedDomainRequest)(nil),  // 8: com.digitalasset.canton.admin.participant.v30.PurgeDeactivatedDomainRequest
	(*PurgeDeactivatedDomainResponse)(nil), // 9: com.digitalasset.canton.admin.participant.v30.PurgeDeactivatedDomainResponse
	(*IgnoreEventsRequest)(nil),            // 10: com.digitalasset.canton.admin.participant.v30.IgnoreEventsRequest
	(*IgnoreEventsResponse)(nil),           // 11: com.digitalasset.canton.admin.participant.v30.IgnoreEventsResponse
	(*UnignoreEventsRequest)(nil),          // 12: com.digitalasset.canton.admin.participant.v30.UnignoreEventsRequest
	(*UnignoreEventsResponse)(nil),         // 13: com.digitalasset.canton.admin.participant.v30.UnignoreEventsResponse
	(*ExportAcsRequest_TargetDomain)(nil),  // 14: com.digitalasset.canton.admin.participant.v30.ExportAcsRequest.TargetDomain
	nil,                                    // 15: com.digitalasset.canton.admin.participant.v30.ExportAcsRequest.ContractDomainRenamesEntry
	nil,                                    // 16: com.digitalasset.canton.admin.participant.v30.ImportAcsResponse.ContractIdMappingEntry
	(*DomainConnectionConfig)(nil),         // 17: com.digitalasset.canton.admin.participant.v30.DomainConnectionConfig
	(*timestamppb.Timestamp)(nil),          // 18: google.protobuf.Timestamp
}
var file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_depIdxs = []int32{
	17, // 0: com.digitalasset.canton.admin.participant.v30.MigrateDomainRequest.target_domain_connection_config:type_name -> com.digitalasset.canton.admin.participant.v30.DomainConnectionConfig
	18, // 1: com.digitalasset.canton.admin.participant.v30.ExportAcsRequest.timestamp:type_name -> google.protobuf.Timestamp
	15, // 2: com.digitalasset.canton.admin.participant.v30.ExportAcsRequest.contract_domain_renames:type_name -> com.digitalasset.canton.admin.participant.v30.ExportAcsRequest.ContractDomainRenamesEntry
	16, // 3: com.digitalasset.canton.admin.participant.v30.ImportAcsResponse.contract_id_mapping:type_name -> com.digitalasset.canton.admin.participant.v30.ImportAcsResponse.ContractIdMappingEntry
	14, // 4: com.digitalasset.canton.admin.participant.v30.ExportAcsRequest.ContractDomainRenamesEntry.value:type_name -> com.digitalasset.canton.admin.participant.v30.ExportAcsRequest.TargetDomain
	4,  // 5: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.ExportAcs:input_type -> com.digitalasset.canton.admin.participant.v30.ExportAcsRequest
	6,  // 6: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.ImportAcs:input_type -> com.digitalasset.canton.admin.participant.v30.ImportAcsRequest
	0,  // 7: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.PurgeContracts:input_type -> com.digitalasset.canton.admin.participant.v30.PurgeContractsRequest
	2,  // 8: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.MigrateDomain:input_type -> com.digitalasset.canton.admin.participant.v30.MigrateDomainRequest
	8,  // 9: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.PurgeDeactivatedDomain:input_type -> com.digitalasset.canton.admin.participant.v30.PurgeDeactivatedDomainRequest
	10, // 10: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.IgnoreEvents:input_type -> com.digitalasset.canton.admin.participant.v30.IgnoreEventsRequest
	12, // 11: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.UnignoreEvents:input_type -> com.digitalasset.canton.admin.participant.v30.UnignoreEventsRequest
	5,  // 12: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.ExportAcs:output_type -> com.digitalasset.canton.admin.participant.v30.ExportAcsResponse
	7,  // 13: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.ImportAcs:output_type -> com.digitalasset.canton.admin.participant.v30.ImportAcsResponse
	1,  // 14: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.PurgeContracts:output_type -> com.digitalasset.canton.admin.participant.v30.PurgeContractsResponse
	3,  // 15: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.MigrateDomain:output_type -> com.digitalasset.canton.admin.participant.v30.MigrateDomainResponse
	9,  // 16: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.PurgeDeactivatedDomain:output_type -> com.digitalasset.canton.admin.participant.v30.PurgeDeactivatedDomainResponse
	11, // 17: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.IgnoreEvents:output_type -> com.digitalasset.canton.admin.participant.v30.IgnoreEventsResponse
	13, // 18: com.digitalasset.canton.admin.participant.v30.ParticipantRepairService.UnignoreEvents:output_type -> com.digitalasset.canton.admin.participant.v30.UnignoreEventsResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() {
	file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_init()
}
func file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_init() {
	if File_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto != nil {
		return
	}
	file_com_digitalasset_canton_admin_participant_v30_domain_connectivity_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto = out.File
	file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_rawDesc = nil
	file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_goTypes = nil
	file_com_digitalasset_canton_admin_participant_v30_participant_repair_service_proto_depIdxs = nil
}
