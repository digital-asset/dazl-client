// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/admin/pruning/v30/pruning.proto

package v30

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SharedContractsState int32

const (
	SharedContractsState_STATE_UNSPECIFIED   SharedContractsState = 0
	SharedContractsState_SHARED_CONTRACTS    SharedContractsState = 1
	SharedContractsState_NO_SHARED_CONTRACTS SharedContractsState = 2
)

// Enum value maps for SharedContractsState.
var (
	SharedContractsState_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "SHARED_CONTRACTS",
		2: "NO_SHARED_CONTRACTS",
	}
	SharedContractsState_value = map[string]int32{
		"STATE_UNSPECIFIED":   0,
		"SHARED_CONTRACTS":    1,
		"NO_SHARED_CONTRACTS": 2,
	}
)

func (x SharedContractsState) Enum() *SharedContractsState {
	p := new(SharedContractsState)
	*p = x
	return p
}

func (x SharedContractsState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SharedContractsState) Descriptor() protoreflect.EnumDescriptor {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_enumTypes[0].Descriptor()
}

func (SharedContractsState) Type() protoreflect.EnumType {
	return &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_enumTypes[0]
}

func (x SharedContractsState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SharedContractsState.Descriptor instead.
func (SharedContractsState) EnumDescriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{0}
}

type SetSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSchedule) Reset() {
	*x = SetSchedule{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSchedule) ProtoMessage() {}

func (x *SetSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSchedule.ProtoReflect.Descriptor instead.
func (*SetSchedule) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{0}
}

type GetSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSchedule) Reset() {
	*x = GetSchedule{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedule) ProtoMessage() {}

func (x *GetSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedule.ProtoReflect.Descriptor instead.
func (*GetSchedule) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{1}
}

type SetParticipantSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetParticipantSchedule) Reset() {
	*x = SetParticipantSchedule{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetParticipantSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetParticipantSchedule) ProtoMessage() {}

func (x *SetParticipantSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetParticipantSchedule.ProtoReflect.Descriptor instead.
func (*SetParticipantSchedule) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{2}
}

type GetParticipantSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetParticipantSchedule) Reset() {
	*x = GetParticipantSchedule{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParticipantSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParticipantSchedule) ProtoMessage() {}

func (x *GetParticipantSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParticipantSchedule.ProtoReflect.Descriptor instead.
func (*GetParticipantSchedule) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{3}
}

type PruningSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cron        string               `protobuf:"bytes,1,opt,name=cron,proto3" json:"cron,omitempty"`
	MaxDuration *durationpb.Duration `protobuf:"bytes,2,opt,name=max_duration,json=maxDuration,proto3" json:"max_duration,omitempty"`
	Retention   *durationpb.Duration `protobuf:"bytes,3,opt,name=retention,proto3" json:"retention,omitempty"`
}

func (x *PruningSchedule) Reset() {
	*x = PruningSchedule{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PruningSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PruningSchedule) ProtoMessage() {}

func (x *PruningSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PruningSchedule.ProtoReflect.Descriptor instead.
func (*PruningSchedule) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{4}
}

func (x *PruningSchedule) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *PruningSchedule) GetMaxDuration() *durationpb.Duration {
	if x != nil {
		return x.MaxDuration
	}
	return nil
}

func (x *PruningSchedule) GetRetention() *durationpb.Duration {
	if x != nil {
		return x.Retention
	}
	return nil
}

type ParticipantPruningSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule            *PruningSchedule `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	PruneInternallyOnly bool             `protobuf:"varint,2,opt,name=prune_internally_only,json=pruneInternallyOnly,proto3" json:"prune_internally_only,omitempty"`
}

func (x *ParticipantPruningSchedule) Reset() {
	*x = ParticipantPruningSchedule{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipantPruningSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantPruningSchedule) ProtoMessage() {}

func (x *ParticipantPruningSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantPruningSchedule.ProtoReflect.Descriptor instead.
func (*ParticipantPruningSchedule) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{5}
}

func (x *ParticipantPruningSchedule) GetSchedule() *PruningSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *ParticipantPruningSchedule) GetPruneInternallyOnly() bool {
	if x != nil {
		return x.PruneInternallyOnly
	}
	return false
}

type ClearSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearSchedule) Reset() {
	*x = ClearSchedule{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearSchedule) ProtoMessage() {}

func (x *ClearSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearSchedule.ProtoReflect.Descriptor instead.
func (*ClearSchedule) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{6}
}

type SetCron struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCron) Reset() {
	*x = SetCron{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCron) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCron) ProtoMessage() {}

func (x *SetCron) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCron.ProtoReflect.Descriptor instead.
func (*SetCron) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{7}
}

type SetMaxDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMaxDuration) Reset() {
	*x = SetMaxDuration{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMaxDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxDuration) ProtoMessage() {}

func (x *SetMaxDuration) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxDuration.ProtoReflect.Descriptor instead.
func (*SetMaxDuration) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{8}
}

type SetRetention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetRetention) Reset() {
	*x = SetRetention{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRetention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRetention) ProtoMessage() {}

func (x *SetRetention) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRetention.ProtoReflect.Descriptor instead.
func (*SetRetention) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{9}
}

type LocatePruningTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocatePruningTimestamp) Reset() {
	*x = LocatePruningTimestamp{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocatePruningTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocatePruningTimestamp) ProtoMessage() {}

func (x *LocatePruningTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocatePruningTimestamp.ProtoReflect.Descriptor instead.
func (*LocatePruningTimestamp) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{10}
}

type SetNoWaitCommitmentsFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetNoWaitCommitmentsFrom) Reset() {
	*x = SetNoWaitCommitmentsFrom{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetNoWaitCommitmentsFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNoWaitCommitmentsFrom) ProtoMessage() {}

func (x *SetNoWaitCommitmentsFrom) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNoWaitCommitmentsFrom.ProtoReflect.Descriptor instead.
func (*SetNoWaitCommitmentsFrom) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{11}
}

type ResetNoWaitCommitmentsFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetNoWaitCommitmentsFrom) Reset() {
	*x = ResetNoWaitCommitmentsFrom{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetNoWaitCommitmentsFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetNoWaitCommitmentsFrom) ProtoMessage() {}

func (x *ResetNoWaitCommitmentsFrom) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetNoWaitCommitmentsFrom.ProtoReflect.Descriptor instead.
func (*ResetNoWaitCommitmentsFrom) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{12}
}

type Domains struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainIds []string `protobuf:"bytes,1,rep,name=domain_ids,json=domainIds,proto3" json:"domain_ids,omitempty"`
}

func (x *Domains) Reset() {
	*x = Domains{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Domains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domains) ProtoMessage() {}

func (x *Domains) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domains.ProtoReflect.Descriptor instead.
func (*Domains) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{13}
}

func (x *Domains) GetDomainIds() []string {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

type GetNoWaitCommitmentsFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNoWaitCommitmentsFrom) Reset() {
	*x = GetNoWaitCommitmentsFrom{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoWaitCommitmentsFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoWaitCommitmentsFrom) ProtoMessage() {}

func (x *GetNoWaitCommitmentsFrom) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoWaitCommitmentsFrom.ProtoReflect.Descriptor instead.
func (*GetNoWaitCommitmentsFrom) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{14}
}

type NoWaitCommitmentsSetup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterParticipantUid string `protobuf:"bytes,1,opt,name=counter_participant_uid,json=counterParticipantUid,proto3" json:"counter_participant_uid,omitempty"`
	// Types that are assignable to TimestampOrOffsetActive:
	//
	//	*NoWaitCommitmentsSetup_SequencingTimestamp
	//	*NoWaitCommitmentsSetup_PruningOffset
	TimestampOrOffsetActive isNoWaitCommitmentsSetup_TimestampOrOffsetActive `protobuf_oneof:"timestamp_or_offset_active"`
	DomainIds               *Domains                                         `protobuf:"bytes,4,opt,name=domain_ids,json=domainIds,proto3" json:"domain_ids,omitempty"`
	CounterParticipantState SharedContractsState                             `protobuf:"varint,5,opt,name=counter_participant_state,json=counterParticipantState,proto3,enum=com.digitalasset.canton.admin.pruning.v30.SharedContractsState" json:"counter_participant_state,omitempty"`
}

func (x *NoWaitCommitmentsSetup) Reset() {
	*x = NoWaitCommitmentsSetup{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoWaitCommitmentsSetup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoWaitCommitmentsSetup) ProtoMessage() {}

func (x *NoWaitCommitmentsSetup) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoWaitCommitmentsSetup.ProtoReflect.Descriptor instead.
func (*NoWaitCommitmentsSetup) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{15}
}

func (x *NoWaitCommitmentsSetup) GetCounterParticipantUid() string {
	if x != nil {
		return x.CounterParticipantUid
	}
	return ""
}

func (m *NoWaitCommitmentsSetup) GetTimestampOrOffsetActive() isNoWaitCommitmentsSetup_TimestampOrOffsetActive {
	if m != nil {
		return m.TimestampOrOffsetActive
	}
	return nil
}

func (x *NoWaitCommitmentsSetup) GetSequencingTimestamp() *timestamppb.Timestamp {
	if x, ok := x.GetTimestampOrOffsetActive().(*NoWaitCommitmentsSetup_SequencingTimestamp); ok {
		return x.SequencingTimestamp
	}
	return nil
}

func (x *NoWaitCommitmentsSetup) GetPruningOffset() string {
	if x, ok := x.GetTimestampOrOffsetActive().(*NoWaitCommitmentsSetup_PruningOffset); ok {
		return x.PruningOffset
	}
	return ""
}

func (x *NoWaitCommitmentsSetup) GetDomainIds() *Domains {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

func (x *NoWaitCommitmentsSetup) GetCounterParticipantState() SharedContractsState {
	if x != nil {
		return x.CounterParticipantState
	}
	return SharedContractsState_STATE_UNSPECIFIED
}

type isNoWaitCommitmentsSetup_TimestampOrOffsetActive interface {
	isNoWaitCommitmentsSetup_TimestampOrOffsetActive()
}

type NoWaitCommitmentsSetup_SequencingTimestamp struct {
	SequencingTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=sequencing_timestamp,json=sequencingTimestamp,proto3,oneof"`
}

type NoWaitCommitmentsSetup_PruningOffset struct {
	PruningOffset string `protobuf:"bytes,3,opt,name=pruning_offset,json=pruningOffset,proto3,oneof"`
}

func (*NoWaitCommitmentsSetup_SequencingTimestamp) isNoWaitCommitmentsSetup_TimestampOrOffsetActive() {
}

func (*NoWaitCommitmentsSetup_PruningOffset) isNoWaitCommitmentsSetup_TimestampOrOffsetActive() {}

type WaitCommitmentsSetup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterParticipantUid   string               `protobuf:"bytes,1,opt,name=counter_participant_uid,json=counterParticipantUid,proto3" json:"counter_participant_uid,omitempty"`
	DomainIds               *Domains             `protobuf:"bytes,2,opt,name=domain_ids,json=domainIds,proto3" json:"domain_ids,omitempty"`
	CounterParticipantState SharedContractsState `protobuf:"varint,3,opt,name=counter_participant_state,json=counterParticipantState,proto3,enum=com.digitalasset.canton.admin.pruning.v30.SharedContractsState" json:"counter_participant_state,omitempty"`
}

func (x *WaitCommitmentsSetup) Reset() {
	*x = WaitCommitmentsSetup{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitCommitmentsSetup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitCommitmentsSetup) ProtoMessage() {}

func (x *WaitCommitmentsSetup) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitCommitmentsSetup.ProtoReflect.Descriptor instead.
func (*WaitCommitmentsSetup) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{16}
}

func (x *WaitCommitmentsSetup) GetCounterParticipantUid() string {
	if x != nil {
		return x.CounterParticipantUid
	}
	return ""
}

func (x *WaitCommitmentsSetup) GetDomainIds() *Domains {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

func (x *WaitCommitmentsSetup) GetCounterParticipantState() SharedContractsState {
	if x != nil {
		return x.CounterParticipantState
	}
	return SharedContractsState_STATE_UNSPECIFIED
}

type SetSchedule_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule *PruningSchedule `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *SetSchedule_Request) Reset() {
	*x = SetSchedule_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSchedule_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSchedule_Request) ProtoMessage() {}

func (x *SetSchedule_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSchedule_Request.ProtoReflect.Descriptor instead.
func (*SetSchedule_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SetSchedule_Request) GetSchedule() *PruningSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type SetSchedule_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSchedule_Response) Reset() {
	*x = SetSchedule_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSchedule_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSchedule_Response) ProtoMessage() {}

func (x *SetSchedule_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSchedule_Response.ProtoReflect.Descriptor instead.
func (*SetSchedule_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{0, 1}
}

type GetSchedule_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSchedule_Request) Reset() {
	*x = GetSchedule_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedule_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedule_Request) ProtoMessage() {}

func (x *GetSchedule_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedule_Request.ProtoReflect.Descriptor instead.
func (*GetSchedule_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{1, 0}
}

type GetSchedule_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule *PruningSchedule `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *GetSchedule_Response) Reset() {
	*x = GetSchedule_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchedule_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchedule_Response) ProtoMessage() {}

func (x *GetSchedule_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchedule_Response.ProtoReflect.Descriptor instead.
func (*GetSchedule_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetSchedule_Response) GetSchedule() *PruningSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type SetParticipantSchedule_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule *ParticipantPruningSchedule `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *SetParticipantSchedule_Request) Reset() {
	*x = SetParticipantSchedule_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetParticipantSchedule_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetParticipantSchedule_Request) ProtoMessage() {}

func (x *SetParticipantSchedule_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetParticipantSchedule_Request.ProtoReflect.Descriptor instead.
func (*SetParticipantSchedule_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SetParticipantSchedule_Request) GetSchedule() *ParticipantPruningSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type SetParticipantSchedule_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetParticipantSchedule_Response) Reset() {
	*x = SetParticipantSchedule_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetParticipantSchedule_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetParticipantSchedule_Response) ProtoMessage() {}

func (x *SetParticipantSchedule_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetParticipantSchedule_Response.ProtoReflect.Descriptor instead.
func (*SetParticipantSchedule_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{2, 1}
}

type GetParticipantSchedule_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetParticipantSchedule_Request) Reset() {
	*x = GetParticipantSchedule_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParticipantSchedule_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParticipantSchedule_Request) ProtoMessage() {}

func (x *GetParticipantSchedule_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParticipantSchedule_Request.ProtoReflect.Descriptor instead.
func (*GetParticipantSchedule_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{3, 0}
}

type GetParticipantSchedule_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule *ParticipantPruningSchedule `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *GetParticipantSchedule_Response) Reset() {
	*x = GetParticipantSchedule_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParticipantSchedule_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParticipantSchedule_Response) ProtoMessage() {}

func (x *GetParticipantSchedule_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParticipantSchedule_Response.ProtoReflect.Descriptor instead.
func (*GetParticipantSchedule_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GetParticipantSchedule_Response) GetSchedule() *ParticipantPruningSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type ClearSchedule_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearSchedule_Request) Reset() {
	*x = ClearSchedule_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearSchedule_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearSchedule_Request) ProtoMessage() {}

func (x *ClearSchedule_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearSchedule_Request.ProtoReflect.Descriptor instead.
func (*ClearSchedule_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{6, 0}
}

type ClearSchedule_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearSchedule_Response) Reset() {
	*x = ClearSchedule_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearSchedule_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearSchedule_Response) ProtoMessage() {}

func (x *ClearSchedule_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearSchedule_Response.ProtoReflect.Descriptor instead.
func (*ClearSchedule_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{6, 1}
}

type SetCron_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cron string `protobuf:"bytes,1,opt,name=cron,proto3" json:"cron,omitempty"`
}

func (x *SetCron_Request) Reset() {
	*x = SetCron_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCron_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCron_Request) ProtoMessage() {}

func (x *SetCron_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCron_Request.ProtoReflect.Descriptor instead.
func (*SetCron_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SetCron_Request) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

type SetCron_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCron_Response) Reset() {
	*x = SetCron_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCron_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCron_Response) ProtoMessage() {}

func (x *SetCron_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCron_Response.ProtoReflect.Descriptor instead.
func (*SetCron_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{7, 1}
}

type SetMaxDuration_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxDuration *durationpb.Duration `protobuf:"bytes,1,opt,name=max_duration,json=maxDuration,proto3" json:"max_duration,omitempty"`
}

func (x *SetMaxDuration_Request) Reset() {
	*x = SetMaxDuration_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMaxDuration_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxDuration_Request) ProtoMessage() {}

func (x *SetMaxDuration_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxDuration_Request.ProtoReflect.Descriptor instead.
func (*SetMaxDuration_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SetMaxDuration_Request) GetMaxDuration() *durationpb.Duration {
	if x != nil {
		return x.MaxDuration
	}
	return nil
}

type SetMaxDuration_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMaxDuration_Response) Reset() {
	*x = SetMaxDuration_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMaxDuration_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMaxDuration_Response) ProtoMessage() {}

func (x *SetMaxDuration_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMaxDuration_Response.ProtoReflect.Descriptor instead.
func (*SetMaxDuration_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{8, 1}
}

type SetRetention_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retention *durationpb.Duration `protobuf:"bytes,1,opt,name=retention,proto3" json:"retention,omitempty"`
}

func (x *SetRetention_Request) Reset() {
	*x = SetRetention_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRetention_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRetention_Request) ProtoMessage() {}

func (x *SetRetention_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRetention_Request.ProtoReflect.Descriptor instead.
func (*SetRetention_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{9, 0}
}

func (x *SetRetention_Request) GetRetention() *durationpb.Duration {
	if x != nil {
		return x.Retention
	}
	return nil
}

type SetRetention_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetRetention_Response) Reset() {
	*x = SetRetention_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRetention_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRetention_Response) ProtoMessage() {}

func (x *SetRetention_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRetention_Response.ProtoReflect.Descriptor instead.
func (*SetRetention_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{9, 1}
}

type LocatePruningTimestamp_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *LocatePruningTimestamp_Request) Reset() {
	*x = LocatePruningTimestamp_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocatePruningTimestamp_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocatePruningTimestamp_Request) ProtoMessage() {}

func (x *LocatePruningTimestamp_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocatePruningTimestamp_Request.ProtoReflect.Descriptor instead.
func (*LocatePruningTimestamp_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{10, 0}
}

func (x *LocatePruningTimestamp_Request) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type LocatePruningTimestamp_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *LocatePruningTimestamp_Response) Reset() {
	*x = LocatePruningTimestamp_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocatePruningTimestamp_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocatePruningTimestamp_Response) ProtoMessage() {}

func (x *LocatePruningTimestamp_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocatePruningTimestamp_Response.ProtoReflect.Descriptor instead.
func (*LocatePruningTimestamp_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{10, 1}
}

func (x *LocatePruningTimestamp_Response) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SetNoWaitCommitmentsFrom_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterParticipantUids []string `protobuf:"bytes,1,rep,name=counter_participant_uids,json=counterParticipantUids,proto3" json:"counter_participant_uids,omitempty"`
	// Types that are assignable to TimestampOrOffset:
	//
	//	*SetNoWaitCommitmentsFrom_Request_SequencingTimestamp
	//	*SetNoWaitCommitmentsFrom_Request_PruningOffset
	TimestampOrOffset isSetNoWaitCommitmentsFrom_Request_TimestampOrOffset `protobuf_oneof:"timestamp_or_offset"`
	DomainIds         []string                                             `protobuf:"bytes,5,rep,name=domain_ids,json=domainIds,proto3" json:"domain_ids,omitempty"`
}

func (x *SetNoWaitCommitmentsFrom_Request) Reset() {
	*x = SetNoWaitCommitmentsFrom_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetNoWaitCommitmentsFrom_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNoWaitCommitmentsFrom_Request) ProtoMessage() {}

func (x *SetNoWaitCommitmentsFrom_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNoWaitCommitmentsFrom_Request.ProtoReflect.Descriptor instead.
func (*SetNoWaitCommitmentsFrom_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{11, 0}
}

func (x *SetNoWaitCommitmentsFrom_Request) GetCounterParticipantUids() []string {
	if x != nil {
		return x.CounterParticipantUids
	}
	return nil
}

func (m *SetNoWaitCommitmentsFrom_Request) GetTimestampOrOffset() isSetNoWaitCommitmentsFrom_Request_TimestampOrOffset {
	if m != nil {
		return m.TimestampOrOffset
	}
	return nil
}

func (x *SetNoWaitCommitmentsFrom_Request) GetSequencingTimestamp() *timestamppb.Timestamp {
	if x, ok := x.GetTimestampOrOffset().(*SetNoWaitCommitmentsFrom_Request_SequencingTimestamp); ok {
		return x.SequencingTimestamp
	}
	return nil
}

func (x *SetNoWaitCommitmentsFrom_Request) GetPruningOffset() string {
	if x, ok := x.GetTimestampOrOffset().(*SetNoWaitCommitmentsFrom_Request_PruningOffset); ok {
		return x.PruningOffset
	}
	return ""
}

func (x *SetNoWaitCommitmentsFrom_Request) GetDomainIds() []string {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

type isSetNoWaitCommitmentsFrom_Request_TimestampOrOffset interface {
	isSetNoWaitCommitmentsFrom_Request_TimestampOrOffset()
}

type SetNoWaitCommitmentsFrom_Request_SequencingTimestamp struct {
	SequencingTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=sequencing_timestamp,json=sequencingTimestamp,proto3,oneof"`
}

type SetNoWaitCommitmentsFrom_Request_PruningOffset struct {
	PruningOffset string `protobuf:"bytes,4,opt,name=pruning_offset,json=pruningOffset,proto3,oneof"`
}

func (*SetNoWaitCommitmentsFrom_Request_SequencingTimestamp) isSetNoWaitCommitmentsFrom_Request_TimestampOrOffset() {
}

func (*SetNoWaitCommitmentsFrom_Request_PruningOffset) isSetNoWaitCommitmentsFrom_Request_TimestampOrOffset() {
}

type SetNoWaitCommitmentsFrom_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantDomainsMapping map[string]*Domains `protobuf:"bytes,1,rep,name=participant_domains_mapping,json=participantDomainsMapping,proto3" json:"participant_domains_mapping,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetNoWaitCommitmentsFrom_Response) Reset() {
	*x = SetNoWaitCommitmentsFrom_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetNoWaitCommitmentsFrom_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNoWaitCommitmentsFrom_Response) ProtoMessage() {}

func (x *SetNoWaitCommitmentsFrom_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNoWaitCommitmentsFrom_Response.ProtoReflect.Descriptor instead.
func (*SetNoWaitCommitmentsFrom_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{11, 1}
}

func (x *SetNoWaitCommitmentsFrom_Response) GetParticipantDomainsMapping() map[string]*Domains {
	if x != nil {
		return x.ParticipantDomainsMapping
	}
	return nil
}

type ResetNoWaitCommitmentsFrom_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterParticipantUids []string `protobuf:"bytes,1,rep,name=counter_participant_uids,json=counterParticipantUids,proto3" json:"counter_participant_uids,omitempty"`
	DomainIds              []string `protobuf:"bytes,2,rep,name=domain_ids,json=domainIds,proto3" json:"domain_ids,omitempty"`
}

func (x *ResetNoWaitCommitmentsFrom_Request) Reset() {
	*x = ResetNoWaitCommitmentsFrom_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetNoWaitCommitmentsFrom_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetNoWaitCommitmentsFrom_Request) ProtoMessage() {}

func (x *ResetNoWaitCommitmentsFrom_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetNoWaitCommitmentsFrom_Request.ProtoReflect.Descriptor instead.
func (*ResetNoWaitCommitmentsFrom_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ResetNoWaitCommitmentsFrom_Request) GetCounterParticipantUids() []string {
	if x != nil {
		return x.CounterParticipantUids
	}
	return nil
}

func (x *ResetNoWaitCommitmentsFrom_Request) GetDomainIds() []string {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

type ResetNoWaitCommitmentsFrom_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantDomainsMapping map[string]*Domains `protobuf:"bytes,1,rep,name=participant_domains_mapping,json=participantDomainsMapping,proto3" json:"participant_domains_mapping,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResetNoWaitCommitmentsFrom_Response) Reset() {
	*x = ResetNoWaitCommitmentsFrom_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetNoWaitCommitmentsFrom_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetNoWaitCommitmentsFrom_Response) ProtoMessage() {}

func (x *ResetNoWaitCommitmentsFrom_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetNoWaitCommitmentsFrom_Response.ProtoReflect.Descriptor instead.
func (*ResetNoWaitCommitmentsFrom_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{12, 1}
}

func (x *ResetNoWaitCommitmentsFrom_Response) GetParticipantDomainsMapping() map[string]*Domains {
	if x != nil {
		return x.ParticipantDomainsMapping
	}
	return nil
}

type GetNoWaitCommitmentsFrom_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainIds       []string `protobuf:"bytes,1,rep,name=domain_ids,json=domainIds,proto3" json:"domain_ids,omitempty"`
	ParticipantUids []string `protobuf:"bytes,2,rep,name=participant_uids,json=participantUids,proto3" json:"participant_uids,omitempty"`
}

func (x *GetNoWaitCommitmentsFrom_Request) Reset() {
	*x = GetNoWaitCommitmentsFrom_Request{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoWaitCommitmentsFrom_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoWaitCommitmentsFrom_Request) ProtoMessage() {}

func (x *GetNoWaitCommitmentsFrom_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoWaitCommitmentsFrom_Request.ProtoReflect.Descriptor instead.
func (*GetNoWaitCommitmentsFrom_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetNoWaitCommitmentsFrom_Request) GetDomainIds() []string {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

func (x *GetNoWaitCommitmentsFrom_Request) GetParticipantUids() []string {
	if x != nil {
		return x.ParticipantUids
	}
	return nil
}

type GetNoWaitCommitmentsFrom_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IgnoredParticipants    []*NoWaitCommitmentsSetup `protobuf:"bytes,1,rep,name=ignored_participants,json=ignoredParticipants,proto3" json:"ignored_participants,omitempty"`
	NotIgnoredParticipants []*WaitCommitmentsSetup   `protobuf:"bytes,2,rep,name=not_ignored_participants,json=notIgnoredParticipants,proto3" json:"not_ignored_participants,omitempty"`
}

func (x *GetNoWaitCommitmentsFrom_Response) Reset() {
	*x = GetNoWaitCommitmentsFrom_Response{}
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoWaitCommitmentsFrom_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoWaitCommitmentsFrom_Response) ProtoMessage() {}

func (x *GetNoWaitCommitmentsFrom_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoWaitCommitmentsFrom_Response.ProtoReflect.Descriptor instead.
func (*GetNoWaitCommitmentsFrom_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP(), []int{14, 1}
}

func (x *GetNoWaitCommitmentsFrom_Response) GetIgnoredParticipants() []*NoWaitCommitmentsSetup {
	if x != nil {
		return x.IgnoredParticipants
	}
	return nil
}

func (x *GetNoWaitCommitmentsFrom_Response) GetNotIgnoredParticipants() []*WaitCommitmentsSetup {
	if x != nil {
		return x.NotIgnoredParticipants
	}
	return nil
}

var File_com_digitalasset_canton_admin_pruning_v30_pruning_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDesc = []byte{
	0x0a, 0x37, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x70, 0x72, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x64,
	0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x33, 0x30, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x1a, 0x61, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x56, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x7c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x62, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x6c, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x6d, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x0f,
	0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x72, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x1a, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x6c,
	0x79, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x26, 0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a,
	0x07, 0x53, 0x65, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x1a, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0a,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x0c, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x42, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0a,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x16, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x1a, 0x1f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x44, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xce, 0x04, 0x0a, 0x18,
	0x53, 0x65, 0x74, 0x4e, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x1a, 0xf3, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x73, 0x12, 0x4f,
	0x0a, 0x14, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x27, 0x0a, 0x0e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x15, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6f, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0xbb,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xab, 0x01, 0x0a, 0x1b,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x65,
	0x74, 0x4e, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x19,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0x80, 0x01, 0x0a, 0x1e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x48,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc0, 0x03, 0x0a,
	0x1a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4e, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x1a, 0x62, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x1a,
	0xbd, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xad, 0x01, 0x0a,
	0x1b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x4e, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x19, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0x80, 0x01, 0x0a,
	0x1e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x28, 0x0a, 0x07, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xed, 0x02, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x1a, 0x53, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x73, 0x1a, 0xfb, 0x01, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x14, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x4e, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x13, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x79,
	0x0a, 0x18, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x57, 0x61, 0x69,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0xb8, 0x03, 0x0a, 0x16, 0x4e, 0x6f,
	0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x14,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a,
	0x0e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x51, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x7b, 0x0a, 0x19, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e,
	0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x17, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x1c, 0x0a, 0x1a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x6f, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x14, 0x57, 0x61, 0x69, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x36, 0x0a,
	0x17, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x7b, 0x0a, 0x19, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x17, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2a, 0x5c, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x53, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f,
	0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54,
	0x53, 0x10, 0x02, 0x42, 0x5a, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f,
	0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f, 0x67,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x33, 0x30, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescData = file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDesc
)

func file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescData)
	})
	return file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDescData
}

var file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_goTypes = []any{
	(SharedContractsState)(0),                 // 0: com.digitalasset.canton.admin.pruning.v30.SharedContractsState
	(*SetSchedule)(nil),                       // 1: com.digitalasset.canton.admin.pruning.v30.SetSchedule
	(*GetSchedule)(nil),                       // 2: com.digitalasset.canton.admin.pruning.v30.GetSchedule
	(*SetParticipantSchedule)(nil),            // 3: com.digitalasset.canton.admin.pruning.v30.SetParticipantSchedule
	(*GetParticipantSchedule)(nil),            // 4: com.digitalasset.canton.admin.pruning.v30.GetParticipantSchedule
	(*PruningSchedule)(nil),                   // 5: com.digitalasset.canton.admin.pruning.v30.PruningSchedule
	(*ParticipantPruningSchedule)(nil),        // 6: com.digitalasset.canton.admin.pruning.v30.ParticipantPruningSchedule
	(*ClearSchedule)(nil),                     // 7: com.digitalasset.canton.admin.pruning.v30.ClearSchedule
	(*SetCron)(nil),                           // 8: com.digitalasset.canton.admin.pruning.v30.SetCron
	(*SetMaxDuration)(nil),                    // 9: com.digitalasset.canton.admin.pruning.v30.SetMaxDuration
	(*SetRetention)(nil),                      // 10: com.digitalasset.canton.admin.pruning.v30.SetRetention
	(*LocatePruningTimestamp)(nil),            // 11: com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestamp
	(*SetNoWaitCommitmentsFrom)(nil),          // 12: com.digitalasset.canton.admin.pruning.v30.SetNoWaitCommitmentsFrom
	(*ResetNoWaitCommitmentsFrom)(nil),        // 13: com.digitalasset.canton.admin.pruning.v30.ResetNoWaitCommitmentsFrom
	(*Domains)(nil),                           // 14: com.digitalasset.canton.admin.pruning.v30.Domains
	(*GetNoWaitCommitmentsFrom)(nil),          // 15: com.digitalasset.canton.admin.pruning.v30.GetNoWaitCommitmentsFrom
	(*NoWaitCommitmentsSetup)(nil),            // 16: com.digitalasset.canton.admin.pruning.v30.NoWaitCommitmentsSetup
	(*WaitCommitmentsSetup)(nil),              // 17: com.digitalasset.canton.admin.pruning.v30.WaitCommitmentsSetup
	(*SetSchedule_Request)(nil),               // 18: com.digitalasset.canton.admin.pruning.v30.SetSchedule.Request
	(*SetSchedule_Response)(nil),              // 19: com.digitalasset.canton.admin.pruning.v30.SetSchedule.Response
	(*GetSchedule_Request)(nil),               // 20: com.digitalasset.canton.admin.pruning.v30.GetSchedule.Request
	(*GetSchedule_Response)(nil),              // 21: com.digitalasset.canton.admin.pruning.v30.GetSchedule.Response
	(*SetParticipantSchedule_Request)(nil),    // 22: com.digitalasset.canton.admin.pruning.v30.SetParticipantSchedule.Request
	(*SetParticipantSchedule_Response)(nil),   // 23: com.digitalasset.canton.admin.pruning.v30.SetParticipantSchedule.Response
	(*GetParticipantSchedule_Request)(nil),    // 24: com.digitalasset.canton.admin.pruning.v30.GetParticipantSchedule.Request
	(*GetParticipantSchedule_Response)(nil),   // 25: com.digitalasset.canton.admin.pruning.v30.GetParticipantSchedule.Response
	(*ClearSchedule_Request)(nil),             // 26: com.digitalasset.canton.admin.pruning.v30.ClearSchedule.Request
	(*ClearSchedule_Response)(nil),            // 27: com.digitalasset.canton.admin.pruning.v30.ClearSchedule.Response
	(*SetCron_Request)(nil),                   // 28: com.digitalasset.canton.admin.pruning.v30.SetCron.Request
	(*SetCron_Response)(nil),                  // 29: com.digitalasset.canton.admin.pruning.v30.SetCron.Response
	(*SetMaxDuration_Request)(nil),            // 30: com.digitalasset.canton.admin.pruning.v30.SetMaxDuration.Request
	(*SetMaxDuration_Response)(nil),           // 31: com.digitalasset.canton.admin.pruning.v30.SetMaxDuration.Response
	(*SetRetention_Request)(nil),              // 32: com.digitalasset.canton.admin.pruning.v30.SetRetention.Request
	(*SetRetention_Response)(nil),             // 33: com.digitalasset.canton.admin.pruning.v30.SetRetention.Response
	(*LocatePruningTimestamp_Request)(nil),    // 34: com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestamp.Request
	(*LocatePruningTimestamp_Response)(nil),   // 35: com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestamp.Response
	(*SetNoWaitCommitmentsFrom_Request)(nil),  // 36: com.digitalasset.canton.admin.pruning.v30.SetNoWaitCommitmentsFrom.Request
	(*SetNoWaitCommitmentsFrom_Response)(nil), // 37: com.digitalasset.canton.admin.pruning.v30.SetNoWaitCommitmentsFrom.Response
	nil, // 38: com.digitalasset.canton.admin.pruning.v30.SetNoWaitCommitmentsFrom.Response.ParticipantDomainsMappingEntry
	(*ResetNoWaitCommitmentsFrom_Request)(nil),  // 39: com.digitalasset.canton.admin.pruning.v30.ResetNoWaitCommitmentsFrom.Request
	(*ResetNoWaitCommitmentsFrom_Response)(nil), // 40: com.digitalasset.canton.admin.pruning.v30.ResetNoWaitCommitmentsFrom.Response
	nil,                                      // 41: com.digitalasset.canton.admin.pruning.v30.ResetNoWaitCommitmentsFrom.Response.ParticipantDomainsMappingEntry
	(*GetNoWaitCommitmentsFrom_Request)(nil), // 42: com.digitalasset.canton.admin.pruning.v30.GetNoWaitCommitmentsFrom.Request
	(*GetNoWaitCommitmentsFrom_Response)(nil), // 43: com.digitalasset.canton.admin.pruning.v30.GetNoWaitCommitmentsFrom.Response
	(*durationpb.Duration)(nil),               // 44: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),             // 45: google.protobuf.Timestamp
}
var file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_depIdxs = []int32{
	44, // 0: com.digitalasset.canton.admin.pruning.v30.PruningSchedule.max_duration:type_name -> google.protobuf.Duration
	44, // 1: com.digitalasset.canton.admin.pruning.v30.PruningSchedule.retention:type_name -> google.protobuf.Duration
	5,  // 2: com.digitalasset.canton.admin.pruning.v30.ParticipantPruningSchedule.schedule:type_name -> com.digitalasset.canton.admin.pruning.v30.PruningSchedule
	45, // 3: com.digitalasset.canton.admin.pruning.v30.NoWaitCommitmentsSetup.sequencing_timestamp:type_name -> google.protobuf.Timestamp
	14, // 4: com.digitalasset.canton.admin.pruning.v30.NoWaitCommitmentsSetup.domain_ids:type_name -> com.digitalasset.canton.admin.pruning.v30.Domains
	0,  // 5: com.digitalasset.canton.admin.pruning.v30.NoWaitCommitmentsSetup.counter_participant_state:type_name -> com.digitalasset.canton.admin.pruning.v30.SharedContractsState
	14, // 6: com.digitalasset.canton.admin.pruning.v30.WaitCommitmentsSetup.domain_ids:type_name -> com.digitalasset.canton.admin.pruning.v30.Domains
	0,  // 7: com.digitalasset.canton.admin.pruning.v30.WaitCommitmentsSetup.counter_participant_state:type_name -> com.digitalasset.canton.admin.pruning.v30.SharedContractsState
	5,  // 8: com.digitalasset.canton.admin.pruning.v30.SetSchedule.Request.schedule:type_name -> com.digitalasset.canton.admin.pruning.v30.PruningSchedule
	5,  // 9: com.digitalasset.canton.admin.pruning.v30.GetSchedule.Response.schedule:type_name -> com.digitalasset.canton.admin.pruning.v30.PruningSchedule
	6,  // 10: com.digitalasset.canton.admin.pruning.v30.SetParticipantSchedule.Request.schedule:type_name -> com.digitalasset.canton.admin.pruning.v30.ParticipantPruningSchedule
	6,  // 11: com.digitalasset.canton.admin.pruning.v30.GetParticipantSchedule.Response.schedule:type_name -> com.digitalasset.canton.admin.pruning.v30.ParticipantPruningSchedule
	44, // 12: com.digitalasset.canton.admin.pruning.v30.SetMaxDuration.Request.max_duration:type_name -> google.protobuf.Duration
	44, // 13: com.digitalasset.canton.admin.pruning.v30.SetRetention.Request.retention:type_name -> google.protobuf.Duration
	45, // 14: com.digitalasset.canton.admin.pruning.v30.LocatePruningTimestamp.Response.timestamp:type_name -> google.protobuf.Timestamp
	45, // 15: com.digitalasset.canton.admin.pruning.v30.SetNoWaitCommitmentsFrom.Request.sequencing_timestamp:type_name -> google.protobuf.Timestamp
	38, // 16: com.digitalasset.canton.admin.pruning.v30.SetNoWaitCommitmentsFrom.Response.participant_domains_mapping:type_name -> com.digitalasset.canton.admin.pruning.v30.SetNoWaitCommitmentsFrom.Response.ParticipantDomainsMappingEntry
	14, // 17: com.digitalasset.canton.admin.pruning.v30.SetNoWaitCommitmentsFrom.Response.ParticipantDomainsMappingEntry.value:type_name -> com.digitalasset.canton.admin.pruning.v30.Domains
	41, // 18: com.digitalasset.canton.admin.pruning.v30.ResetNoWaitCommitmentsFrom.Response.participant_domains_mapping:type_name -> com.digitalasset.canton.admin.pruning.v30.ResetNoWaitCommitmentsFrom.Response.ParticipantDomainsMappingEntry
	14, // 19: com.digitalasset.canton.admin.pruning.v30.ResetNoWaitCommitmentsFrom.Response.ParticipantDomainsMappingEntry.value:type_name -> com.digitalasset.canton.admin.pruning.v30.Domains
	16, // 20: com.digitalasset.canton.admin.pruning.v30.GetNoWaitCommitmentsFrom.Response.ignored_participants:type_name -> com.digitalasset.canton.admin.pruning.v30.NoWaitCommitmentsSetup
	17, // 21: com.digitalasset.canton.admin.pruning.v30.GetNoWaitCommitmentsFrom.Response.not_ignored_participants:type_name -> com.digitalasset.canton.admin.pruning.v30.WaitCommitmentsSetup
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_init() }
func file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_init() {
	if File_com_digitalasset_canton_admin_pruning_v30_pruning_proto != nil {
		return
	}
	file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[15].OneofWrappers = []any{
		(*NoWaitCommitmentsSetup_SequencingTimestamp)(nil),
		(*NoWaitCommitmentsSetup_PruningOffset)(nil),
	}
	file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes[35].OneofWrappers = []any{
		(*SetNoWaitCommitmentsFrom_Request_SequencingTimestamp)(nil),
		(*SetNoWaitCommitmentsFrom_Request_PruningOffset)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_depIdxs,
		EnumInfos:         file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_enumTypes,
		MessageInfos:      file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_admin_pruning_v30_pruning_proto = out.File
	file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_rawDesc = nil
	file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_goTypes = nil
	file_com_digitalasset_canton_admin_pruning_v30_pruning_proto_depIdxs = nil
}
