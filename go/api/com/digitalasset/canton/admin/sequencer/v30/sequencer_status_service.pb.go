// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/admin/sequencer/v30/sequencer_status_service.proto

package v30

import (
	v30 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/admin/health/v30"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SequencerStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerStatusRequest) Reset() {
	*x = SequencerStatusRequest{}
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerStatusRequest) ProtoMessage() {}

func (x *SequencerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerStatusRequest.ProtoReflect.Descriptor instead.
func (*SequencerStatusRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescGZIP(), []int{0}
}

type SequencerStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*SequencerStatusResponse_Status
	//	*SequencerStatusResponse_NotInitialized
	Kind          isSequencerStatusResponse_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerStatusResponse) Reset() {
	*x = SequencerStatusResponse{}
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerStatusResponse) ProtoMessage() {}

func (x *SequencerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerStatusResponse.ProtoReflect.Descriptor instead.
func (*SequencerStatusResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescGZIP(), []int{1}
}

func (x *SequencerStatusResponse) GetKind() isSequencerStatusResponse_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *SequencerStatusResponse) GetStatus() *SequencerStatusResponse_SequencerStatusResponseStatus {
	if x != nil {
		if x, ok := x.Kind.(*SequencerStatusResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *SequencerStatusResponse) GetNotInitialized() *v30.NotInitialized {
	if x != nil {
		if x, ok := x.Kind.(*SequencerStatusResponse_NotInitialized); ok {
			return x.NotInitialized
		}
	}
	return nil
}

type isSequencerStatusResponse_Kind interface {
	isSequencerStatusResponse_Kind()
}

type SequencerStatusResponse_Status struct {
	Status *SequencerStatusResponse_SequencerStatusResponseStatus `protobuf:"bytes,1,opt,name=status,proto3,oneof"`
}

type SequencerStatusResponse_NotInitialized struct {
	NotInitialized *v30.NotInitialized `protobuf:"bytes,2,opt,name=not_initialized,json=notInitialized,proto3,oneof"`
}

func (*SequencerStatusResponse_Status) isSequencerStatusResponse_Kind() {}

func (*SequencerStatusResponse_NotInitialized) isSequencerStatusResponse_Kind() {}

type SequencerHealthStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Active        bool                   `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	Details       *string                `protobuf:"bytes,2,opt,name=details,proto3,oneof" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerHealthStatus) Reset() {
	*x = SequencerHealthStatus{}
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerHealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerHealthStatus) ProtoMessage() {}

func (x *SequencerHealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerHealthStatus.ProtoReflect.Descriptor instead.
func (*SequencerHealthStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescGZIP(), []int{2}
}

func (x *SequencerHealthStatus) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *SequencerHealthStatus) GetDetails() string {
	if x != nil && x.Details != nil {
		return *x.Details
	}
	return ""
}

type SequencerAdminStatus struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AcceptsAdminChanges bool                   `protobuf:"varint,1,opt,name=accepts_admin_changes,json=acceptsAdminChanges,proto3" json:"accepts_admin_changes,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SequencerAdminStatus) Reset() {
	*x = SequencerAdminStatus{}
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerAdminStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerAdminStatus) ProtoMessage() {}

func (x *SequencerAdminStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerAdminStatus.ProtoReflect.Descriptor instead.
func (*SequencerAdminStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescGZIP(), []int{3}
}

func (x *SequencerAdminStatus) GetAcceptsAdminChanges() bool {
	if x != nil {
		return x.AcceptsAdminChanges
	}
	return false
}

type SequencerStatusResponse_ConnectedParticipant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerStatusResponse_ConnectedParticipant) Reset() {
	*x = SequencerStatusResponse_ConnectedParticipant{}
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerStatusResponse_ConnectedParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerStatusResponse_ConnectedParticipant) ProtoMessage() {}

func (x *SequencerStatusResponse_ConnectedParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerStatusResponse_ConnectedParticipant.ProtoReflect.Descriptor instead.
func (*SequencerStatusResponse_ConnectedParticipant) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SequencerStatusResponse_ConnectedParticipant) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type SequencerStatusResponse_ConnectedMediator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerStatusResponse_ConnectedMediator) Reset() {
	*x = SequencerStatusResponse_ConnectedMediator{}
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerStatusResponse_ConnectedMediator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerStatusResponse_ConnectedMediator) ProtoMessage() {}

func (x *SequencerStatusResponse_ConnectedMediator) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerStatusResponse_ConnectedMediator.ProtoReflect.Descriptor instead.
func (*SequencerStatusResponse_ConnectedMediator) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescGZIP(), []int{1, 1}
}

func (x *SequencerStatusResponse_ConnectedMediator) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type SequencerStatusResponse_SequencerStatusResponseStatus struct {
	state                 protoimpl.MessageState                          `protogen:"open.v1"`
	CommonStatus          *v30.Status                                     `protobuf:"bytes,1,opt,name=common_status,json=commonStatus,proto3" json:"common_status,omitempty"`
	ConnectedParticipants []*SequencerStatusResponse_ConnectedParticipant `protobuf:"bytes,2,rep,name=connected_participants,json=connectedParticipants,proto3" json:"connected_participants,omitempty"`
	ConnectedMediators    []*SequencerStatusResponse_ConnectedMediator    `protobuf:"bytes,3,rep,name=connected_mediators,json=connectedMediators,proto3" json:"connected_mediators,omitempty"`
	Sequencer             *SequencerHealthStatus                          `protobuf:"bytes,4,opt,name=sequencer,proto3" json:"sequencer,omitempty"`
	SynchronizerId        string                                          `protobuf:"bytes,5,opt,name=synchronizer_id,json=synchronizerId,proto3" json:"synchronizer_id,omitempty"`
	Admin                 *SequencerAdminStatus                           `protobuf:"bytes,6,opt,name=admin,proto3" json:"admin,omitempty"`
	ProtocolVersion       int32                                           `protobuf:"varint,7,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) Reset() {
	*x = SequencerStatusResponse_SequencerStatusResponseStatus{}
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerStatusResponse_SequencerStatusResponseStatus) ProtoMessage() {}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerStatusResponse_SequencerStatusResponseStatus.ProtoReflect.Descriptor instead.
func (*SequencerStatusResponse_SequencerStatusResponseStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescGZIP(), []int{1, 2}
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) GetCommonStatus() *v30.Status {
	if x != nil {
		return x.CommonStatus
	}
	return nil
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) GetConnectedParticipants() []*SequencerStatusResponse_ConnectedParticipant {
	if x != nil {
		return x.ConnectedParticipants
	}
	return nil
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) GetConnectedMediators() []*SequencerStatusResponse_ConnectedMediator {
	if x != nil {
		return x.ConnectedMediators
	}
	return nil
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) GetSequencer() *SequencerHealthStatus {
	if x != nil {
		return x.Sequencer
	}
	return nil
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) GetSynchronizerId() string {
	if x != nil {
		return x.SynchronizerId
	}
	return ""
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) GetAdmin() *SequencerAdminStatus {
	if x != nil {
		return x.Admin
	}
	return nil
}

func (x *SequencerStatusResponse_SequencerStatusResponseStatus) GetProtocolVersion() int32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

var File_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDesc = "" +
	"\n" +
	"Jcom/digitalasset/canton/admin/sequencer/v30/sequencer_status_service.proto\x12+com.digitalasset.canton.admin.sequencer.v30\x1a=com/digitalasset/canton/admin/health/v30/status_service.proto\"\x18\n" +
	"\x16SequencerStatusRequest\"\xfa\a\n" +
	"\x17SequencerStatusResponse\x12|\n" +
	"\x06status\x18\x01 \x01(\v2b.com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.SequencerStatusResponseStatusH\x00R\x06status\x12c\n" +
	"\x0fnot_initialized\x18\x02 \x01(\v28.com.digitalasset.canton.admin.health.v30.NotInitializedH\x00R\x0enotInitialized\x1a(\n" +
	"\x14ConnectedParticipant\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x1a%\n" +
	"\x11ConnectedMediator\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x1a\xa2\x05\n" +
	"\x1dSequencerStatusResponseStatus\x12U\n" +
	"\rcommon_status\x18\x01 \x01(\v20.com.digitalasset.canton.admin.health.v30.StatusR\fcommonStatus\x12\x90\x01\n" +
	"\x16connected_participants\x18\x02 \x03(\v2Y.com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.ConnectedParticipantR\x15connectedParticipants\x12\x87\x01\n" +
	"\x13connected_mediators\x18\x03 \x03(\v2V.com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.ConnectedMediatorR\x12connectedMediators\x12`\n" +
	"\tsequencer\x18\x04 \x01(\v2B.com.digitalasset.canton.admin.sequencer.v30.SequencerHealthStatusR\tsequencer\x12'\n" +
	"\x0fsynchronizer_id\x18\x05 \x01(\tR\x0esynchronizerId\x12W\n" +
	"\x05admin\x18\x06 \x01(\v2A.com.digitalasset.canton.admin.sequencer.v30.SequencerAdminStatusR\x05admin\x12)\n" +
	"\x10protocol_version\x18\a \x01(\x05R\x0fprotocolVersionB\x06\n" +
	"\x04kind\"Z\n" +
	"\x15SequencerHealthStatus\x12\x16\n" +
	"\x06active\x18\x01 \x01(\bR\x06active\x12\x1d\n" +
	"\adetails\x18\x02 \x01(\tH\x00R\adetails\x88\x01\x01B\n" +
	"\n" +
	"\b_details\"J\n" +
	"\x14SequencerAdminStatus\x122\n" +
	"\x15accepts_admin_changes\x18\x01 \x01(\bR\x13acceptsAdminChanges2\xb7\x01\n" +
	"\x16SequencerStatusService\x12\x9c\x01\n" +
	"\x0fSequencerStatus\x12C.com.digitalasset.canton.admin.sequencer.v30.SequencerStatusRequest\x1aD.com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponseB\\ZZgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/admin/sequencer/v30b\x06proto3"

var (
	file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescData []byte
)

func file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDesc), len(file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDescData
}

var file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_goTypes = []any{
	(*SequencerStatusRequest)(nil),                                // 0: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusRequest
	(*SequencerStatusResponse)(nil),                               // 1: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse
	(*SequencerHealthStatus)(nil),                                 // 2: com.digitalasset.canton.admin.sequencer.v30.SequencerHealthStatus
	(*SequencerAdminStatus)(nil),                                  // 3: com.digitalasset.canton.admin.sequencer.v30.SequencerAdminStatus
	(*SequencerStatusResponse_ConnectedParticipant)(nil),          // 4: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.ConnectedParticipant
	(*SequencerStatusResponse_ConnectedMediator)(nil),             // 5: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.ConnectedMediator
	(*SequencerStatusResponse_SequencerStatusResponseStatus)(nil), // 6: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.SequencerStatusResponseStatus
	(*v30.NotInitialized)(nil),                                    // 7: com.digitalasset.canton.admin.health.v30.NotInitialized
	(*v30.Status)(nil),                                            // 8: com.digitalasset.canton.admin.health.v30.Status
}
var file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_depIdxs = []int32{
	6, // 0: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.status:type_name -> com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.SequencerStatusResponseStatus
	7, // 1: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.not_initialized:type_name -> com.digitalasset.canton.admin.health.v30.NotInitialized
	8, // 2: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.SequencerStatusResponseStatus.common_status:type_name -> com.digitalasset.canton.admin.health.v30.Status
	4, // 3: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.SequencerStatusResponseStatus.connected_participants:type_name -> com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.ConnectedParticipant
	5, // 4: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.SequencerStatusResponseStatus.connected_mediators:type_name -> com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.ConnectedMediator
	2, // 5: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.SequencerStatusResponseStatus.sequencer:type_name -> com.digitalasset.canton.admin.sequencer.v30.SequencerHealthStatus
	3, // 6: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse.SequencerStatusResponseStatus.admin:type_name -> com.digitalasset.canton.admin.sequencer.v30.SequencerAdminStatus
	0, // 7: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusService.SequencerStatus:input_type -> com.digitalasset.canton.admin.sequencer.v30.SequencerStatusRequest
	1, // 8: com.digitalasset.canton.admin.sequencer.v30.SequencerStatusService.SequencerStatus:output_type -> com.digitalasset.canton.admin.sequencer.v30.SequencerStatusResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_init() }
func file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_init() {
	if File_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto != nil {
		return
	}
	file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[1].OneofWrappers = []any{
		(*SequencerStatusResponse_Status)(nil),
		(*SequencerStatusResponse_NotInitialized)(nil),
	}
	file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDesc), len(file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto = out.File
	file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_goTypes = nil
	file_com_digitalasset_canton_admin_sequencer_v30_sequencer_status_service_proto_depIdxs = nil
}
