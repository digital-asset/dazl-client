// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/domain/api/v0/sequencer_connect_service.proto

package v0

import (
	v0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0"
	v1 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SequencerConnect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect) Reset() {
	*x = SequencerConnect{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect) ProtoMessage() {}

func (x *SequencerConnect) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect.ProtoReflect.Descriptor instead.
func (*SequencerConnect) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0}
}

type SequencerConnect_GetDomainId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_GetDomainId) Reset() {
	*x = SequencerConnect_GetDomainId{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_GetDomainId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_GetDomainId) ProtoMessage() {}

func (x *SequencerConnect_GetDomainId) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_GetDomainId.ProtoReflect.Descriptor instead.
func (*SequencerConnect_GetDomainId) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 0}
}

type SequencerConnect_GetDomainParameters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_GetDomainParameters) Reset() {
	*x = SequencerConnect_GetDomainParameters{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_GetDomainParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_GetDomainParameters) ProtoMessage() {}

func (x *SequencerConnect_GetDomainParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_GetDomainParameters.ProtoReflect.Descriptor instead.
func (*SequencerConnect_GetDomainParameters) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 1}
}

type SequencerConnect_VerifyActive struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_VerifyActive) Reset() {
	*x = SequencerConnect_VerifyActive{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_VerifyActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_VerifyActive) ProtoMessage() {}

func (x *SequencerConnect_VerifyActive) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_VerifyActive.ProtoReflect.Descriptor instead.
func (*SequencerConnect_VerifyActive) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 2}
}

type SequencerConnect_GetDomainId_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_GetDomainId_Request) Reset() {
	*x = SequencerConnect_GetDomainId_Request{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_GetDomainId_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_GetDomainId_Request) ProtoMessage() {}

func (x *SequencerConnect_GetDomainId_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_GetDomainId_Request.ProtoReflect.Descriptor instead.
func (*SequencerConnect_GetDomainId_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 0, 0}
}

type SequencerConnect_GetDomainId_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	SequencerId   string                 `protobuf:"bytes,2,opt,name=sequencer_id,json=sequencerId,proto3" json:"sequencer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_GetDomainId_Response) Reset() {
	*x = SequencerConnect_GetDomainId_Response{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_GetDomainId_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_GetDomainId_Response) ProtoMessage() {}

func (x *SequencerConnect_GetDomainId_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_GetDomainId_Response.ProtoReflect.Descriptor instead.
func (*SequencerConnect_GetDomainId_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *SequencerConnect_GetDomainId_Response) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *SequencerConnect_GetDomainId_Response) GetSequencerId() string {
	if x != nil {
		return x.SequencerId
	}
	return ""
}

type SequencerConnect_GetDomainParameters_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_GetDomainParameters_Request) Reset() {
	*x = SequencerConnect_GetDomainParameters_Request{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_GetDomainParameters_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_GetDomainParameters_Request) ProtoMessage() {}

func (x *SequencerConnect_GetDomainParameters_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_GetDomainParameters_Request.ProtoReflect.Descriptor instead.
func (*SequencerConnect_GetDomainParameters_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 1, 0}
}

type SequencerConnect_GetDomainParameters_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Parameters:
	//
	//	*SequencerConnect_GetDomainParameters_Response_ParametersV0
	//	*SequencerConnect_GetDomainParameters_Response_ParametersV1
	Parameters    isSequencerConnect_GetDomainParameters_Response_Parameters `protobuf_oneof:"parameters"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_GetDomainParameters_Response) Reset() {
	*x = SequencerConnect_GetDomainParameters_Response{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_GetDomainParameters_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_GetDomainParameters_Response) ProtoMessage() {}

func (x *SequencerConnect_GetDomainParameters_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_GetDomainParameters_Response.ProtoReflect.Descriptor instead.
func (*SequencerConnect_GetDomainParameters_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *SequencerConnect_GetDomainParameters_Response) GetParameters() isSequencerConnect_GetDomainParameters_Response_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *SequencerConnect_GetDomainParameters_Response) GetParametersV0() *v0.StaticDomainParameters {
	if x != nil {
		if x, ok := x.Parameters.(*SequencerConnect_GetDomainParameters_Response_ParametersV0); ok {
			return x.ParametersV0
		}
	}
	return nil
}

func (x *SequencerConnect_GetDomainParameters_Response) GetParametersV1() *v1.StaticDomainParameters {
	if x != nil {
		if x, ok := x.Parameters.(*SequencerConnect_GetDomainParameters_Response_ParametersV1); ok {
			return x.ParametersV1
		}
	}
	return nil
}

type isSequencerConnect_GetDomainParameters_Response_Parameters interface {
	isSequencerConnect_GetDomainParameters_Response_Parameters()
}

type SequencerConnect_GetDomainParameters_Response_ParametersV0 struct {
	ParametersV0 *v0.StaticDomainParameters `protobuf:"bytes,1,opt,name=parameters_v0,json=parametersV0,proto3,oneof"`
}

type SequencerConnect_GetDomainParameters_Response_ParametersV1 struct {
	ParametersV1 *v1.StaticDomainParameters `protobuf:"bytes,2,opt,name=parameters_v1,json=parametersV1,proto3,oneof"`
}

func (*SequencerConnect_GetDomainParameters_Response_ParametersV0) isSequencerConnect_GetDomainParameters_Response_Parameters() {
}

func (*SequencerConnect_GetDomainParameters_Response_ParametersV1) isSequencerConnect_GetDomainParameters_Response_Parameters() {
}

type SequencerConnect_VerifyActive_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_VerifyActive_Request) Reset() {
	*x = SequencerConnect_VerifyActive_Request{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_VerifyActive_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_VerifyActive_Request) ProtoMessage() {}

func (x *SequencerConnect_VerifyActive_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_VerifyActive_Request.ProtoReflect.Descriptor instead.
func (*SequencerConnect_VerifyActive_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 2, 0}
}

type SequencerConnect_VerifyActive_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*SequencerConnect_VerifyActive_Response_Success
	//	*SequencerConnect_VerifyActive_Response_Failure
	Value         isSequencerConnect_VerifyActive_Response_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_VerifyActive_Response) Reset() {
	*x = SequencerConnect_VerifyActive_Response{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_VerifyActive_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_VerifyActive_Response) ProtoMessage() {}

func (x *SequencerConnect_VerifyActive_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_VerifyActive_Response.ProtoReflect.Descriptor instead.
func (*SequencerConnect_VerifyActive_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *SequencerConnect_VerifyActive_Response) GetValue() isSequencerConnect_VerifyActive_Response_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SequencerConnect_VerifyActive_Response) GetSuccess() *SequencerConnect_VerifyActive_Success {
	if x != nil {
		if x, ok := x.Value.(*SequencerConnect_VerifyActive_Response_Success); ok {
			return x.Success
		}
	}
	return nil
}

func (x *SequencerConnect_VerifyActive_Response) GetFailure() *SequencerConnect_VerifyActive_Failure {
	if x != nil {
		if x, ok := x.Value.(*SequencerConnect_VerifyActive_Response_Failure); ok {
			return x.Failure
		}
	}
	return nil
}

type isSequencerConnect_VerifyActive_Response_Value interface {
	isSequencerConnect_VerifyActive_Response_Value()
}

type SequencerConnect_VerifyActive_Response_Success struct {
	Success *SequencerConnect_VerifyActive_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type SequencerConnect_VerifyActive_Response_Failure struct {
	Failure *SequencerConnect_VerifyActive_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*SequencerConnect_VerifyActive_Response_Success) isSequencerConnect_VerifyActive_Response_Value() {
}

func (*SequencerConnect_VerifyActive_Response_Failure) isSequencerConnect_VerifyActive_Response_Value() {
}

type SequencerConnect_VerifyActive_Success struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsActive      bool                   `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_VerifyActive_Success) Reset() {
	*x = SequencerConnect_VerifyActive_Success{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_VerifyActive_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_VerifyActive_Success) ProtoMessage() {}

func (x *SequencerConnect_VerifyActive_Success) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_VerifyActive_Success.ProtoReflect.Descriptor instead.
func (*SequencerConnect_VerifyActive_Success) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 2, 2}
}

func (x *SequencerConnect_VerifyActive_Success) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type SequencerConnect_VerifyActive_Failure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SequencerConnect_VerifyActive_Failure) Reset() {
	*x = SequencerConnect_VerifyActive_Failure{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnect_VerifyActive_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnect_VerifyActive_Failure) ProtoMessage() {}

func (x *SequencerConnect_VerifyActive_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnect_VerifyActive_Failure.ProtoReflect.Descriptor instead.
func (*SequencerConnect_VerifyActive_Failure) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP(), []int{0, 2, 3}
}

func (x *SequencerConnect_VerifyActive_Failure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDesc = "" +
	"\n" +
	"Ecom/digitalasset/canton/domain/api/v0/sequencer_connect_service.proto\x12%com.digitalasset.canton.domain.api.v0\x1a=com/digitalasset/canton/domain/api/v0/service_agreement.proto\x1a4com/digitalasset/canton/protocol/v0/sequencing.proto\x1a4com/digitalasset/canton/protocol/v1/sequencing.proto\"\xcf\x05\n" +
	"\x10SequencerConnect\x1ad\n" +
	"\vGetDomainId\x1a\t\n" +
	"\aRequest\x1aJ\n" +
	"\bResponse\x12\x1b\n" +
	"\tdomain_id\x18\x01 \x01(\tR\bdomainId\x12!\n" +
	"\fsequencer_id\x18\x02 \x01(\tR\vsequencerId\x1a\x83\x02\n" +
	"\x13GetDomainParameters\x1a\t\n" +
	"\aRequest\x1a\xe0\x01\n" +
	"\bResponse\x12b\n" +
	"\rparameters_v0\x18\x01 \x01(\v2;.com.digitalasset.canton.protocol.v0.StaticDomainParametersH\x00R\fparametersV0\x12b\n" +
	"\rparameters_v1\x18\x02 \x01(\v2;.com.digitalasset.canton.protocol.v1.StaticDomainParametersH\x00R\fparametersV1B\f\n" +
	"\n" +
	"parameters\x1a\xce\x02\n" +
	"\fVerifyActive\x1a\t\n" +
	"\aRequest\x1a\xe7\x01\n" +
	"\bResponse\x12h\n" +
	"\asuccess\x18\x01 \x01(\v2L.com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.SuccessH\x00R\asuccess\x12h\n" +
	"\afailure\x18\x02 \x01(\v2L.com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.FailureH\x00R\afailureB\a\n" +
	"\x05value\x1a&\n" +
	"\aSuccess\x12\x1b\n" +
	"\tis_active\x18\x01 \x01(\bR\bisActive\x1a!\n" +
	"\aFailure\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason2\xd2\x06\n" +
	"\x17SequencerConnectService\x12|\n" +
	"\tHandshake\x126.com.digitalasset.canton.protocol.v0.Handshake.Request\x1a7.com.digitalasset.canton.protocol.v0.Handshake.Response\x12\xa8\x01\n" +
	"\vGetDomainId\x12K.com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainId.Request\x1aL.com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainId.Response\x12\xc0\x01\n" +
	"\x13GetDomainParameters\x12S.com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters.Request\x1aT.com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters.Response\x12\xab\x01\n" +
	"\fVerifyActive\x12L.com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Request\x1aM.com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Response\x12\x9c\x01\n" +
	"\x13GetServiceAgreement\x12A.com.digitalasset.canton.domain.api.v0.GetServiceAgreementRequest\x1aB.com.digitalasset.canton.domain.api.v0.GetServiceAgreementResponseBVZTgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/domain/api/v0b\x06proto3"

var (
	file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescData []byte
)

func file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDesc), len(file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDescData
}

var file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_goTypes = []any{
	(*SequencerConnect)(nil),                              // 0: com.digitalasset.canton.domain.api.v0.SequencerConnect
	(*SequencerConnect_GetDomainId)(nil),                  // 1: com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainId
	(*SequencerConnect_GetDomainParameters)(nil),          // 2: com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters
	(*SequencerConnect_VerifyActive)(nil),                 // 3: com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive
	(*SequencerConnect_GetDomainId_Request)(nil),          // 4: com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainId.Request
	(*SequencerConnect_GetDomainId_Response)(nil),         // 5: com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainId.Response
	(*SequencerConnect_GetDomainParameters_Request)(nil),  // 6: com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters.Request
	(*SequencerConnect_GetDomainParameters_Response)(nil), // 7: com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters.Response
	(*SequencerConnect_VerifyActive_Request)(nil),         // 8: com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Request
	(*SequencerConnect_VerifyActive_Response)(nil),        // 9: com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Response
	(*SequencerConnect_VerifyActive_Success)(nil),         // 10: com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Success
	(*SequencerConnect_VerifyActive_Failure)(nil),         // 11: com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Failure
	(*v0.StaticDomainParameters)(nil),                     // 12: com.digitalasset.canton.protocol.v0.StaticDomainParameters
	(*v1.StaticDomainParameters)(nil),                     // 13: com.digitalasset.canton.protocol.v1.StaticDomainParameters
	(*v0.Handshake_Request)(nil),                          // 14: com.digitalasset.canton.protocol.v0.Handshake.Request
	(*GetServiceAgreementRequest)(nil),                    // 15: com.digitalasset.canton.domain.api.v0.GetServiceAgreementRequest
	(*v0.Handshake_Response)(nil),                         // 16: com.digitalasset.canton.protocol.v0.Handshake.Response
	(*GetServiceAgreementResponse)(nil),                   // 17: com.digitalasset.canton.domain.api.v0.GetServiceAgreementResponse
}
var file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_depIdxs = []int32{
	12, // 0: com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters.Response.parameters_v0:type_name -> com.digitalasset.canton.protocol.v0.StaticDomainParameters
	13, // 1: com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters.Response.parameters_v1:type_name -> com.digitalasset.canton.protocol.v1.StaticDomainParameters
	10, // 2: com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Response.success:type_name -> com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Success
	11, // 3: com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Response.failure:type_name -> com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Failure
	14, // 4: com.digitalasset.canton.domain.api.v0.SequencerConnectService.Handshake:input_type -> com.digitalasset.canton.protocol.v0.Handshake.Request
	4,  // 5: com.digitalasset.canton.domain.api.v0.SequencerConnectService.GetDomainId:input_type -> com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainId.Request
	6,  // 6: com.digitalasset.canton.domain.api.v0.SequencerConnectService.GetDomainParameters:input_type -> com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters.Request
	8,  // 7: com.digitalasset.canton.domain.api.v0.SequencerConnectService.VerifyActive:input_type -> com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Request
	15, // 8: com.digitalasset.canton.domain.api.v0.SequencerConnectService.GetServiceAgreement:input_type -> com.digitalasset.canton.domain.api.v0.GetServiceAgreementRequest
	16, // 9: com.digitalasset.canton.domain.api.v0.SequencerConnectService.Handshake:output_type -> com.digitalasset.canton.protocol.v0.Handshake.Response
	5,  // 10: com.digitalasset.canton.domain.api.v0.SequencerConnectService.GetDomainId:output_type -> com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainId.Response
	7,  // 11: com.digitalasset.canton.domain.api.v0.SequencerConnectService.GetDomainParameters:output_type -> com.digitalasset.canton.domain.api.v0.SequencerConnect.GetDomainParameters.Response
	9,  // 12: com.digitalasset.canton.domain.api.v0.SequencerConnectService.VerifyActive:output_type -> com.digitalasset.canton.domain.api.v0.SequencerConnect.VerifyActive.Response
	17, // 13: com.digitalasset.canton.domain.api.v0.SequencerConnectService.GetServiceAgreement:output_type -> com.digitalasset.canton.domain.api.v0.GetServiceAgreementResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_init() }
func file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_init() {
	if File_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto != nil {
		return
	}
	file_com_digitalasset_canton_domain_api_v0_service_agreement_proto_init()
	file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[7].OneofWrappers = []any{
		(*SequencerConnect_GetDomainParameters_Response_ParametersV0)(nil),
		(*SequencerConnect_GetDomainParameters_Response_ParametersV1)(nil),
	}
	file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes[9].OneofWrappers = []any{
		(*SequencerConnect_VerifyActive_Response_Success)(nil),
		(*SequencerConnect_VerifyActive_Response_Failure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDesc), len(file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto = out.File
	file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_goTypes = nil
	file_com_digitalasset_canton_domain_api_v0_sequencer_connect_service_proto_depIdxs = nil
}
