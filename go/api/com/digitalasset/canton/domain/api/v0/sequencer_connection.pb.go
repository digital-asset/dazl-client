// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/domain/api/v0/sequencer_connection.proto

package v0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SequencerApiType int32

const (
	SequencerApiType_Grpc SequencerApiType = 0
)

// Enum value maps for SequencerApiType.
var (
	SequencerApiType_name = map[int32]string{
		0: "Grpc",
	}
	SequencerApiType_value = map[string]int32{
		"Grpc": 0,
	}
)

func (x SequencerApiType) Enum() *SequencerApiType {
	p := new(SequencerApiType)
	*p = x
	return p
}

func (x SequencerApiType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SequencerApiType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_enumTypes[0].Descriptor()
}

func (SequencerApiType) Type() protoreflect.EnumType {
	return &file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_enumTypes[0]
}

func (x SequencerApiType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SequencerApiType.Descriptor instead.
func (SequencerApiType) EnumDescriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescGZIP(), []int{0}
}

type SequencerConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*SequencerConnection_Grpc_
	Type  isSequencerConnection_Type `protobuf_oneof:"type"`
	Alias string                     `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *SequencerConnection) Reset() {
	*x = SequencerConnection{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnection) ProtoMessage() {}

func (x *SequencerConnection) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnection.ProtoReflect.Descriptor instead.
func (*SequencerConnection) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescGZIP(), []int{0}
}

func (m *SequencerConnection) GetType() isSequencerConnection_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SequencerConnection) GetGrpc() *SequencerConnection_Grpc {
	if x, ok := x.GetType().(*SequencerConnection_Grpc_); ok {
		return x.Grpc
	}
	return nil
}

func (x *SequencerConnection) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type isSequencerConnection_Type interface {
	isSequencerConnection_Type()
}

type SequencerConnection_Grpc_ struct {
	Grpc *SequencerConnection_Grpc `protobuf:"bytes,2,opt,name=grpc,proto3,oneof"`
}

func (*SequencerConnection_Grpc_) isSequencerConnection_Type() {}

type SequencerConnection_Grpc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections             []string               `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	TransportSecurity       bool                   `protobuf:"varint,2,opt,name=transportSecurity,proto3" json:"transportSecurity,omitempty"`
	CustomTrustCertificates *wrapperspb.BytesValue `protobuf:"bytes,3,opt,name=customTrustCertificates,proto3" json:"customTrustCertificates,omitempty"`
}

func (x *SequencerConnection_Grpc) Reset() {
	*x = SequencerConnection_Grpc{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerConnection_Grpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerConnection_Grpc) ProtoMessage() {}

func (x *SequencerConnection_Grpc) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerConnection_Grpc.ProtoReflect.Descriptor instead.
func (*SequencerConnection_Grpc) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SequencerConnection_Grpc) GetConnections() []string {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *SequencerConnection_Grpc) GetTransportSecurity() bool {
	if x != nil {
		return x.TransportSecurity
	}
	return false
}

func (x *SequencerConnection_Grpc) GetCustomTrustCertificates() *wrapperspb.BytesValue {
	if x != nil {
		return x.CustomTrustCertificates
	}
	return nil
}

var File_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDesc = []byte{
	0x0a, 0x40, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x02, 0x0a, 0x13, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x55, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x70, 0x63,
	0x48, 0x00, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x1a, 0xad,
	0x01, 0x0a, 0x04, 0x47, 0x72, 0x70, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x72, 0x75, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x1c, 0x0a, 0x10, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x72, 0x41, 0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x72,
	0x70, 0x63, 0x10, 0x00, 0x42, 0x56, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f,
	0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescData = file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDesc
)

func file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescData)
	})
	return file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDescData
}

var file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_goTypes = []any{
	(SequencerApiType)(0),            // 0: com.digitalasset.canton.domain.api.v0.SequencerApiType
	(*SequencerConnection)(nil),      // 1: com.digitalasset.canton.domain.api.v0.SequencerConnection
	(*SequencerConnection_Grpc)(nil), // 2: com.digitalasset.canton.domain.api.v0.SequencerConnection.Grpc
	(*wrapperspb.BytesValue)(nil),    // 3: google.protobuf.BytesValue
}
var file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_depIdxs = []int32{
	2, // 0: com.digitalasset.canton.domain.api.v0.SequencerConnection.grpc:type_name -> com.digitalasset.canton.domain.api.v0.SequencerConnection.Grpc
	3, // 1: com.digitalasset.canton.domain.api.v0.SequencerConnection.Grpc.customTrustCertificates:type_name -> google.protobuf.BytesValue
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_init() }
func file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_init() {
	if File_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto != nil {
		return
	}
	file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_msgTypes[0].OneofWrappers = []any{
		(*SequencerConnection_Grpc_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_depIdxs,
		EnumInfos:         file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_enumTypes,
		MessageInfos:      file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto = out.File
	file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_rawDesc = nil
	file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_goTypes = nil
	file_com_digitalasset_canton_domain_api_v0_sequencer_connection_proto_depIdxs = nil
}
