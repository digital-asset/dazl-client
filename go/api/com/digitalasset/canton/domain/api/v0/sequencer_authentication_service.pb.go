// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/domain/api/v0/sequencer_authentication_service.proto

package v0

import (
	v0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Challenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{0}
}

type Authentication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Authentication) Reset() {
	*x = Authentication{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authentication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authentication) ProtoMessage() {}

func (x *Authentication) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authentication.ProtoReflect.Descriptor instead.
func (*Authentication) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{1}
}

type Challenge_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member                 string   `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	MemberProtocolVersions []string `protobuf:"bytes,2,rep,name=member_protocol_versions,json=memberProtocolVersions,proto3" json:"member_protocol_versions,omitempty"`
}

func (x *Challenge_Request) Reset() {
	*x = Challenge_Request{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Challenge_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge_Request) ProtoMessage() {}

func (x *Challenge_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge_Request.ProtoReflect.Descriptor instead.
func (*Challenge_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Challenge_Request) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *Challenge_Request) GetMemberProtocolVersions() []string {
	if x != nil {
		return x.MemberProtocolVersions
	}
	return nil
}

type Challenge_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Challenge_Response_Success
	//	*Challenge_Response_Failure
	Value isChallenge_Response_Value `protobuf_oneof:"value"`
}

func (x *Challenge_Response) Reset() {
	*x = Challenge_Response{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Challenge_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge_Response) ProtoMessage() {}

func (x *Challenge_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge_Response.ProtoReflect.Descriptor instead.
func (*Challenge_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{0, 1}
}

func (m *Challenge_Response) GetValue() isChallenge_Response_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Challenge_Response) GetSuccess() *Challenge_Success {
	if x, ok := x.GetValue().(*Challenge_Response_Success); ok {
		return x.Success
	}
	return nil
}

func (x *Challenge_Response) GetFailure() *Challenge_Failure {
	if x, ok := x.GetValue().(*Challenge_Response_Failure); ok {
		return x.Failure
	}
	return nil
}

type isChallenge_Response_Value interface {
	isChallenge_Response_Value()
}

type Challenge_Response_Success struct {
	Success *Challenge_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type Challenge_Response_Failure struct {
	Failure *Challenge_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*Challenge_Response_Success) isChallenge_Response_Value() {}

func (*Challenge_Response_Failure) isChallenge_Response_Value() {}

type Challenge_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainVersion string   `protobuf:"bytes,1,opt,name=domain_version,json=domainVersion,proto3" json:"domain_version,omitempty"`
	Nonce         []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Fingerprints  []string `protobuf:"bytes,3,rep,name=fingerprints,proto3" json:"fingerprints,omitempty"`
}

func (x *Challenge_Success) Reset() {
	*x = Challenge_Success{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Challenge_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge_Success) ProtoMessage() {}

func (x *Challenge_Success) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge_Success.ProtoReflect.Descriptor instead.
func (*Challenge_Success) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Challenge_Success) GetDomainVersion() string {
	if x != nil {
		return x.DomainVersion
	}
	return ""
}

func (x *Challenge_Success) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Challenge_Success) GetFingerprints() []string {
	if x != nil {
		return x.Fingerprints
	}
	return nil
}

type Challenge_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Challenge_Failure) Reset() {
	*x = Challenge_Failure{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Challenge_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge_Failure) ProtoMessage() {}

func (x *Challenge_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge_Failure.ProtoReflect.Descriptor instead.
func (*Challenge_Failure) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Challenge_Failure) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Challenge_Failure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type Authentication_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member    string        `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Signature *v0.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Nonce     []byte        `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *Authentication_Request) Reset() {
	*x = Authentication_Request{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authentication_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authentication_Request) ProtoMessage() {}

func (x *Authentication_Request) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authentication_Request.ProtoReflect.Descriptor instead.
func (*Authentication_Request) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Authentication_Request) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *Authentication_Request) GetSignature() *v0.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Authentication_Request) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type Authentication_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Authentication_Response_Success
	//	*Authentication_Response_Failure
	Value isAuthentication_Response_Value `protobuf_oneof:"value"`
}

func (x *Authentication_Response) Reset() {
	*x = Authentication_Response{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authentication_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authentication_Response) ProtoMessage() {}

func (x *Authentication_Response) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authentication_Response.ProtoReflect.Descriptor instead.
func (*Authentication_Response) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{1, 1}
}

func (m *Authentication_Response) GetValue() isAuthentication_Response_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Authentication_Response) GetSuccess() *Authentication_Success {
	if x, ok := x.GetValue().(*Authentication_Response_Success); ok {
		return x.Success
	}
	return nil
}

func (x *Authentication_Response) GetFailure() *Authentication_Failure {
	if x, ok := x.GetValue().(*Authentication_Response_Failure); ok {
		return x.Failure
	}
	return nil
}

type isAuthentication_Response_Value interface {
	isAuthentication_Response_Value()
}

type Authentication_Response_Success struct {
	Success *Authentication_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type Authentication_Response_Failure struct {
	Failure *Authentication_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*Authentication_Response_Success) isAuthentication_Response_Value() {}

func (*Authentication_Response_Failure) isAuthentication_Response_Value() {}

type Authentication_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     []byte                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *Authentication_Success) Reset() {
	*x = Authentication_Success{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authentication_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authentication_Success) ProtoMessage() {}

func (x *Authentication_Success) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authentication_Success.ProtoReflect.Descriptor instead.
func (*Authentication_Success) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Authentication_Success) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *Authentication_Success) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type Authentication_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Authentication_Failure) Reset() {
	*x = Authentication_Failure{}
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authentication_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authentication_Failure) ProtoMessage() {}

func (x *Authentication_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authentication_Failure.ProtoReflect.Descriptor instead.
func (*Authentication_Failure) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Authentication_Failure) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Authentication_Failure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x76, 0x30, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x03, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x1a, 0x5b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0xbf, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x54, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x6a, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x1a,
	0x35, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xf5, 0x03, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x83, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4a, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x1a,
	0xc9, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x59, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64,
	0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x5a, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x1a, 0x35, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x32, 0xb7,
	0x02, 0x0a, 0x1e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x82, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12,
	0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x56, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2f, 0x76, 0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescData = file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDesc
)

func file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescData)
	})
	return file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDescData
}

var file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_goTypes = []any{
	(*Challenge)(nil),               // 0: com.digitalasset.canton.domain.api.v0.Challenge
	(*Authentication)(nil),          // 1: com.digitalasset.canton.domain.api.v0.Authentication
	(*Challenge_Request)(nil),       // 2: com.digitalasset.canton.domain.api.v0.Challenge.Request
	(*Challenge_Response)(nil),      // 3: com.digitalasset.canton.domain.api.v0.Challenge.Response
	(*Challenge_Success)(nil),       // 4: com.digitalasset.canton.domain.api.v0.Challenge.Success
	(*Challenge_Failure)(nil),       // 5: com.digitalasset.canton.domain.api.v0.Challenge.Failure
	(*Authentication_Request)(nil),  // 6: com.digitalasset.canton.domain.api.v0.Authentication.Request
	(*Authentication_Response)(nil), // 7: com.digitalasset.canton.domain.api.v0.Authentication.Response
	(*Authentication_Success)(nil),  // 8: com.digitalasset.canton.domain.api.v0.Authentication.Success
	(*Authentication_Failure)(nil),  // 9: com.digitalasset.canton.domain.api.v0.Authentication.Failure
	(*v0.Signature)(nil),            // 10: com.digitalasset.canton.crypto.v0.Signature
	(*timestamppb.Timestamp)(nil),   // 11: google.protobuf.Timestamp
}
var file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_depIdxs = []int32{
	4,  // 0: com.digitalasset.canton.domain.api.v0.Challenge.Response.success:type_name -> com.digitalasset.canton.domain.api.v0.Challenge.Success
	5,  // 1: com.digitalasset.canton.domain.api.v0.Challenge.Response.failure:type_name -> com.digitalasset.canton.domain.api.v0.Challenge.Failure
	10, // 2: com.digitalasset.canton.domain.api.v0.Authentication.Request.signature:type_name -> com.digitalasset.canton.crypto.v0.Signature
	8,  // 3: com.digitalasset.canton.domain.api.v0.Authentication.Response.success:type_name -> com.digitalasset.canton.domain.api.v0.Authentication.Success
	9,  // 4: com.digitalasset.canton.domain.api.v0.Authentication.Response.failure:type_name -> com.digitalasset.canton.domain.api.v0.Authentication.Failure
	11, // 5: com.digitalasset.canton.domain.api.v0.Authentication.Success.expires_at:type_name -> google.protobuf.Timestamp
	2,  // 6: com.digitalasset.canton.domain.api.v0.SequencerAuthenticationService.Challenge:input_type -> com.digitalasset.canton.domain.api.v0.Challenge.Request
	6,  // 7: com.digitalasset.canton.domain.api.v0.SequencerAuthenticationService.Authenticate:input_type -> com.digitalasset.canton.domain.api.v0.Authentication.Request
	3,  // 8: com.digitalasset.canton.domain.api.v0.SequencerAuthenticationService.Challenge:output_type -> com.digitalasset.canton.domain.api.v0.Challenge.Response
	7,  // 9: com.digitalasset.canton.domain.api.v0.SequencerAuthenticationService.Authenticate:output_type -> com.digitalasset.canton.domain.api.v0.Authentication.Response
	8,  // [8:10] is the sub-list for method output_type
	6,  // [6:8] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_init() }
func file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_init() {
	if File_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto != nil {
		return
	}
	file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[3].OneofWrappers = []any{
		(*Challenge_Response_Success)(nil),
		(*Challenge_Response_Failure)(nil),
	}
	file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes[7].OneofWrappers = []any{
		(*Authentication_Response_Success)(nil),
		(*Authentication_Response_Failure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto = out.File
	file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_rawDesc = nil
	file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_goTypes = nil
	file_com_digitalasset_canton_domain_api_v0_sequencer_authentication_service_proto_depIdxs = nil
}
