// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/domain/api/v0/domain_time_service.proto

package v0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FetchTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId       *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	FreshnessBound *durationpb.Duration    `protobuf:"bytes,2,opt,name=freshness_bound,json=freshnessBound,proto3" json:"freshness_bound,omitempty"`
}

func (x *FetchTimeRequest) Reset() {
	*x = FetchTimeRequest{}
	mi := &file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchTimeRequest) ProtoMessage() {}

func (x *FetchTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchTimeRequest.ProtoReflect.Descriptor instead.
func (*FetchTimeRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescGZIP(), []int{0}
}

func (x *FetchTimeRequest) GetDomainId() *wrapperspb.StringValue {
	if x != nil {
		return x.DomainId
	}
	return nil
}

func (x *FetchTimeRequest) GetFreshnessBound() *durationpb.Duration {
	if x != nil {
		return x.FreshnessBound
	}
	return nil
}

type FetchTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *FetchTimeResponse) Reset() {
	*x = FetchTimeResponse{}
	mi := &file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchTimeResponse) ProtoMessage() {}

func (x *FetchTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchTimeResponse.ProtoReflect.Descriptor instead.
func (*FetchTimeResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescGZIP(), []int{1}
}

func (x *FetchTimeResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AwaitTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId  *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Timestamp *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *AwaitTimeRequest) Reset() {
	*x = AwaitTimeRequest{}
	mi := &file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwaitTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwaitTimeRequest) ProtoMessage() {}

func (x *AwaitTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwaitTimeRequest.ProtoReflect.Descriptor instead.
func (*AwaitTimeRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescGZIP(), []int{2}
}

func (x *AwaitTimeRequest) GetDomainId() *wrapperspb.StringValue {
	if x != nil {
		return x.DomainId
	}
	return nil
}

func (x *AwaitTimeRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_com_digitalasset_canton_domain_api_v0_domain_time_service_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x4d, 0x0a, 0x11, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x41, 0x77,
	0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x32, 0xf1, 0x01, 0x0a, 0x11, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7e, 0x0a, 0x09, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x09, 0x41, 0x77, 0x61,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x41,
	0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x56, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescData = file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDesc
)

func file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescData)
	})
	return file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDescData
}

var file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_goTypes = []any{
	(*FetchTimeRequest)(nil),       // 0: com.digitalasset.canton.domain.api.v0.FetchTimeRequest
	(*FetchTimeResponse)(nil),      // 1: com.digitalasset.canton.domain.api.v0.FetchTimeResponse
	(*AwaitTimeRequest)(nil),       // 2: com.digitalasset.canton.domain.api.v0.AwaitTimeRequest
	(*wrapperspb.StringValue)(nil), // 3: google.protobuf.StringValue
	(*durationpb.Duration)(nil),    // 4: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),  // 5: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),          // 6: google.protobuf.Empty
}
var file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_depIdxs = []int32{
	3, // 0: com.digitalasset.canton.domain.api.v0.FetchTimeRequest.domain_id:type_name -> google.protobuf.StringValue
	4, // 1: com.digitalasset.canton.domain.api.v0.FetchTimeRequest.freshness_bound:type_name -> google.protobuf.Duration
	5, // 2: com.digitalasset.canton.domain.api.v0.FetchTimeResponse.timestamp:type_name -> google.protobuf.Timestamp
	3, // 3: com.digitalasset.canton.domain.api.v0.AwaitTimeRequest.domain_id:type_name -> google.protobuf.StringValue
	5, // 4: com.digitalasset.canton.domain.api.v0.AwaitTimeRequest.timestamp:type_name -> google.protobuf.Timestamp
	0, // 5: com.digitalasset.canton.domain.api.v0.DomainTimeService.FetchTime:input_type -> com.digitalasset.canton.domain.api.v0.FetchTimeRequest
	2, // 6: com.digitalasset.canton.domain.api.v0.DomainTimeService.AwaitTime:input_type -> com.digitalasset.canton.domain.api.v0.AwaitTimeRequest
	1, // 7: com.digitalasset.canton.domain.api.v0.DomainTimeService.FetchTime:output_type -> com.digitalasset.canton.domain.api.v0.FetchTimeResponse
	6, // 8: com.digitalasset.canton.domain.api.v0.DomainTimeService.AwaitTime:output_type -> google.protobuf.Empty
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_init() }
func file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_init() {
	if File_com_digitalasset_canton_domain_api_v0_domain_time_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_domain_api_v0_domain_time_service_proto = out.File
	file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_rawDesc = nil
	file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_goTypes = nil
	file_com_digitalasset_canton_domain_api_v0_domain_time_service_proto_depIdxs = nil
}
