// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v2/participant_transaction.proto

package v2

import (
	v0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v0"
	v01 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0"
	v1 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ViewCommonData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Salt          *v0.Salt               `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	Informees     []*v01.TrustParty      `protobuf:"bytes,2,rep,name=informees,proto3" json:"informees,omitempty"`
	Quorums       []*v01.Quorum          `protobuf:"bytes,3,rep,name=quorums,proto3" json:"quorums,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewCommonData) Reset() {
	*x = ViewCommonData{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewCommonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewCommonData) ProtoMessage() {}

func (x *ViewCommonData) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewCommonData.ProtoReflect.Descriptor instead.
func (*ViewCommonData) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *ViewCommonData) GetSalt() *v0.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *ViewCommonData) GetInformees() []*v01.TrustParty {
	if x != nil {
		return x.Informees
	}
	return nil
}

func (x *ViewCommonData) GetQuorums() []*v01.Quorum {
	if x != nil {
		return x.Quorums
	}
	return nil
}

type SessionKeyLookup struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SessionKeyRandomness []byte                 `protobuf:"bytes,1,opt,name=session_key_randomness,json=sessionKeyRandomness,proto3" json:"session_key_randomness,omitempty"`
	Fingerprint          string                 `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SessionKeyLookup) Reset() {
	*x = SessionKeyLookup{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionKeyLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionKeyLookup) ProtoMessage() {}

func (x *SessionKeyLookup) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionKeyLookup.ProtoReflect.Descriptor instead.
func (*SessionKeyLookup) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *SessionKeyLookup) GetSessionKeyRandomness() []byte {
	if x != nil {
		return x.SessionKeyRandomness
	}
	return nil
}

func (x *SessionKeyLookup) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

type EncryptedViewMessage struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	ViewTree                      []byte                 `protobuf:"bytes,1,opt,name=view_tree,json=viewTree,proto3" json:"view_tree,omitempty"`
	EncryptionScheme              v0.SymmetricKeyScheme  `protobuf:"varint,2,opt,name=encryption_scheme,json=encryptionScheme,proto3,enum=com.digitalasset.canton.crypto.v0.SymmetricKeyScheme" json:"encryption_scheme,omitempty"`
	SubmitterParticipantSignature *v0.Signature          `protobuf:"bytes,3,opt,name=submitter_participant_signature,json=submitterParticipantSignature,proto3" json:"submitter_participant_signature,omitempty"`
	ViewHash                      []byte                 `protobuf:"bytes,4,opt,name=view_hash,json=viewHash,proto3" json:"view_hash,omitempty"`
	Randomness                    []byte                 `protobuf:"bytes,5,opt,name=randomness,proto3" json:"randomness,omitempty"`
	SessionKeyRandomness          []*SessionKeyLookup    `protobuf:"bytes,6,rep,name=session_key_randomness,json=sessionKeyRandomness,proto3" json:"session_key_randomness,omitempty"`
	DomainId                      string                 `protobuf:"bytes,7,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ViewType                      v01.ViewType           `protobuf:"varint,8,opt,name=view_type,json=viewType,proto3,enum=com.digitalasset.canton.protocol.v0.ViewType" json:"view_type,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *EncryptedViewMessage) Reset() {
	*x = EncryptedViewMessage{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptedViewMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedViewMessage) ProtoMessage() {}

func (x *EncryptedViewMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedViewMessage.ProtoReflect.Descriptor instead.
func (*EncryptedViewMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *EncryptedViewMessage) GetViewTree() []byte {
	if x != nil {
		return x.ViewTree
	}
	return nil
}

func (x *EncryptedViewMessage) GetEncryptionScheme() v0.SymmetricKeyScheme {
	if x != nil {
		return x.EncryptionScheme
	}
	return v0.SymmetricKeyScheme(0)
}

func (x *EncryptedViewMessage) GetSubmitterParticipantSignature() *v0.Signature {
	if x != nil {
		return x.SubmitterParticipantSignature
	}
	return nil
}

func (x *EncryptedViewMessage) GetViewHash() []byte {
	if x != nil {
		return x.ViewHash
	}
	return nil
}

func (x *EncryptedViewMessage) GetRandomness() []byte {
	if x != nil {
		return x.Randomness
	}
	return nil
}

func (x *EncryptedViewMessage) GetSessionKeyRandomness() []*SessionKeyLookup {
	if x != nil {
		return x.SessionKeyRandomness
	}
	return nil
}

func (x *EncryptedViewMessage) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *EncryptedViewMessage) GetViewType() v01.ViewType {
	if x != nil {
		return x.ViewType
	}
	return v01.ViewType(0)
}

type ViewParticipantData struct {
	state                          protoimpl.MessageState                   `protogen:"open.v1"`
	Salt                           *v0.Salt                                 `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	CoreInputs                     []*v1.InputContract                      `protobuf:"bytes,2,rep,name=core_inputs,json=coreInputs,proto3" json:"core_inputs,omitempty"`
	CreatedCore                    []*v1.CreatedContract                    `protobuf:"bytes,3,rep,name=created_core,json=createdCore,proto3" json:"created_core,omitempty"`
	CreatedInSubviewArchivedInCore []string                                 `protobuf:"bytes,4,rep,name=created_in_subview_archived_in_core,json=createdInSubviewArchivedInCore,proto3" json:"created_in_subview_archived_in_core,omitempty"`
	ResolvedKeys                   []*v01.ViewParticipantData_ResolvedKey   `protobuf:"bytes,5,rep,name=resolved_keys,json=resolvedKeys,proto3" json:"resolved_keys,omitempty"`
	ActionDescription              *v1.ActionDescription                    `protobuf:"bytes,6,opt,name=action_description,json=actionDescription,proto3" json:"action_description,omitempty"`
	RollbackContext                *v01.ViewParticipantData_RollbackContext `protobuf:"bytes,7,opt,name=rollback_context,json=rollbackContext,proto3" json:"rollback_context,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ViewParticipantData) Reset() {
	*x = ViewParticipantData{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewParticipantData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewParticipantData) ProtoMessage() {}

func (x *ViewParticipantData) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewParticipantData.ProtoReflect.Descriptor instead.
func (*ViewParticipantData) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *ViewParticipantData) GetSalt() *v0.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *ViewParticipantData) GetCoreInputs() []*v1.InputContract {
	if x != nil {
		return x.CoreInputs
	}
	return nil
}

func (x *ViewParticipantData) GetCreatedCore() []*v1.CreatedContract {
	if x != nil {
		return x.CreatedCore
	}
	return nil
}

func (x *ViewParticipantData) GetCreatedInSubviewArchivedInCore() []string {
	if x != nil {
		return x.CreatedInSubviewArchivedInCore
	}
	return nil
}

func (x *ViewParticipantData) GetResolvedKeys() []*v01.ViewParticipantData_ResolvedKey {
	if x != nil {
		return x.ResolvedKeys
	}
	return nil
}

func (x *ViewParticipantData) GetActionDescription() *v1.ActionDescription {
	if x != nil {
		return x.ActionDescription
	}
	return nil
}

func (x *ViewParticipantData) GetRollbackContext() *v01.ViewParticipantData_RollbackContext {
	if x != nil {
		return x.RollbackContext
	}
	return nil
}

type ActionDescription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Description:
	//
	//	*ActionDescription_Create
	//	*ActionDescription_Exercise
	//	*ActionDescription_Fetch
	//	*ActionDescription_LookupByKey
	Description   isActionDescription_Description `protobuf_oneof:"description"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionDescription) Reset() {
	*x = ActionDescription{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDescription) ProtoMessage() {}

func (x *ActionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDescription.ProtoReflect.Descriptor instead.
func (*ActionDescription) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *ActionDescription) GetDescription() isActionDescription_Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ActionDescription) GetCreate() *v01.ActionDescription_CreateActionDescription {
	if x != nil {
		if x, ok := x.Description.(*ActionDescription_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *ActionDescription) GetExercise() *ActionDescription_ExerciseActionDescription {
	if x != nil {
		if x, ok := x.Description.(*ActionDescription_Exercise); ok {
			return x.Exercise
		}
	}
	return nil
}

func (x *ActionDescription) GetFetch() *v01.ActionDescription_FetchActionDescription {
	if x != nil {
		if x, ok := x.Description.(*ActionDescription_Fetch); ok {
			return x.Fetch
		}
	}
	return nil
}

func (x *ActionDescription) GetLookupByKey() *v01.ActionDescription_LookupByKeyActionDescription {
	if x != nil {
		if x, ok := x.Description.(*ActionDescription_LookupByKey); ok {
			return x.LookupByKey
		}
	}
	return nil
}

type isActionDescription_Description interface {
	isActionDescription_Description()
}

type ActionDescription_Create struct {
	Create *v01.ActionDescription_CreateActionDescription `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type ActionDescription_Exercise struct {
	Exercise *ActionDescription_ExerciseActionDescription `protobuf:"bytes,2,opt,name=exercise,proto3,oneof"`
}

type ActionDescription_Fetch struct {
	Fetch *v01.ActionDescription_FetchActionDescription `protobuf:"bytes,3,opt,name=fetch,proto3,oneof"`
}

type ActionDescription_LookupByKey struct {
	LookupByKey *v01.ActionDescription_LookupByKeyActionDescription `protobuf:"bytes,4,opt,name=lookup_by_key,json=lookupByKey,proto3,oneof"`
}

func (*ActionDescription_Create) isActionDescription_Description() {}

func (*ActionDescription_Exercise) isActionDescription_Description() {}

func (*ActionDescription_Fetch) isActionDescription_Description() {}

func (*ActionDescription_LookupByKey) isActionDescription_Description() {}

type CreatedContract struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Contract       *SerializableContract  `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	ConsumedInCore bool                   `protobuf:"varint,2,opt,name=consumed_in_core,json=consumedInCore,proto3" json:"consumed_in_core,omitempty"`
	RolledBack     bool                   `protobuf:"varint,3,opt,name=rolled_back,json=rolledBack,proto3" json:"rolled_back,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreatedContract) Reset() {
	*x = CreatedContract{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatedContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedContract) ProtoMessage() {}

func (x *CreatedContract) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedContract.ProtoReflect.Descriptor instead.
func (*CreatedContract) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *CreatedContract) GetContract() *SerializableContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *CreatedContract) GetConsumedInCore() bool {
	if x != nil {
		return x.ConsumedInCore
	}
	return false
}

func (x *CreatedContract) GetRolledBack() bool {
	if x != nil {
		return x.RolledBack
	}
	return false
}

type InputContract struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contract      *SerializableContract  `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Consumed      bool                   `protobuf:"varint,2,opt,name=consumed,proto3" json:"consumed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputContract) Reset() {
	*x = InputContract{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputContract) ProtoMessage() {}

func (x *InputContract) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputContract.ProtoReflect.Descriptor instead.
func (*InputContract) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *InputContract) GetContract() *SerializableContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *InputContract) GetConsumed() bool {
	if x != nil {
		return x.Consumed
	}
	return false
}

type ActionDescription_ExerciseActionDescription struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InputContractId string                 `protobuf:"bytes,1,opt,name=input_contract_id,json=inputContractId,proto3" json:"input_contract_id,omitempty"`
	Choice          string                 `protobuf:"bytes,2,opt,name=choice,proto3" json:"choice,omitempty"`
	ChosenValue     []byte                 `protobuf:"bytes,3,opt,name=chosen_value,json=chosenValue,proto3" json:"chosen_value,omitempty"`
	Actors          []string               `protobuf:"bytes,4,rep,name=actors,proto3" json:"actors,omitempty"`
	ByKey           bool                   `protobuf:"varint,5,opt,name=by_key,json=byKey,proto3" json:"by_key,omitempty"`
	NodeSeed        []byte                 `protobuf:"bytes,6,opt,name=node_seed,json=nodeSeed,proto3" json:"node_seed,omitempty"`
	Version         string                 `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Failed          bool                   `protobuf:"varint,8,opt,name=failed,proto3" json:"failed,omitempty"`
	InterfaceId     *string                `protobuf:"bytes,9,opt,name=interface_id,json=interfaceId,proto3,oneof" json:"interface_id,omitempty"`
	TemplateId      *string                `protobuf:"bytes,10,opt,name=template_id,json=templateId,proto3,oneof" json:"template_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ActionDescription_ExerciseActionDescription) Reset() {
	*x = ActionDescription_ExerciseActionDescription{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionDescription_ExerciseActionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDescription_ExerciseActionDescription) ProtoMessage() {}

func (x *ActionDescription_ExerciseActionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDescription_ExerciseActionDescription.ProtoReflect.Descriptor instead.
func (*ActionDescription_ExerciseActionDescription) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ActionDescription_ExerciseActionDescription) GetInputContractId() string {
	if x != nil {
		return x.InputContractId
	}
	return ""
}

func (x *ActionDescription_ExerciseActionDescription) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

func (x *ActionDescription_ExerciseActionDescription) GetChosenValue() []byte {
	if x != nil {
		return x.ChosenValue
	}
	return nil
}

func (x *ActionDescription_ExerciseActionDescription) GetActors() []string {
	if x != nil {
		return x.Actors
	}
	return nil
}

func (x *ActionDescription_ExerciseActionDescription) GetByKey() bool {
	if x != nil {
		return x.ByKey
	}
	return false
}

func (x *ActionDescription_ExerciseActionDescription) GetNodeSeed() []byte {
	if x != nil {
		return x.NodeSeed
	}
	return nil
}

func (x *ActionDescription_ExerciseActionDescription) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ActionDescription_ExerciseActionDescription) GetFailed() bool {
	if x != nil {
		return x.Failed
	}
	return false
}

func (x *ActionDescription_ExerciseActionDescription) GetInterfaceId() string {
	if x != nil && x.InterfaceId != nil {
		return *x.InterfaceId
	}
	return ""
}

func (x *ActionDescription_ExerciseActionDescription) GetTemplateId() string {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return ""
}

var File_com_digitalasset_canton_protocol_v2_participant_transaction_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDesc = "" +
	"\n" +
	"Acom/digitalasset/canton/protocol/v2/participant_transaction.proto\x12#com.digitalasset.canton.protocol.v2\x1a.com/digitalasset/canton/crypto/v0/crypto.proto\x1a0com/digitalasset/canton/protocol/v0/common.proto\x1aAcom/digitalasset/canton/protocol/v0/participant_transaction.proto\x1a0com/digitalasset/canton/protocol/v0/quorum.proto\x1aAcom/digitalasset/canton/protocol/v1/participant_transaction.proto\x1a0com/digitalasset/canton/protocol/v2/common.proto\"\xe3\x01\n" +
	"\x0eViewCommonData\x12;\n" +
	"\x04salt\x18\x01 \x01(\v2'.com.digitalasset.canton.crypto.v0.SaltR\x04salt\x12M\n" +
	"\tinformees\x18\x02 \x03(\v2/.com.digitalasset.canton.protocol.v0.TrustPartyR\tinformees\x12E\n" +
	"\aquorums\x18\x03 \x03(\v2+.com.digitalasset.canton.protocol.v0.QuorumR\aquorums\"j\n" +
	"\x10SessionKeyLookup\x124\n" +
	"\x16session_key_randomness\x18\x01 \x01(\fR\x14sessionKeyRandomness\x12 \n" +
	"\vfingerprint\x18\x02 \x01(\tR\vfingerprint\"\xa0\x04\n" +
	"\x14EncryptedViewMessage\x12\x1b\n" +
	"\tview_tree\x18\x01 \x01(\fR\bviewTree\x12b\n" +
	"\x11encryption_scheme\x18\x02 \x01(\x0e25.com.digitalasset.canton.crypto.v0.SymmetricKeySchemeR\x10encryptionScheme\x12t\n" +
	"\x1fsubmitter_participant_signature\x18\x03 \x01(\v2,.com.digitalasset.canton.crypto.v0.SignatureR\x1dsubmitterParticipantSignature\x12\x1b\n" +
	"\tview_hash\x18\x04 \x01(\fR\bviewHash\x12\x1e\n" +
	"\n" +
	"randomness\x18\x05 \x01(\fR\n" +
	"randomness\x12k\n" +
	"\x16session_key_randomness\x18\x06 \x03(\v25.com.digitalasset.canton.protocol.v2.SessionKeyLookupR\x14sessionKeyRandomness\x12\x1b\n" +
	"\tdomain_id\x18\a \x01(\tR\bdomainId\x12J\n" +
	"\tview_type\x18\b \x01(\x0e2-.com.digitalasset.canton.protocol.v0.ViewTypeR\bviewType\"\x94\x05\n" +
	"\x13ViewParticipantData\x12;\n" +
	"\x04salt\x18\x01 \x01(\v2'.com.digitalasset.canton.crypto.v0.SaltR\x04salt\x12S\n" +
	"\vcore_inputs\x18\x02 \x03(\v22.com.digitalasset.canton.protocol.v1.InputContractR\n" +
	"coreInputs\x12W\n" +
	"\fcreated_core\x18\x03 \x03(\v24.com.digitalasset.canton.protocol.v1.CreatedContractR\vcreatedCore\x12K\n" +
	"#created_in_subview_archived_in_core\x18\x04 \x03(\tR\x1ecreatedInSubviewArchivedInCore\x12i\n" +
	"\rresolved_keys\x18\x05 \x03(\v2D.com.digitalasset.canton.protocol.v0.ViewParticipantData.ResolvedKeyR\fresolvedKeys\x12e\n" +
	"\x12action_description\x18\x06 \x01(\v26.com.digitalasset.canton.protocol.v1.ActionDescriptionR\x11actionDescription\x12s\n" +
	"\x10rollback_context\x18\a \x01(\v2H.com.digitalasset.canton.protocol.v0.ViewParticipantData.RollbackContextR\x0frollbackContext\"\xd0\x06\n" +
	"\x11ActionDescription\x12h\n" +
	"\x06create\x18\x01 \x01(\v2N.com.digitalasset.canton.protocol.v0.ActionDescription.CreateActionDescriptionH\x00R\x06create\x12n\n" +
	"\bexercise\x18\x02 \x01(\v2P.com.digitalasset.canton.protocol.v2.ActionDescription.ExerciseActionDescriptionH\x00R\bexercise\x12e\n" +
	"\x05fetch\x18\x03 \x01(\v2M.com.digitalasset.canton.protocol.v0.ActionDescription.FetchActionDescriptionH\x00R\x05fetch\x12y\n" +
	"\rlookup_by_key\x18\x04 \x01(\v2S.com.digitalasset.canton.protocol.v0.ActionDescription.LookupByKeyActionDescriptionH\x00R\vlookupByKey\x1a\xef\x02\n" +
	"\x19ExerciseActionDescription\x12*\n" +
	"\x11input_contract_id\x18\x01 \x01(\tR\x0finputContractId\x12\x16\n" +
	"\x06choice\x18\x02 \x01(\tR\x06choice\x12!\n" +
	"\fchosen_value\x18\x03 \x01(\fR\vchosenValue\x12\x16\n" +
	"\x06actors\x18\x04 \x03(\tR\x06actors\x12\x15\n" +
	"\x06by_key\x18\x05 \x01(\bR\x05byKey\x12\x1b\n" +
	"\tnode_seed\x18\x06 \x01(\fR\bnodeSeed\x12\x18\n" +
	"\aversion\x18\a \x01(\tR\aversion\x12\x16\n" +
	"\x06failed\x18\b \x01(\bR\x06failed\x12&\n" +
	"\finterface_id\x18\t \x01(\tH\x00R\vinterfaceId\x88\x01\x01\x12$\n" +
	"\vtemplate_id\x18\n" +
	" \x01(\tH\x01R\n" +
	"templateId\x88\x01\x01B\x0f\n" +
	"\r_interface_idB\x0e\n" +
	"\f_template_idB\r\n" +
	"\vdescription\"\xb3\x01\n" +
	"\x0fCreatedContract\x12U\n" +
	"\bcontract\x18\x01 \x01(\v29.com.digitalasset.canton.protocol.v2.SerializableContractR\bcontract\x12(\n" +
	"\x10consumed_in_core\x18\x02 \x01(\bR\x0econsumedInCore\x12\x1f\n" +
	"\vrolled_back\x18\x03 \x01(\bR\n" +
	"rolledBack\"\x82\x01\n" +
	"\rInputContract\x12U\n" +
	"\bcontract\x18\x01 \x01(\v29.com.digitalasset.canton.protocol.v2.SerializableContractR\bcontract\x12\x1a\n" +
	"\bconsumed\x18\x02 \x01(\bR\bconsumedBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v2b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_goTypes = []any{
	(*ViewCommonData)(nil),                                     // 0: com.digitalasset.canton.protocol.v2.ViewCommonData
	(*SessionKeyLookup)(nil),                                   // 1: com.digitalasset.canton.protocol.v2.SessionKeyLookup
	(*EncryptedViewMessage)(nil),                               // 2: com.digitalasset.canton.protocol.v2.EncryptedViewMessage
	(*ViewParticipantData)(nil),                                // 3: com.digitalasset.canton.protocol.v2.ViewParticipantData
	(*ActionDescription)(nil),                                  // 4: com.digitalasset.canton.protocol.v2.ActionDescription
	(*CreatedContract)(nil),                                    // 5: com.digitalasset.canton.protocol.v2.CreatedContract
	(*InputContract)(nil),                                      // 6: com.digitalasset.canton.protocol.v2.InputContract
	(*ActionDescription_ExerciseActionDescription)(nil),        // 7: com.digitalasset.canton.protocol.v2.ActionDescription.ExerciseActionDescription
	(*v0.Salt)(nil),                                            // 8: com.digitalasset.canton.crypto.v0.Salt
	(*v01.TrustParty)(nil),                                     // 9: com.digitalasset.canton.protocol.v0.TrustParty
	(*v01.Quorum)(nil),                                         // 10: com.digitalasset.canton.protocol.v0.Quorum
	(v0.SymmetricKeyScheme)(0),                                 // 11: com.digitalasset.canton.crypto.v0.SymmetricKeyScheme
	(*v0.Signature)(nil),                                       // 12: com.digitalasset.canton.crypto.v0.Signature
	(v01.ViewType)(0),                                          // 13: com.digitalasset.canton.protocol.v0.ViewType
	(*v1.InputContract)(nil),                                   // 14: com.digitalasset.canton.protocol.v1.InputContract
	(*v1.CreatedContract)(nil),                                 // 15: com.digitalasset.canton.protocol.v1.CreatedContract
	(*v01.ViewParticipantData_ResolvedKey)(nil),                // 16: com.digitalasset.canton.protocol.v0.ViewParticipantData.ResolvedKey
	(*v1.ActionDescription)(nil),                               // 17: com.digitalasset.canton.protocol.v1.ActionDescription
	(*v01.ViewParticipantData_RollbackContext)(nil),            // 18: com.digitalasset.canton.protocol.v0.ViewParticipantData.RollbackContext
	(*v01.ActionDescription_CreateActionDescription)(nil),      // 19: com.digitalasset.canton.protocol.v0.ActionDescription.CreateActionDescription
	(*v01.ActionDescription_FetchActionDescription)(nil),       // 20: com.digitalasset.canton.protocol.v0.ActionDescription.FetchActionDescription
	(*v01.ActionDescription_LookupByKeyActionDescription)(nil), // 21: com.digitalasset.canton.protocol.v0.ActionDescription.LookupByKeyActionDescription
	(*SerializableContract)(nil),                               // 22: com.digitalasset.canton.protocol.v2.SerializableContract
}
var file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_depIdxs = []int32{
	8,  // 0: com.digitalasset.canton.protocol.v2.ViewCommonData.salt:type_name -> com.digitalasset.canton.crypto.v0.Salt
	9,  // 1: com.digitalasset.canton.protocol.v2.ViewCommonData.informees:type_name -> com.digitalasset.canton.protocol.v0.TrustParty
	10, // 2: com.digitalasset.canton.protocol.v2.ViewCommonData.quorums:type_name -> com.digitalasset.canton.protocol.v0.Quorum
	11, // 3: com.digitalasset.canton.protocol.v2.EncryptedViewMessage.encryption_scheme:type_name -> com.digitalasset.canton.crypto.v0.SymmetricKeyScheme
	12, // 4: com.digitalasset.canton.protocol.v2.EncryptedViewMessage.submitter_participant_signature:type_name -> com.digitalasset.canton.crypto.v0.Signature
	1,  // 5: com.digitalasset.canton.protocol.v2.EncryptedViewMessage.session_key_randomness:type_name -> com.digitalasset.canton.protocol.v2.SessionKeyLookup
	13, // 6: com.digitalasset.canton.protocol.v2.EncryptedViewMessage.view_type:type_name -> com.digitalasset.canton.protocol.v0.ViewType
	8,  // 7: com.digitalasset.canton.protocol.v2.ViewParticipantData.salt:type_name -> com.digitalasset.canton.crypto.v0.Salt
	14, // 8: com.digitalasset.canton.protocol.v2.ViewParticipantData.core_inputs:type_name -> com.digitalasset.canton.protocol.v1.InputContract
	15, // 9: com.digitalasset.canton.protocol.v2.ViewParticipantData.created_core:type_name -> com.digitalasset.canton.protocol.v1.CreatedContract
	16, // 10: com.digitalasset.canton.protocol.v2.ViewParticipantData.resolved_keys:type_name -> com.digitalasset.canton.protocol.v0.ViewParticipantData.ResolvedKey
	17, // 11: com.digitalasset.canton.protocol.v2.ViewParticipantData.action_description:type_name -> com.digitalasset.canton.protocol.v1.ActionDescription
	18, // 12: com.digitalasset.canton.protocol.v2.ViewParticipantData.rollback_context:type_name -> com.digitalasset.canton.protocol.v0.ViewParticipantData.RollbackContext
	19, // 13: com.digitalasset.canton.protocol.v2.ActionDescription.create:type_name -> com.digitalasset.canton.protocol.v0.ActionDescription.CreateActionDescription
	7,  // 14: com.digitalasset.canton.protocol.v2.ActionDescription.exercise:type_name -> com.digitalasset.canton.protocol.v2.ActionDescription.ExerciseActionDescription
	20, // 15: com.digitalasset.canton.protocol.v2.ActionDescription.fetch:type_name -> com.digitalasset.canton.protocol.v0.ActionDescription.FetchActionDescription
	21, // 16: com.digitalasset.canton.protocol.v2.ActionDescription.lookup_by_key:type_name -> com.digitalasset.canton.protocol.v0.ActionDescription.LookupByKeyActionDescription
	22, // 17: com.digitalasset.canton.protocol.v2.CreatedContract.contract:type_name -> com.digitalasset.canton.protocol.v2.SerializableContract
	22, // 18: com.digitalasset.canton.protocol.v2.InputContract.contract:type_name -> com.digitalasset.canton.protocol.v2.SerializableContract
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_init() }
func file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_init() {
	if File_com_digitalasset_canton_protocol_v2_participant_transaction_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v2_common_proto_init()
	file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[4].OneofWrappers = []any{
		(*ActionDescription_Create)(nil),
		(*ActionDescription_Exercise)(nil),
		(*ActionDescription_Fetch)(nil),
		(*ActionDescription_LookupByKey)(nil),
	}
	file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v2_participant_transaction_proto = out.File
	file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v2_participant_transaction_proto_depIdxs = nil
}
