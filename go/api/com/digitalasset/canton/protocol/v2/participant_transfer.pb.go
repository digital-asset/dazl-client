// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v2/participant_transfer.proto

package v2

import (
	v0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v0"
	v01 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferInView struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Salt                   *v0.Salt               `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	Submitter              string                 `protobuf:"bytes,2,opt,name=submitter,proto3" json:"submitter,omitempty"`
	Contract               *SerializableContract  `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	TransferOutResultEvent *v01.SignedContent     `protobuf:"bytes,4,opt,name=transfer_out_result_event,json=transferOutResultEvent,proto3" json:"transfer_out_result_event,omitempty"`
	CreatingTransactionId  []byte                 `protobuf:"bytes,5,opt,name=creating_transaction_id,json=creatingTransactionId,proto3" json:"creating_transaction_id,omitempty"`
	SourceProtocolVersion  int32                  `protobuf:"varint,6,opt,name=source_protocol_version,json=sourceProtocolVersion,proto3" json:"source_protocol_version,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TransferInView) Reset() {
	*x = TransferInView{}
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferInView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInView) ProtoMessage() {}

func (x *TransferInView) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInView.ProtoReflect.Descriptor instead.
func (*TransferInView) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *TransferInView) GetSalt() *v0.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *TransferInView) GetSubmitter() string {
	if x != nil {
		return x.Submitter
	}
	return ""
}

func (x *TransferInView) GetContract() *SerializableContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *TransferInView) GetTransferOutResultEvent() *v01.SignedContent {
	if x != nil {
		return x.TransferOutResultEvent
	}
	return nil
}

func (x *TransferInView) GetCreatingTransactionId() []byte {
	if x != nil {
		return x.CreatingTransactionId
	}
	return nil
}

func (x *TransferInView) GetSourceProtocolVersion() int32 {
	if x != nil {
		return x.SourceProtocolVersion
	}
	return 0
}

var File_com_digitalasset_canton_protocol_v2_participant_transfer_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDesc = "" +
	"\n" +
	">com/digitalasset/canton/protocol/v2/participant_transfer.proto\x12#com.digitalasset.canton.protocol.v2\x1a.com/digitalasset/canton/crypto/v0/crypto.proto\x1a4com/digitalasset/canton/protocol/v0/sequencing.proto\x1a0com/digitalasset/canton/protocol/v2/common.proto\"\xa1\x03\n" +
	"\x0eTransferInView\x12;\n" +
	"\x04salt\x18\x01 \x01(\v2'.com.digitalasset.canton.crypto.v0.SaltR\x04salt\x12\x1c\n" +
	"\tsubmitter\x18\x02 \x01(\tR\tsubmitter\x12U\n" +
	"\bcontract\x18\x03 \x01(\v29.com.digitalasset.canton.protocol.v2.SerializableContractR\bcontract\x12m\n" +
	"\x19transfer_out_result_event\x18\x04 \x01(\v22.com.digitalasset.canton.protocol.v0.SignedContentR\x16transferOutResultEvent\x126\n" +
	"\x17creating_transaction_id\x18\x05 \x01(\fR\x15creatingTransactionId\x126\n" +
	"\x17source_protocol_version\x18\x06 \x01(\x05R\x15sourceProtocolVersionBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v2b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_goTypes = []any{
	(*TransferInView)(nil),       // 0: com.digitalasset.canton.protocol.v2.TransferInView
	(*v0.Salt)(nil),              // 1: com.digitalasset.canton.crypto.v0.Salt
	(*SerializableContract)(nil), // 2: com.digitalasset.canton.protocol.v2.SerializableContract
	(*v01.SignedContent)(nil),    // 3: com.digitalasset.canton.protocol.v0.SignedContent
}
var file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_depIdxs = []int32{
	1, // 0: com.digitalasset.canton.protocol.v2.TransferInView.salt:type_name -> com.digitalasset.canton.crypto.v0.Salt
	2, // 1: com.digitalasset.canton.protocol.v2.TransferInView.contract:type_name -> com.digitalasset.canton.protocol.v2.SerializableContract
	3, // 2: com.digitalasset.canton.protocol.v2.TransferInView.transfer_out_result_event:type_name -> com.digitalasset.canton.protocol.v0.SignedContent
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_init() }
func file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_init() {
	if File_com_digitalasset_canton_protocol_v2_participant_transfer_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v2_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v2_participant_transfer_proto = out.File
	file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v2_participant_transfer_proto_depIdxs = nil
}
