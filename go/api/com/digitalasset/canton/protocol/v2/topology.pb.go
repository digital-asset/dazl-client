// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/protocol/v2/topology.proto

package v2

import (
	v1 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DomainParametersChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain           string                   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DomainParameters *DynamicDomainParameters `protobuf:"bytes,2,opt,name=domain_parameters,json=domainParameters,proto3" json:"domain_parameters,omitempty"`
}

func (x *DomainParametersChange) Reset() {
	*x = DomainParametersChange{}
	mi := &file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainParametersChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainParametersChange) ProtoMessage() {}

func (x *DomainParametersChange) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainParametersChange.ProtoReflect.Descriptor instead.
func (*DomainParametersChange) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescGZIP(), []int{0}
}

func (x *DomainParametersChange) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DomainParametersChange) GetDomainParameters() *DynamicDomainParameters {
	if x != nil {
		return x.DomainParameters
	}
	return nil
}

type DomainGovernanceTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Mapping:
	//
	//	*DomainGovernanceTransaction_DomainParametersChange
	Mapping isDomainGovernanceTransaction_Mapping `protobuf_oneof:"mapping"`
}

func (x *DomainGovernanceTransaction) Reset() {
	*x = DomainGovernanceTransaction{}
	mi := &file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainGovernanceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainGovernanceTransaction) ProtoMessage() {}

func (x *DomainGovernanceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainGovernanceTransaction.ProtoReflect.Descriptor instead.
func (*DomainGovernanceTransaction) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescGZIP(), []int{1}
}

func (m *DomainGovernanceTransaction) GetMapping() isDomainGovernanceTransaction_Mapping {
	if m != nil {
		return m.Mapping
	}
	return nil
}

func (x *DomainGovernanceTransaction) GetDomainParametersChange() *DomainParametersChange {
	if x, ok := x.GetMapping().(*DomainGovernanceTransaction_DomainParametersChange); ok {
		return x.DomainParametersChange
	}
	return nil
}

type isDomainGovernanceTransaction_Mapping interface {
	isDomainGovernanceTransaction_Mapping()
}

type DomainGovernanceTransaction_DomainParametersChange struct {
	DomainParametersChange *DomainParametersChange `protobuf:"bytes,1,opt,name=domain_parameters_change,json=domainParametersChange,proto3,oneof"`
}

func (*DomainGovernanceTransaction_DomainParametersChange) isDomainGovernanceTransaction_Mapping() {}

type TopologyTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Transaction:
	//
	//	*TopologyTransaction_StateUpdate
	//	*TopologyTransaction_DomainGovernance
	Transaction isTopologyTransaction_Transaction `protobuf_oneof:"transaction"`
}

func (x *TopologyTransaction) Reset() {
	*x = TopologyTransaction{}
	mi := &file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyTransaction) ProtoMessage() {}

func (x *TopologyTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyTransaction.ProtoReflect.Descriptor instead.
func (*TopologyTransaction) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescGZIP(), []int{2}
}

func (m *TopologyTransaction) GetTransaction() isTopologyTransaction_Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (x *TopologyTransaction) GetStateUpdate() *v1.TopologyStateUpdate {
	if x, ok := x.GetTransaction().(*TopologyTransaction_StateUpdate); ok {
		return x.StateUpdate
	}
	return nil
}

func (x *TopologyTransaction) GetDomainGovernance() *DomainGovernanceTransaction {
	if x, ok := x.GetTransaction().(*TopologyTransaction_DomainGovernance); ok {
		return x.DomainGovernance
	}
	return nil
}

type isTopologyTransaction_Transaction interface {
	isTopologyTransaction_Transaction()
}

type TopologyTransaction_StateUpdate struct {
	StateUpdate *v1.TopologyStateUpdate `protobuf:"bytes,1,opt,name=state_update,json=stateUpdate,proto3,oneof"`
}

type TopologyTransaction_DomainGovernance struct {
	DomainGovernance *DomainGovernanceTransaction `protobuf:"bytes,2,opt,name=domain_governance,json=domainGovernance,proto3,oneof"`
}

func (*TopologyTransaction_StateUpdate) isTopologyTransaction_Transaction() {}

func (*TopologyTransaction_DomainGovernance) isTopologyTransaction_Transaction() {}

var File_com_digitalasset_canton_protocol_v2_topology_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_protocol_v2_topology_proto_rawDesc = []byte{
	0x0a, 0x32, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x1a, 0x32, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f,
	0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x76, 0x32, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x69, 0x0a, 0x11, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x10, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x1b, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47,
	0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x18, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x16, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0xf4, 0x01, 0x0a, 0x13, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5d, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x6f, 0x0a, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x54, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c,
	0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescData = file_com_digitalasset_canton_protocol_v2_topology_proto_rawDesc
)

func file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescData)
	})
	return file_com_digitalasset_canton_protocol_v2_topology_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_digitalasset_canton_protocol_v2_topology_proto_goTypes = []any{
	(*DomainParametersChange)(nil),      // 0: com.digitalasset.canton.protocol.v2.DomainParametersChange
	(*DomainGovernanceTransaction)(nil), // 1: com.digitalasset.canton.protocol.v2.DomainGovernanceTransaction
	(*TopologyTransaction)(nil),         // 2: com.digitalasset.canton.protocol.v2.TopologyTransaction
	(*DynamicDomainParameters)(nil),     // 3: com.digitalasset.canton.protocol.v2.DynamicDomainParameters
	(*v1.TopologyStateUpdate)(nil),      // 4: com.digitalasset.canton.protocol.v1.TopologyStateUpdate
}
var file_com_digitalasset_canton_protocol_v2_topology_proto_depIdxs = []int32{
	3, // 0: com.digitalasset.canton.protocol.v2.DomainParametersChange.domain_parameters:type_name -> com.digitalasset.canton.protocol.v2.DynamicDomainParameters
	0, // 1: com.digitalasset.canton.protocol.v2.DomainGovernanceTransaction.domain_parameters_change:type_name -> com.digitalasset.canton.protocol.v2.DomainParametersChange
	4, // 2: com.digitalasset.canton.protocol.v2.TopologyTransaction.state_update:type_name -> com.digitalasset.canton.protocol.v1.TopologyStateUpdate
	1, // 3: com.digitalasset.canton.protocol.v2.TopologyTransaction.domain_governance:type_name -> com.digitalasset.canton.protocol.v2.DomainGovernanceTransaction
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v2_topology_proto_init() }
func file_com_digitalasset_canton_protocol_v2_topology_proto_init() {
	if File_com_digitalasset_canton_protocol_v2_topology_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v2_domain_params_proto_init()
	file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes[1].OneofWrappers = []any{
		(*DomainGovernanceTransaction_DomainParametersChange)(nil),
	}
	file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes[2].OneofWrappers = []any{
		(*TopologyTransaction_StateUpdate)(nil),
		(*TopologyTransaction_DomainGovernance)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_protocol_v2_topology_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v2_topology_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v2_topology_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v2_topology_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v2_topology_proto = out.File
	file_com_digitalasset_canton_protocol_v2_topology_proto_rawDesc = nil
	file_com_digitalasset_canton_protocol_v2_topology_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v2_topology_proto_depIdxs = nil
}
