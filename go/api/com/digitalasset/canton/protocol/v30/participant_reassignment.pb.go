// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v30/participant_reassignment.proto

package v30

import (
	v30 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v30"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReassignmentId struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SourceSynchronizerId string                 `protobuf:"bytes,1,opt,name=source_synchronizer_id,json=sourceSynchronizerId,proto3" json:"source_synchronizer_id,omitempty"`
	Timestamp            int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReassignmentId) Reset() {
	*x = ReassignmentId{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReassignmentId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReassignmentId) ProtoMessage() {}

func (x *ReassignmentId) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReassignmentId.ProtoReflect.Descriptor instead.
func (*ReassignmentId) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{0}
}

func (x *ReassignmentId) GetSourceSynchronizerId() string {
	if x != nil {
		return x.SourceSynchronizerId
	}
	return ""
}

func (x *ReassignmentId) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type UnassignmentCommonData struct {
	state                      protoimpl.MessageState         `protogen:"open.v1"`
	Salt                       *v30.Salt                      `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	SourceSynchronizerId       string                         `protobuf:"bytes,2,opt,name=source_synchronizer_id,json=sourceSynchronizerId,proto3" json:"source_synchronizer_id,omitempty"`
	Stakeholders               *Stakeholders                  `protobuf:"bytes,3,opt,name=stakeholders,proto3" json:"stakeholders,omitempty"`
	ReassigningParticipantUids []string                       `protobuf:"bytes,4,rep,name=reassigning_participant_uids,json=reassigningParticipantUids,proto3" json:"reassigning_participant_uids,omitempty"`
	Uuid                       string                         `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceMediatorGroup        int32                          `protobuf:"varint,6,opt,name=source_mediator_group,json=sourceMediatorGroup,proto3" json:"source_mediator_group,omitempty"`
	SubmitterMetadata          *ReassignmentSubmitterMetadata `protobuf:"bytes,7,opt,name=submitter_metadata,json=submitterMetadata,proto3" json:"submitter_metadata,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *UnassignmentCommonData) Reset() {
	*x = UnassignmentCommonData{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnassignmentCommonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignmentCommonData) ProtoMessage() {}

func (x *UnassignmentCommonData) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignmentCommonData.ProtoReflect.Descriptor instead.
func (*UnassignmentCommonData) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{1}
}

func (x *UnassignmentCommonData) GetSalt() *v30.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *UnassignmentCommonData) GetSourceSynchronizerId() string {
	if x != nil {
		return x.SourceSynchronizerId
	}
	return ""
}

func (x *UnassignmentCommonData) GetStakeholders() *Stakeholders {
	if x != nil {
		return x.Stakeholders
	}
	return nil
}

func (x *UnassignmentCommonData) GetReassigningParticipantUids() []string {
	if x != nil {
		return x.ReassigningParticipantUids
	}
	return nil
}

func (x *UnassignmentCommonData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UnassignmentCommonData) GetSourceMediatorGroup() int32 {
	if x != nil {
		return x.SourceMediatorGroup
	}
	return 0
}

func (x *UnassignmentCommonData) GetSubmitterMetadata() *ReassignmentSubmitterMetadata {
	if x != nil {
		return x.SubmitterMetadata
	}
	return nil
}

type ReassignmentViewTree struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommonData      []byte                 `protobuf:"bytes,1,opt,name=common_data,json=commonData,proto3" json:"common_data,omitempty"`
	ParticipantData *BlindableNode         `protobuf:"bytes,2,opt,name=participant_data,json=participantData,proto3" json:"participant_data,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReassignmentViewTree) Reset() {
	*x = ReassignmentViewTree{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReassignmentViewTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReassignmentViewTree) ProtoMessage() {}

func (x *ReassignmentViewTree) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReassignmentViewTree.ProtoReflect.Descriptor instead.
func (*ReassignmentViewTree) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{2}
}

func (x *ReassignmentViewTree) GetCommonData() []byte {
	if x != nil {
		return x.CommonData
	}
	return nil
}

func (x *ReassignmentViewTree) GetParticipantData() *BlindableNode {
	if x != nil {
		return x.ParticipantData
	}
	return nil
}

type AssignmentMediatorMessage struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	Tree                           *ReassignmentViewTree  `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	SubmittingParticipantSignature *v30.Signature         `protobuf:"bytes,2,opt,name=submitting_participant_signature,json=submittingParticipantSignature,proto3" json:"submitting_participant_signature,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *AssignmentMediatorMessage) Reset() {
	*x = AssignmentMediatorMessage{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignmentMediatorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentMediatorMessage) ProtoMessage() {}

func (x *AssignmentMediatorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentMediatorMessage.ProtoReflect.Descriptor instead.
func (*AssignmentMediatorMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{3}
}

func (x *AssignmentMediatorMessage) GetTree() *ReassignmentViewTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

func (x *AssignmentMediatorMessage) GetSubmittingParticipantSignature() *v30.Signature {
	if x != nil {
		return x.SubmittingParticipantSignature
	}
	return nil
}

type UnassignmentMediatorMessage struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	Tree                           *ReassignmentViewTree  `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	SubmittingParticipantSignature *v30.Signature         `protobuf:"bytes,2,opt,name=submitting_participant_signature,json=submittingParticipantSignature,proto3" json:"submitting_participant_signature,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *UnassignmentMediatorMessage) Reset() {
	*x = UnassignmentMediatorMessage{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnassignmentMediatorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignmentMediatorMessage) ProtoMessage() {}

func (x *UnassignmentMediatorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignmentMediatorMessage.ProtoReflect.Descriptor instead.
func (*UnassignmentMediatorMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{4}
}

func (x *UnassignmentMediatorMessage) GetTree() *ReassignmentViewTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

func (x *UnassignmentMediatorMessage) GetSubmittingParticipantSignature() *v30.Signature {
	if x != nil {
		return x.SubmittingParticipantSignature
	}
	return nil
}

type AssignmentCommonData struct {
	state                      protoimpl.MessageState         `protogen:"open.v1"`
	Salt                       *v30.Salt                      `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	TargetSynchronizerId       string                         `protobuf:"bytes,2,opt,name=target_synchronizer_id,json=targetSynchronizerId,proto3" json:"target_synchronizer_id,omitempty"`
	Stakeholders               *Stakeholders                  `protobuf:"bytes,3,opt,name=stakeholders,proto3" json:"stakeholders,omitempty"`
	Uuid                       string                         `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TargetMediatorGroup        int32                          `protobuf:"varint,5,opt,name=target_mediator_group,json=targetMediatorGroup,proto3" json:"target_mediator_group,omitempty"`
	SubmitterMetadata          *ReassignmentSubmitterMetadata `protobuf:"bytes,6,opt,name=submitter_metadata,json=submitterMetadata,proto3" json:"submitter_metadata,omitempty"`
	ReassigningParticipantUids []string                       `protobuf:"bytes,7,rep,name=reassigning_participant_uids,json=reassigningParticipantUids,proto3" json:"reassigning_participant_uids,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *AssignmentCommonData) Reset() {
	*x = AssignmentCommonData{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignmentCommonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentCommonData) ProtoMessage() {}

func (x *AssignmentCommonData) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentCommonData.ProtoReflect.Descriptor instead.
func (*AssignmentCommonData) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{5}
}

func (x *AssignmentCommonData) GetSalt() *v30.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *AssignmentCommonData) GetTargetSynchronizerId() string {
	if x != nil {
		return x.TargetSynchronizerId
	}
	return ""
}

func (x *AssignmentCommonData) GetStakeholders() *Stakeholders {
	if x != nil {
		return x.Stakeholders
	}
	return nil
}

func (x *AssignmentCommonData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AssignmentCommonData) GetTargetMediatorGroup() int32 {
	if x != nil {
		return x.TargetMediatorGroup
	}
	return 0
}

func (x *AssignmentCommonData) GetSubmitterMetadata() *ReassignmentSubmitterMetadata {
	if x != nil {
		return x.SubmitterMetadata
	}
	return nil
}

func (x *AssignmentCommonData) GetReassigningParticipantUids() []string {
	if x != nil {
		return x.ReassigningParticipantUids
	}
	return nil
}

type ReassignmentSubmitterMetadata struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Submitter                string                 `protobuf:"bytes,1,opt,name=submitter,proto3" json:"submitter,omitempty"`
	SubmittingParticipantUid string                 `protobuf:"bytes,2,opt,name=submitting_participant_uid,json=submittingParticipantUid,proto3" json:"submitting_participant_uid,omitempty"`
	CommandId                string                 `protobuf:"bytes,3,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	SubmissionId             string                 `protobuf:"bytes,4,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	UserId                   string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WorkflowId               string                 `protobuf:"bytes,6,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ReassignmentSubmitterMetadata) Reset() {
	*x = ReassignmentSubmitterMetadata{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReassignmentSubmitterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReassignmentSubmitterMetadata) ProtoMessage() {}

func (x *ReassignmentSubmitterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReassignmentSubmitterMetadata.ProtoReflect.Descriptor instead.
func (*ReassignmentSubmitterMetadata) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{6}
}

func (x *ReassignmentSubmitterMetadata) GetSubmitter() string {
	if x != nil {
		return x.Submitter
	}
	return ""
}

func (x *ReassignmentSubmitterMetadata) GetSubmittingParticipantUid() string {
	if x != nil {
		return x.SubmittingParticipantUid
	}
	return ""
}

func (x *ReassignmentSubmitterMetadata) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *ReassignmentSubmitterMetadata) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *ReassignmentSubmitterMetadata) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReassignmentSubmitterMetadata) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type UnassignmentView struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Salt                  *v30.Salt              `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	TargetSynchronizerId  string                 `protobuf:"bytes,3,opt,name=target_synchronizer_id,json=targetSynchronizerId,proto3" json:"target_synchronizer_id,omitempty"`
	TargetTimeProof       *TimeProof        `protobuf:"bytes,4,opt,name=target_time_proof,json=targetTimeProof,proto3" json:"target_time_proof,omitempty"`
	TargetProtocolVersion int32                  `protobuf:"varint,5,opt,name=target_protocol_version,json=targetProtocolVersion,proto3" json:"target_protocol_version,omitempty"`
	ReassignmentCounter   int64                  `protobuf:"varint,6,opt,name=reassignment_counter,json=reassignmentCounter,proto3" json:"reassignment_counter,omitempty"`
	Contract              *SerializableContract  `protobuf:"bytes,7,opt,name=contract,proto3" json:"contract,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UnassignmentView) Reset() {
	*x = UnassignmentView{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnassignmentView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignmentView) ProtoMessage() {}

func (x *UnassignmentView) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignmentView.ProtoReflect.Descriptor instead.
func (*UnassignmentView) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{7}
}

func (x *UnassignmentView) GetSalt() *v30.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *UnassignmentView) GetTargetSynchronizerId() string {
	if x != nil {
		return x.TargetSynchronizerId
	}
	return ""
}

func (x *UnassignmentView) GetTargetTimeProof() *TimeProof {
	if x != nil {
		return x.TargetTimeProof
	}
	return nil
}

func (x *UnassignmentView) GetTargetProtocolVersion() int32 {
	if x != nil {
		return x.TargetProtocolVersion
	}
	return 0
}

func (x *UnassignmentView) GetReassignmentCounter() int64 {
	if x != nil {
		return x.ReassignmentCounter
	}
	return 0
}

func (x *UnassignmentView) GetContract() *SerializableContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

type AssignmentView struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Salt                    *v30.Salt              `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	Contract                *SerializableContract  `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	UnassignmentResultEvent []byte                 `protobuf:"bytes,3,opt,name=unassignment_result_event,json=unassignmentResultEvent,proto3" json:"unassignment_result_event,omitempty"`
	ReassignmentCounter     int64                  `protobuf:"varint,4,opt,name=reassignment_counter,json=reassignmentCounter,proto3" json:"reassignment_counter,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *AssignmentView) Reset() {
	*x = AssignmentView{}
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignmentView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentView) ProtoMessage() {}

func (x *AssignmentView) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentView.ProtoReflect.Descriptor instead.
func (*AssignmentView) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP(), []int{8}
}

func (x *AssignmentView) GetSalt() *v30.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *AssignmentView) GetContract() *SerializableContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *AssignmentView) GetUnassignmentResultEvent() []byte {
	if x != nil {
		return x.UnassignmentResultEvent
	}
	return nil
}

func (x *AssignmentView) GetReassignmentCounter() int64 {
	if x != nil {
		return x.ReassignmentCounter
	}
	return 0
}

var File_com_digitalasset_canton_protocol_v30_participant_reassignment_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDesc = "" +
	"\n" +
	"Ccom/digitalasset/canton/protocol/v30/participant_reassignment.proto\x12$com.digitalasset.canton.protocol.v30\x1a/com/digitalasset/canton/crypto/v30/crypto.proto\x1a8com/digitalasset/canton/protocol/v30/common_stable.proto\x1a1com/digitalasset/canton/protocol/v30/merkle.proto\x1a1com/digitalasset/canton/time/v30/time_proof.proto\"d\n" +
	"\x0eReassignmentId\x124\n" +
	"\x16source_synchronizer_id\x18\x01 \x01(\tR\x14sourceSynchronizerId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"\xe2\x03\n" +
	"\x16UnassignmentCommonData\x12<\n" +
	"\x04salt\x18\x01 \x01(\v2(.com.digitalasset.canton.crypto.v30.SaltR\x04salt\x124\n" +
	"\x16source_synchronizer_id\x18\x02 \x01(\tR\x14sourceSynchronizerId\x12V\n" +
	"\fstakeholders\x18\x03 \x01(\v22.com.digitalasset.canton.protocol.v30.StakeholdersR\fstakeholders\x12@\n" +
	"\x1creassigning_participant_uids\x18\x04 \x03(\tR\x1areassigningParticipantUids\x12\x12\n" +
	"\x04uuid\x18\x05 \x01(\tR\x04uuid\x122\n" +
	"\x15source_mediator_group\x18\x06 \x01(\x05R\x13sourceMediatorGroup\x12r\n" +
	"\x12submitter_metadata\x18\a \x01(\v2C.com.digitalasset.canton.protocol.v30.ReassignmentSubmitterMetadataR\x11submitterMetadata\"\x97\x01\n" +
	"\x14ReassignmentViewTree\x12\x1f\n" +
	"\vcommon_data\x18\x01 \x01(\fR\n" +
	"commonData\x12^\n" +
	"\x10participant_data\x18\x02 \x01(\v23.com.digitalasset.canton.protocol.v30.BlindableNodeR\x0fparticipantData\"\xe4\x01\n" +
	"\x19AssignmentMediatorMessage\x12N\n" +
	"\x04tree\x18\x01 \x01(\v2:.com.digitalasset.canton.protocol.v30.ReassignmentViewTreeR\x04tree\x12w\n" +
	" submitting_participant_signature\x18\x02 \x01(\v2-.com.digitalasset.canton.crypto.v30.SignatureR\x1esubmittingParticipantSignature\"\xe6\x01\n" +
	"\x1bUnassignmentMediatorMessage\x12N\n" +
	"\x04tree\x18\x01 \x01(\v2:.com.digitalasset.canton.protocol.v30.ReassignmentViewTreeR\x04tree\x12w\n" +
	" submitting_participant_signature\x18\x02 \x01(\v2-.com.digitalasset.canton.crypto.v30.SignatureR\x1esubmittingParticipantSignature\"\xe0\x03\n" +
	"\x14AssignmentCommonData\x12<\n" +
	"\x04salt\x18\x01 \x01(\v2(.com.digitalasset.canton.crypto.v30.SaltR\x04salt\x124\n" +
	"\x16target_synchronizer_id\x18\x02 \x01(\tR\x14targetSynchronizerId\x12V\n" +
	"\fstakeholders\x18\x03 \x01(\v22.com.digitalasset.canton.protocol.v30.StakeholdersR\fstakeholders\x12\x12\n" +
	"\x04uuid\x18\x04 \x01(\tR\x04uuid\x122\n" +
	"\x15target_mediator_group\x18\x05 \x01(\x05R\x13targetMediatorGroup\x12r\n" +
	"\x12submitter_metadata\x18\x06 \x01(\v2C.com.digitalasset.canton.protocol.v30.ReassignmentSubmitterMetadataR\x11submitterMetadata\x12@\n" +
	"\x1creassigning_participant_uids\x18\a \x03(\tR\x1areassigningParticipantUids\"\xf9\x01\n" +
	"\x1dReassignmentSubmitterMetadata\x12\x1c\n" +
	"\tsubmitter\x18\x01 \x01(\tR\tsubmitter\x12<\n" +
	"\x1asubmitting_participant_uid\x18\x02 \x01(\tR\x18submittingParticipantUid\x12\x1d\n" +
	"\n" +
	"command_id\x18\x03 \x01(\tR\tcommandId\x12#\n" +
	"\rsubmission_id\x18\x04 \x01(\tR\fsubmissionId\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\x1f\n" +
	"\vworkflow_id\x18\x06 \x01(\tR\n" +
	"workflowId\"\xa2\x03\n" +
	"\x10UnassignmentView\x12<\n" +
	"\x04salt\x18\x01 \x01(\v2(.com.digitalasset.canton.crypto.v30.SaltR\x04salt\x124\n" +
	"\x16target_synchronizer_id\x18\x03 \x01(\tR\x14targetSynchronizerId\x12W\n" +
	"\x11target_time_proof\x18\x04 \x01(\v2+.com.digitalasset.canton.time.v30.TimeProofR\x0ftargetTimeProof\x126\n" +
	"\x17target_protocol_version\x18\x05 \x01(\x05R\x15targetProtocolVersion\x121\n" +
	"\x14reassignment_counter\x18\x06 \x01(\x03R\x13reassignmentCounter\x12V\n" +
	"\bcontract\x18\a \x01(\v2:.com.digitalasset.canton.protocol.v30.SerializableContractR\bcontract\"\x95\x02\n" +
	"\x0eAssignmentView\x12<\n" +
	"\x04salt\x18\x01 \x01(\v2(.com.digitalasset.canton.crypto.v30.SaltR\x04salt\x12V\n" +
	"\bcontract\x18\x02 \x01(\v2:.com.digitalasset.canton.protocol.v30.SerializableContractR\bcontract\x12:\n" +
	"\x19unassignment_result_event\x18\x03 \x01(\fR\x17unassignmentResultEvent\x121\n" +
	"\x14reassignment_counter\x18\x04 \x01(\x03R\x13reassignmentCounterBUZSgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v30b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_goTypes = []any{
	(*ReassignmentId)(nil),                // 0: com.digitalasset.canton.protocol.v30.ReassignmentId
	(*UnassignmentCommonData)(nil),        // 1: com.digitalasset.canton.protocol.v30.UnassignmentCommonData
	(*ReassignmentViewTree)(nil),          // 2: com.digitalasset.canton.protocol.v30.ReassignmentViewTree
	(*AssignmentMediatorMessage)(nil),     // 3: com.digitalasset.canton.protocol.v30.AssignmentMediatorMessage
	(*UnassignmentMediatorMessage)(nil),   // 4: com.digitalasset.canton.protocol.v30.UnassignmentMediatorMessage
	(*AssignmentCommonData)(nil),          // 5: com.digitalasset.canton.protocol.v30.AssignmentCommonData
	(*ReassignmentSubmitterMetadata)(nil), // 6: com.digitalasset.canton.protocol.v30.ReassignmentSubmitterMetadata
	(*UnassignmentView)(nil),              // 7: com.digitalasset.canton.protocol.v30.UnassignmentView
	(*AssignmentView)(nil),                // 8: com.digitalasset.canton.protocol.v30.AssignmentView
	(*v30.Salt)(nil),                      // 9: com.digitalasset.canton.crypto.v30.Salt
	(*Stakeholders)(nil),                  // 10: com.digitalasset.canton.protocol.v30.Stakeholders
	(*BlindableNode)(nil),                 // 11: com.digitalasset.canton.protocol.v30.BlindableNode
	(*v30.Signature)(nil),                 // 12: com.digitalasset.canton.crypto.v30.Signature
	(*TimeProof)(nil),                     // 13: com.digitalasset.canton.time.v30.TimeProof
	(*SerializableContract)(nil),          // 14: com.digitalasset.canton.protocol.v30.SerializableContract
}
var file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_depIdxs = []int32{
	9,  // 0: com.digitalasset.canton.protocol.v30.UnassignmentCommonData.salt:type_name -> com.digitalasset.canton.crypto.v30.Salt
	10, // 1: com.digitalasset.canton.protocol.v30.UnassignmentCommonData.stakeholders:type_name -> com.digitalasset.canton.protocol.v30.Stakeholders
	6,  // 2: com.digitalasset.canton.protocol.v30.UnassignmentCommonData.submitter_metadata:type_name -> com.digitalasset.canton.protocol.v30.ReassignmentSubmitterMetadata
	11, // 3: com.digitalasset.canton.protocol.v30.ReassignmentViewTree.participant_data:type_name -> com.digitalasset.canton.protocol.v30.BlindableNode
	2,  // 4: com.digitalasset.canton.protocol.v30.AssignmentMediatorMessage.tree:type_name -> com.digitalasset.canton.protocol.v30.ReassignmentViewTree
	12, // 5: com.digitalasset.canton.protocol.v30.AssignmentMediatorMessage.submitting_participant_signature:type_name -> com.digitalasset.canton.crypto.v30.Signature
	2,  // 6: com.digitalasset.canton.protocol.v30.UnassignmentMediatorMessage.tree:type_name -> com.digitalasset.canton.protocol.v30.ReassignmentViewTree
	12, // 7: com.digitalasset.canton.protocol.v30.UnassignmentMediatorMessage.submitting_participant_signature:type_name -> com.digitalasset.canton.crypto.v30.Signature
	9,  // 8: com.digitalasset.canton.protocol.v30.AssignmentCommonData.salt:type_name -> com.digitalasset.canton.crypto.v30.Salt
	10, // 9: com.digitalasset.canton.protocol.v30.AssignmentCommonData.stakeholders:type_name -> com.digitalasset.canton.protocol.v30.Stakeholders
	6,  // 10: com.digitalasset.canton.protocol.v30.AssignmentCommonData.submitter_metadata:type_name -> com.digitalasset.canton.protocol.v30.ReassignmentSubmitterMetadata
	9,  // 11: com.digitalasset.canton.protocol.v30.UnassignmentView.salt:type_name -> com.digitalasset.canton.crypto.v30.Salt
	13, // 12: com.digitalasset.canton.protocol.v30.UnassignmentView.target_time_proof:type_name -> com.digitalasset.canton.time.v30.TimeProof
	14, // 13: com.digitalasset.canton.protocol.v30.UnassignmentView.contract:type_name -> com.digitalasset.canton.protocol.v30.SerializableContract
	9,  // 14: com.digitalasset.canton.protocol.v30.AssignmentView.salt:type_name -> com.digitalasset.canton.crypto.v30.Salt
	14, // 15: com.digitalasset.canton.protocol.v30.AssignmentView.contract:type_name -> com.digitalasset.canton.protocol.v30.SerializableContract
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_init() }
func file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_init() {
	if File_com_digitalasset_canton_protocol_v30_participant_reassignment_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v30_common_stable_proto_init()
	file_com_digitalasset_canton_protocol_v30_merkle_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v30_participant_reassignment_proto = out.File
	file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v30_participant_reassignment_proto_depIdxs = nil
}
