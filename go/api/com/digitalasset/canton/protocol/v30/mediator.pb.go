// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v30/mediator.proto

package v30

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InformeeTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tree          *GenTransactionTree    `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InformeeTree) Reset() {
	*x = InformeeTree{}
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InformeeTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformeeTree) ProtoMessage() {}

func (x *InformeeTree) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformeeTree.ProtoReflect.Descriptor instead.
func (*InformeeTree) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescGZIP(), []int{0}
}

func (x *InformeeTree) GetTree() *GenTransactionTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

type ParticipantReject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reasons       []*RejectionReason     `protobuf:"bytes,1,rep,name=reasons,proto3" json:"reasons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParticipantReject) Reset() {
	*x = ParticipantReject{}
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipantReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantReject) ProtoMessage() {}

func (x *ParticipantReject) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantReject.ProtoReflect.Descriptor instead.
func (*ParticipantReject) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescGZIP(), []int{1}
}

func (x *ParticipantReject) GetReasons() []*RejectionReason {
	if x != nil {
		return x.Reasons
	}
	return nil
}

type RejectionReason struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parties       []string               `protobuf:"bytes,1,rep,name=parties,proto3" json:"parties,omitempty"`
	Reject        *LocalVerdict          `protobuf:"bytes,2,opt,name=reject,proto3" json:"reject,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectionReason) Reset() {
	*x = RejectionReason{}
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectionReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectionReason) ProtoMessage() {}

func (x *RejectionReason) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectionReason.ProtoReflect.Descriptor instead.
func (*RejectionReason) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescGZIP(), []int{2}
}

func (x *RejectionReason) GetParties() []string {
	if x != nil {
		return x.Parties
	}
	return nil
}

func (x *RejectionReason) GetReject() *LocalVerdict {
	if x != nil {
		return x.Reject
	}
	return nil
}

type MediatorReject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        *status.Status         `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	IsMalformed   bool                   `protobuf:"varint,2,opt,name=is_malformed,json=isMalformed,proto3" json:"is_malformed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediatorReject) Reset() {
	*x = MediatorReject{}
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediatorReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediatorReject) ProtoMessage() {}

func (x *MediatorReject) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediatorReject.ProtoReflect.Descriptor instead.
func (*MediatorReject) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescGZIP(), []int{3}
}

func (x *MediatorReject) GetReason() *status.Status {
	if x != nil {
		return x.Reason
	}
	return nil
}

func (x *MediatorReject) GetIsMalformed() bool {
	if x != nil {
		return x.IsMalformed
	}
	return false
}

type Verdict struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to SomeVerdict:
	//
	//	*Verdict_Approve
	//	*Verdict_ParticipantReject
	//	*Verdict_MediatorReject
	SomeVerdict   isVerdict_SomeVerdict `protobuf_oneof:"some_verdict"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Verdict) Reset() {
	*x = Verdict{}
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Verdict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verdict) ProtoMessage() {}

func (x *Verdict) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verdict.ProtoReflect.Descriptor instead.
func (*Verdict) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescGZIP(), []int{4}
}

func (x *Verdict) GetSomeVerdict() isVerdict_SomeVerdict {
	if x != nil {
		return x.SomeVerdict
	}
	return nil
}

func (x *Verdict) GetApprove() *emptypb.Empty {
	if x != nil {
		if x, ok := x.SomeVerdict.(*Verdict_Approve); ok {
			return x.Approve
		}
	}
	return nil
}

func (x *Verdict) GetParticipantReject() *ParticipantReject {
	if x != nil {
		if x, ok := x.SomeVerdict.(*Verdict_ParticipantReject); ok {
			return x.ParticipantReject
		}
	}
	return nil
}

func (x *Verdict) GetMediatorReject() *MediatorReject {
	if x != nil {
		if x, ok := x.SomeVerdict.(*Verdict_MediatorReject); ok {
			return x.MediatorReject
		}
	}
	return nil
}

type isVerdict_SomeVerdict interface {
	isVerdict_SomeVerdict()
}

type Verdict_Approve struct {
	Approve *emptypb.Empty `protobuf:"bytes,1,opt,name=approve,proto3,oneof"`
}

type Verdict_ParticipantReject struct {
	ParticipantReject *ParticipantReject `protobuf:"bytes,2,opt,name=participant_reject,json=participantReject,proto3,oneof"`
}

type Verdict_MediatorReject struct {
	MediatorReject *MediatorReject `protobuf:"bytes,3,opt,name=mediator_reject,json=mediatorReject,proto3,oneof"`
}

func (*Verdict_Approve) isVerdict_SomeVerdict() {}

func (*Verdict_ParticipantReject) isVerdict_SomeVerdict() {}

func (*Verdict_MediatorReject) isVerdict_SomeVerdict() {}

type ConfirmationResultMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SynchronizerId string                 `protobuf:"bytes,1,opt,name=synchronizer_id,json=synchronizerId,proto3" json:"synchronizer_id,omitempty"`
	ViewType       ViewType               `protobuf:"varint,2,opt,name=view_type,json=viewType,proto3,enum=com.digitalasset.canton.protocol.v30.ViewType" json:"view_type,omitempty"`
	RequestId      int64                  `protobuf:"varint,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	RootHash       []byte                 `protobuf:"bytes,4,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	Verdict        *Verdict               `protobuf:"bytes,5,opt,name=verdict,proto3" json:"verdict,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConfirmationResultMessage) Reset() {
	*x = ConfirmationResultMessage{}
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmationResultMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmationResultMessage) ProtoMessage() {}

func (x *ConfirmationResultMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmationResultMessage.ProtoReflect.Descriptor instead.
func (*ConfirmationResultMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescGZIP(), []int{5}
}

func (x *ConfirmationResultMessage) GetSynchronizerId() string {
	if x != nil {
		return x.SynchronizerId
	}
	return ""
}

func (x *ConfirmationResultMessage) GetViewType() ViewType {
	if x != nil {
		return x.ViewType
	}
	return ViewType_VIEW_TYPE_UNSPECIFIED
}

func (x *ConfirmationResultMessage) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ConfirmationResultMessage) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *ConfirmationResultMessage) GetVerdict() *Verdict {
	if x != nil {
		return x.Verdict
	}
	return nil
}

var File_com_digitalasset_canton_protocol_v30_mediator_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDesc = "" +
	"\n" +
	"3com/digitalasset/canton/protocol/v30/mediator.proto\x12$com.digitalasset.canton.protocol.v30\x1a1com/digitalasset/canton/protocol/v30/common.proto\x1a@com/digitalasset/canton/protocol/v30/confirmation_response.proto\x1a1com/digitalasset/canton/protocol/v30/merkle.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x17google/rpc/status.proto\"\\\n" +
	"\fInformeeTree\x12L\n" +
	"\x04tree\x18\x01 \x01(\v28.com.digitalasset.canton.protocol.v30.GenTransactionTreeR\x04tree\"d\n" +
	"\x11ParticipantReject\x12O\n" +
	"\areasons\x18\x01 \x03(\v25.com.digitalasset.canton.protocol.v30.RejectionReasonR\areasons\"w\n" +
	"\x0fRejectionReason\x12\x18\n" +
	"\aparties\x18\x01 \x03(\tR\aparties\x12J\n" +
	"\x06reject\x18\x02 \x01(\v22.com.digitalasset.canton.protocol.v30.LocalVerdictR\x06reject\"_\n" +
	"\x0eMediatorReject\x12*\n" +
	"\x06reason\x18\x01 \x01(\v2\x12.google.rpc.StatusR\x06reason\x12!\n" +
	"\fis_malformed\x18\x02 \x01(\bR\visMalformed\"\x98\x02\n" +
	"\aVerdict\x122\n" +
	"\aapprove\x18\x01 \x01(\v2\x16.google.protobuf.EmptyH\x00R\aapprove\x12h\n" +
	"\x12participant_reject\x18\x02 \x01(\v27.com.digitalasset.canton.protocol.v30.ParticipantRejectH\x00R\x11participantReject\x12_\n" +
	"\x0fmediator_reject\x18\x03 \x01(\v24.com.digitalasset.canton.protocol.v30.MediatorRejectH\x00R\x0emediatorRejectB\x0e\n" +
	"\fsome_verdict\"\x96\x02\n" +
	"\x19ConfirmationResultMessage\x12'\n" +
	"\x0fsynchronizer_id\x18\x01 \x01(\tR\x0esynchronizerId\x12K\n" +
	"\tview_type\x18\x02 \x01(\x0e2..com.digitalasset.canton.protocol.v30.ViewTypeR\bviewType\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\x03R\trequestId\x12\x1b\n" +
	"\troot_hash\x18\x04 \x01(\fR\brootHash\x12G\n" +
	"\averdict\x18\x05 \x01(\v2-.com.digitalasset.canton.protocol.v30.VerdictR\averdictBUZSgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v30b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_com_digitalasset_canton_protocol_v30_mediator_proto_goTypes = []any{
	(*InformeeTree)(nil),              // 0: com.digitalasset.canton.protocol.v30.InformeeTree
	(*ParticipantReject)(nil),         // 1: com.digitalasset.canton.protocol.v30.ParticipantReject
	(*RejectionReason)(nil),           // 2: com.digitalasset.canton.protocol.v30.RejectionReason
	(*MediatorReject)(nil),            // 3: com.digitalasset.canton.protocol.v30.MediatorReject
	(*Verdict)(nil),                   // 4: com.digitalasset.canton.protocol.v30.Verdict
	(*ConfirmationResultMessage)(nil), // 5: com.digitalasset.canton.protocol.v30.ConfirmationResultMessage
	(*GenTransactionTree)(nil),        // 6: com.digitalasset.canton.protocol.v30.GenTransactionTree
	(*LocalVerdict)(nil),              // 7: com.digitalasset.canton.protocol.v30.LocalVerdict
	(*status.Status)(nil),             // 8: google.rpc.Status
	(*emptypb.Empty)(nil),             // 9: google.protobuf.Empty
	(ViewType)(0),                     // 10: com.digitalasset.canton.protocol.v30.ViewType
}
var file_com_digitalasset_canton_protocol_v30_mediator_proto_depIdxs = []int32{
	6,  // 0: com.digitalasset.canton.protocol.v30.InformeeTree.tree:type_name -> com.digitalasset.canton.protocol.v30.GenTransactionTree
	2,  // 1: com.digitalasset.canton.protocol.v30.ParticipantReject.reasons:type_name -> com.digitalasset.canton.protocol.v30.RejectionReason
	7,  // 2: com.digitalasset.canton.protocol.v30.RejectionReason.reject:type_name -> com.digitalasset.canton.protocol.v30.LocalVerdict
	8,  // 3: com.digitalasset.canton.protocol.v30.MediatorReject.reason:type_name -> google.rpc.Status
	9,  // 4: com.digitalasset.canton.protocol.v30.Verdict.approve:type_name -> google.protobuf.Empty
	1,  // 5: com.digitalasset.canton.protocol.v30.Verdict.participant_reject:type_name -> com.digitalasset.canton.protocol.v30.ParticipantReject
	3,  // 6: com.digitalasset.canton.protocol.v30.Verdict.mediator_reject:type_name -> com.digitalasset.canton.protocol.v30.MediatorReject
	10, // 7: com.digitalasset.canton.protocol.v30.ConfirmationResultMessage.view_type:type_name -> com.digitalasset.canton.protocol.v30.ViewType
	4,  // 8: com.digitalasset.canton.protocol.v30.ConfirmationResultMessage.verdict:type_name -> com.digitalasset.canton.protocol.v30.Verdict
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v30_mediator_proto_init() }
func file_com_digitalasset_canton_protocol_v30_mediator_proto_init() {
	if File_com_digitalasset_canton_protocol_v30_mediator_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v30_common_proto_init()
	file_com_digitalasset_canton_protocol_v30_confirmation_response_proto_init()
	file_com_digitalasset_canton_protocol_v30_merkle_proto_init()
	file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes[4].OneofWrappers = []any{
		(*Verdict_Approve)(nil),
		(*Verdict_ParticipantReject)(nil),
		(*Verdict_MediatorReject)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v30_mediator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v30_mediator_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v30_mediator_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v30_mediator_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v30_mediator_proto = out.File
	file_com_digitalasset_canton_protocol_v30_mediator_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v30_mediator_proto_depIdxs = nil
}
