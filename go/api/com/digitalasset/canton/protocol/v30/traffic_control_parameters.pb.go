// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/protocol/v30/traffic_control_parameters.proto

package v30

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrafficControlParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxBaseTrafficAmount                  uint64               `protobuf:"varint,1,opt,name=max_base_traffic_amount,json=maxBaseTrafficAmount,proto3" json:"max_base_traffic_amount,omitempty"`
	MaxBaseTrafficAccumulationDuration    *durationpb.Duration `protobuf:"bytes,3,opt,name=max_base_traffic_accumulation_duration,json=maxBaseTrafficAccumulationDuration,proto3" json:"max_base_traffic_accumulation_duration,omitempty"`
	ReadVsWriteScalingFactor              uint32               `protobuf:"varint,4,opt,name=read_vs_write_scaling_factor,json=readVsWriteScalingFactor,proto3" json:"read_vs_write_scaling_factor,omitempty"`
	SetBalanceRequestSubmissionWindowSize *durationpb.Duration `protobuf:"bytes,5,opt,name=set_balance_request_submission_window_size,json=setBalanceRequestSubmissionWindowSize,proto3" json:"set_balance_request_submission_window_size,omitempty"`
	EnforceRateLimiting                   bool                 `protobuf:"varint,6,opt,name=enforce_rate_limiting,json=enforceRateLimiting,proto3" json:"enforce_rate_limiting,omitempty"`
}

func (x *TrafficControlParameters) Reset() {
	*x = TrafficControlParameters{}
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficControlParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficControlParameters) ProtoMessage() {}

func (x *TrafficControlParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficControlParameters.ProtoReflect.Descriptor instead.
func (*TrafficControlParameters) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescGZIP(), []int{0}
}

func (x *TrafficControlParameters) GetMaxBaseTrafficAmount() uint64 {
	if x != nil {
		return x.MaxBaseTrafficAmount
	}
	return 0
}

func (x *TrafficControlParameters) GetMaxBaseTrafficAccumulationDuration() *durationpb.Duration {
	if x != nil {
		return x.MaxBaseTrafficAccumulationDuration
	}
	return nil
}

func (x *TrafficControlParameters) GetReadVsWriteScalingFactor() uint32 {
	if x != nil {
		return x.ReadVsWriteScalingFactor
	}
	return 0
}

func (x *TrafficControlParameters) GetSetBalanceRequestSubmissionWindowSize() *durationpb.Duration {
	if x != nil {
		return x.SetBalanceRequestSubmissionWindowSize
	}
	return nil
}

func (x *TrafficControlParameters) GetEnforceRateLimiting() bool {
	if x != nil {
		return x.EnforceRateLimiting
	}
	return false
}

type TrafficReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumedCost         uint64 `protobuf:"varint,1,opt,name=consumed_cost,json=consumedCost,proto3" json:"consumed_cost,omitempty"`
	ExtraTrafficConsumed uint64 `protobuf:"varint,2,opt,name=extra_traffic_consumed,json=extraTrafficConsumed,proto3" json:"extra_traffic_consumed,omitempty"`
	BaseTrafficRemainder uint64 `protobuf:"varint,3,opt,name=base_traffic_remainder,json=baseTrafficRemainder,proto3" json:"base_traffic_remainder,omitempty"`
}

func (x *TrafficReceipt) Reset() {
	*x = TrafficReceipt{}
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficReceipt) ProtoMessage() {}

func (x *TrafficReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficReceipt.ProtoReflect.Descriptor instead.
func (*TrafficReceipt) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescGZIP(), []int{1}
}

func (x *TrafficReceipt) GetConsumedCost() uint64 {
	if x != nil {
		return x.ConsumedCost
	}
	return 0
}

func (x *TrafficReceipt) GetExtraTrafficConsumed() uint64 {
	if x != nil {
		return x.ExtraTrafficConsumed
	}
	return 0
}

func (x *TrafficReceipt) GetBaseTrafficRemainder() uint64 {
	if x != nil {
		return x.BaseTrafficRemainder
	}
	return 0
}

type TrafficConsumed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member               string `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	ExtraTrafficConsumed uint64 `protobuf:"varint,2,opt,name=extra_traffic_consumed,json=extraTrafficConsumed,proto3" json:"extra_traffic_consumed,omitempty"`
	BaseTrafficRemainder uint64 `protobuf:"varint,3,opt,name=base_traffic_remainder,json=baseTrafficRemainder,proto3" json:"base_traffic_remainder,omitempty"`
	LastConsumedCost     uint64 `protobuf:"varint,4,opt,name=last_consumed_cost,json=lastConsumedCost,proto3" json:"last_consumed_cost,omitempty"`
	SequencingTimestamp  int64  `protobuf:"varint,5,opt,name=sequencing_timestamp,json=sequencingTimestamp,proto3" json:"sequencing_timestamp,omitempty"`
}

func (x *TrafficConsumed) Reset() {
	*x = TrafficConsumed{}
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficConsumed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficConsumed) ProtoMessage() {}

func (x *TrafficConsumed) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficConsumed.ProtoReflect.Descriptor instead.
func (*TrafficConsumed) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescGZIP(), []int{2}
}

func (x *TrafficConsumed) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *TrafficConsumed) GetExtraTrafficConsumed() uint64 {
	if x != nil {
		return x.ExtraTrafficConsumed
	}
	return 0
}

func (x *TrafficConsumed) GetBaseTrafficRemainder() uint64 {
	if x != nil {
		return x.BaseTrafficRemainder
	}
	return 0
}

func (x *TrafficConsumed) GetLastConsumedCost() uint64 {
	if x != nil {
		return x.LastConsumedCost
	}
	return 0
}

func (x *TrafficConsumed) GetSequencingTimestamp() int64 {
	if x != nil {
		return x.SequencingTimestamp
	}
	return 0
}

type TrafficPurchased struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member                string `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Serial                uint32 `protobuf:"varint,2,opt,name=serial,proto3" json:"serial,omitempty"`
	ExtraTrafficPurchased uint64 `protobuf:"varint,3,opt,name=extra_traffic_purchased,json=extraTrafficPurchased,proto3" json:"extra_traffic_purchased,omitempty"`
	SequencingTimestamp   int64  `protobuf:"varint,4,opt,name=sequencing_timestamp,json=sequencingTimestamp,proto3" json:"sequencing_timestamp,omitempty"`
}

func (x *TrafficPurchased) Reset() {
	*x = TrafficPurchased{}
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficPurchased) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficPurchased) ProtoMessage() {}

func (x *TrafficPurchased) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficPurchased.ProtoReflect.Descriptor instead.
func (*TrafficPurchased) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescGZIP(), []int{3}
}

func (x *TrafficPurchased) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *TrafficPurchased) GetSerial() uint32 {
	if x != nil {
		return x.Serial
	}
	return 0
}

func (x *TrafficPurchased) GetExtraTrafficPurchased() uint64 {
	if x != nil {
		return x.ExtraTrafficPurchased
	}
	return 0
}

func (x *TrafficPurchased) GetSequencingTimestamp() int64 {
	if x != nil {
		return x.SequencingTimestamp
	}
	return 0
}

type TrafficState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtraTrafficPurchased int64                   `protobuf:"varint,1,opt,name=extra_traffic_purchased,json=extraTrafficPurchased,proto3" json:"extra_traffic_purchased,omitempty"`
	ExtraTrafficConsumed  int64                   `protobuf:"varint,2,opt,name=extra_traffic_consumed,json=extraTrafficConsumed,proto3" json:"extra_traffic_consumed,omitempty"`
	BaseTrafficRemainder  int64                   `protobuf:"varint,3,opt,name=base_traffic_remainder,json=baseTrafficRemainder,proto3" json:"base_traffic_remainder,omitempty"`
	LastConsumedCost      uint64                  `protobuf:"varint,4,opt,name=last_consumed_cost,json=lastConsumedCost,proto3" json:"last_consumed_cost,omitempty"`
	Timestamp             int64                   `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Serial                *wrapperspb.UInt32Value `protobuf:"bytes,6,opt,name=serial,proto3" json:"serial,omitempty"`
}

func (x *TrafficState) Reset() {
	*x = TrafficState{}
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficState) ProtoMessage() {}

func (x *TrafficState) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficState.ProtoReflect.Descriptor instead.
func (*TrafficState) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescGZIP(), []int{4}
}

func (x *TrafficState) GetExtraTrafficPurchased() int64 {
	if x != nil {
		return x.ExtraTrafficPurchased
	}
	return 0
}

func (x *TrafficState) GetExtraTrafficConsumed() int64 {
	if x != nil {
		return x.ExtraTrafficConsumed
	}
	return 0
}

func (x *TrafficState) GetBaseTrafficRemainder() int64 {
	if x != nil {
		return x.BaseTrafficRemainder
	}
	return 0
}

func (x *TrafficState) GetLastConsumedCost() uint64 {
	if x != nil {
		return x.LastConsumedCost
	}
	return 0
}

func (x *TrafficState) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TrafficState) GetSerial() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Serial
	}
	return nil
}

type SetTrafficPurchasedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member                string `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Serial                uint32 `protobuf:"varint,2,opt,name=serial,proto3" json:"serial,omitempty"`
	TotalTrafficPurchased uint64 `protobuf:"varint,4,opt,name=total_traffic_purchased,json=totalTrafficPurchased,proto3" json:"total_traffic_purchased,omitempty"`
	DomainId              string `protobuf:"bytes,5,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *SetTrafficPurchasedMessage) Reset() {
	*x = SetTrafficPurchasedMessage{}
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTrafficPurchasedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTrafficPurchasedMessage) ProtoMessage() {}

func (x *SetTrafficPurchasedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTrafficPurchasedMessage.ProtoReflect.Descriptor instead.
func (*SetTrafficPurchasedMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescGZIP(), []int{5}
}

func (x *SetTrafficPurchasedMessage) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *SetTrafficPurchasedMessage) GetSerial() uint32 {
	if x != nil {
		return x.Serial
	}
	return 0
}

func (x *SetTrafficPurchasedMessage) GetTotalTrafficPurchased() uint64 {
	if x != nil {
		return x.TotalTrafficPurchased
	}
	return 0
}

func (x *SetTrafficPurchasedMessage) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

var File_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDesc = []byte{
	0x0a, 0x45, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x33, 0x30, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x03,
	0x0a, 0x18, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x61,
	0x78, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6d, 0x61, 0x78,
	0x42, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x6d, 0x0a, 0x26, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x22, 0x6d, 0x61,
	0x78, 0x42, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x63, 0x63, 0x75,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x0a, 0x1c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x72, 0x65, 0x61, 0x64, 0x56, 0x73, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x74, 0x0a, 0x2a, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x25, 0x73, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xa1, 0x01, 0x0a, 0x0e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x61, 0x73, 0x65, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xf6,
	0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x16, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x62, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xad, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x17,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xb4, 0x02, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x14, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x62, 0x61, 0x73, 0x65, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xa1,
	0x01, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x36, 0x0a,
	0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x64,
	0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f, 0x67, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x33, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescData = file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDesc
)

func file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescData)
	})
	return file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_goTypes = []any{
	(*TrafficControlParameters)(nil),   // 0: com.digitalasset.canton.protocol.v30.TrafficControlParameters
	(*TrafficReceipt)(nil),             // 1: com.digitalasset.canton.protocol.v30.TrafficReceipt
	(*TrafficConsumed)(nil),            // 2: com.digitalasset.canton.protocol.v30.TrafficConsumed
	(*TrafficPurchased)(nil),           // 3: com.digitalasset.canton.protocol.v30.TrafficPurchased
	(*TrafficState)(nil),               // 4: com.digitalasset.canton.protocol.v30.TrafficState
	(*SetTrafficPurchasedMessage)(nil), // 5: com.digitalasset.canton.protocol.v30.SetTrafficPurchasedMessage
	(*durationpb.Duration)(nil),        // 6: google.protobuf.Duration
	(*wrapperspb.UInt32Value)(nil),     // 7: google.protobuf.UInt32Value
}
var file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_depIdxs = []int32{
	6, // 0: com.digitalasset.canton.protocol.v30.TrafficControlParameters.max_base_traffic_accumulation_duration:type_name -> google.protobuf.Duration
	6, // 1: com.digitalasset.canton.protocol.v30.TrafficControlParameters.set_balance_request_submission_window_size:type_name -> google.protobuf.Duration
	7, // 2: com.digitalasset.canton.protocol.v30.TrafficState.serial:type_name -> google.protobuf.UInt32Value
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_init() }
func file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_init() {
	if File_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto = out.File
	file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_rawDesc = nil
	file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v30_traffic_control_parameters_proto_depIdxs = nil
}
