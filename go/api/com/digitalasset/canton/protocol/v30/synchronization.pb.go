// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/protocol/v30/synchronization.proto

package v30

import (
	v30 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v30"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TypedSignedProtocolMessageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SomeSignedProtocolMessage:
	//
	//	*TypedSignedProtocolMessageContent_ConfirmationResponse
	//	*TypedSignedProtocolMessageContent_ConfirmationResult
	//	*TypedSignedProtocolMessageContent_AcsCommitment
	//	*TypedSignedProtocolMessageContent_SetTrafficPurchased
	SomeSignedProtocolMessage isTypedSignedProtocolMessageContent_SomeSignedProtocolMessage `protobuf_oneof:"some_signed_protocol_message"`
}

func (x *TypedSignedProtocolMessageContent) Reset() {
	*x = TypedSignedProtocolMessageContent{}
	mi := &file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypedSignedProtocolMessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypedSignedProtocolMessageContent) ProtoMessage() {}

func (x *TypedSignedProtocolMessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypedSignedProtocolMessageContent.ProtoReflect.Descriptor instead.
func (*TypedSignedProtocolMessageContent) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescGZIP(), []int{0}
}

func (m *TypedSignedProtocolMessageContent) GetSomeSignedProtocolMessage() isTypedSignedProtocolMessageContent_SomeSignedProtocolMessage {
	if m != nil {
		return m.SomeSignedProtocolMessage
	}
	return nil
}

func (x *TypedSignedProtocolMessageContent) GetConfirmationResponse() []byte {
	if x, ok := x.GetSomeSignedProtocolMessage().(*TypedSignedProtocolMessageContent_ConfirmationResponse); ok {
		return x.ConfirmationResponse
	}
	return nil
}

func (x *TypedSignedProtocolMessageContent) GetConfirmationResult() []byte {
	if x, ok := x.GetSomeSignedProtocolMessage().(*TypedSignedProtocolMessageContent_ConfirmationResult); ok {
		return x.ConfirmationResult
	}
	return nil
}

func (x *TypedSignedProtocolMessageContent) GetAcsCommitment() []byte {
	if x, ok := x.GetSomeSignedProtocolMessage().(*TypedSignedProtocolMessageContent_AcsCommitment); ok {
		return x.AcsCommitment
	}
	return nil
}

func (x *TypedSignedProtocolMessageContent) GetSetTrafficPurchased() []byte {
	if x, ok := x.GetSomeSignedProtocolMessage().(*TypedSignedProtocolMessageContent_SetTrafficPurchased); ok {
		return x.SetTrafficPurchased
	}
	return nil
}

type isTypedSignedProtocolMessageContent_SomeSignedProtocolMessage interface {
	isTypedSignedProtocolMessageContent_SomeSignedProtocolMessage()
}

type TypedSignedProtocolMessageContent_ConfirmationResponse struct {
	ConfirmationResponse []byte `protobuf:"bytes,2,opt,name=confirmation_response,json=confirmationResponse,proto3,oneof"`
}

type TypedSignedProtocolMessageContent_ConfirmationResult struct {
	ConfirmationResult []byte `protobuf:"bytes,3,opt,name=confirmation_result,json=confirmationResult,proto3,oneof"`
}

type TypedSignedProtocolMessageContent_AcsCommitment struct {
	AcsCommitment []byte `protobuf:"bytes,4,opt,name=acs_commitment,json=acsCommitment,proto3,oneof"`
}

type TypedSignedProtocolMessageContent_SetTrafficPurchased struct {
	SetTrafficPurchased []byte `protobuf:"bytes,5,opt,name=set_traffic_purchased,json=setTrafficPurchased,proto3,oneof"`
}

func (*TypedSignedProtocolMessageContent_ConfirmationResponse) isTypedSignedProtocolMessageContent_SomeSignedProtocolMessage() {
}

func (*TypedSignedProtocolMessageContent_ConfirmationResult) isTypedSignedProtocolMessageContent_SomeSignedProtocolMessage() {
}

func (*TypedSignedProtocolMessageContent_AcsCommitment) isTypedSignedProtocolMessageContent_SomeSignedProtocolMessage() {
}

func (*TypedSignedProtocolMessageContent_SetTrafficPurchased) isTypedSignedProtocolMessageContent_SomeSignedProtocolMessage() {
}

type SignedProtocolMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature                         []*v30.Signature `protobuf:"bytes,1,rep,name=signature,proto3" json:"signature,omitempty"`
	TypedSignedProtocolMessageContent []byte           `protobuf:"bytes,2,opt,name=typed_signed_protocol_message_content,json=typedSignedProtocolMessageContent,proto3" json:"typed_signed_protocol_message_content,omitempty"`
}

func (x *SignedProtocolMessage) Reset() {
	*x = SignedProtocolMessage{}
	mi := &file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedProtocolMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedProtocolMessage) ProtoMessage() {}

func (x *SignedProtocolMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedProtocolMessage.ProtoReflect.Descriptor instead.
func (*SignedProtocolMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescGZIP(), []int{1}
}

func (x *SignedProtocolMessage) GetSignature() []*v30.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignedProtocolMessage) GetTypedSignedProtocolMessageContent() []byte {
	if x != nil {
		return x.TypedSignedProtocolMessageContent
	}
	return nil
}

type EnvelopeContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SomeEnvelopeContent:
	//
	//	*EnvelopeContent_InformeeMessage
	//	*EnvelopeContent_EncryptedViewMessage
	//	*EnvelopeContent_TransferOutMediatorMessage
	//	*EnvelopeContent_TransferInMediatorMessage
	//	*EnvelopeContent_RootHashMessage
	//	*EnvelopeContent_TopologyTransactionsBroadcast
	SomeEnvelopeContent isEnvelopeContent_SomeEnvelopeContent `protobuf_oneof:"some_envelope_content"`
}

func (x *EnvelopeContent) Reset() {
	*x = EnvelopeContent{}
	mi := &file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvelopeContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvelopeContent) ProtoMessage() {}

func (x *EnvelopeContent) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvelopeContent.ProtoReflect.Descriptor instead.
func (*EnvelopeContent) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescGZIP(), []int{2}
}

func (m *EnvelopeContent) GetSomeEnvelopeContent() isEnvelopeContent_SomeEnvelopeContent {
	if m != nil {
		return m.SomeEnvelopeContent
	}
	return nil
}

func (x *EnvelopeContent) GetInformeeMessage() *InformeeMessage {
	if x, ok := x.GetSomeEnvelopeContent().(*EnvelopeContent_InformeeMessage); ok {
		return x.InformeeMessage
	}
	return nil
}

func (x *EnvelopeContent) GetEncryptedViewMessage() *EncryptedViewMessage {
	if x, ok := x.GetSomeEnvelopeContent().(*EnvelopeContent_EncryptedViewMessage); ok {
		return x.EncryptedViewMessage
	}
	return nil
}

func (x *EnvelopeContent) GetTransferOutMediatorMessage() *TransferOutMediatorMessage {
	if x, ok := x.GetSomeEnvelopeContent().(*EnvelopeContent_TransferOutMediatorMessage); ok {
		return x.TransferOutMediatorMessage
	}
	return nil
}

func (x *EnvelopeContent) GetTransferInMediatorMessage() *TransferInMediatorMessage {
	if x, ok := x.GetSomeEnvelopeContent().(*EnvelopeContent_TransferInMediatorMessage); ok {
		return x.TransferInMediatorMessage
	}
	return nil
}

func (x *EnvelopeContent) GetRootHashMessage() *RootHashMessage {
	if x, ok := x.GetSomeEnvelopeContent().(*EnvelopeContent_RootHashMessage); ok {
		return x.RootHashMessage
	}
	return nil
}

func (x *EnvelopeContent) GetTopologyTransactionsBroadcast() *TopologyTransactionsBroadcast {
	if x, ok := x.GetSomeEnvelopeContent().(*EnvelopeContent_TopologyTransactionsBroadcast); ok {
		return x.TopologyTransactionsBroadcast
	}
	return nil
}

type isEnvelopeContent_SomeEnvelopeContent interface {
	isEnvelopeContent_SomeEnvelopeContent()
}

type EnvelopeContent_InformeeMessage struct {
	InformeeMessage *InformeeMessage `protobuf:"bytes,1,opt,name=informee_message,json=informeeMessage,proto3,oneof"`
}

type EnvelopeContent_EncryptedViewMessage struct {
	EncryptedViewMessage *EncryptedViewMessage `protobuf:"bytes,2,opt,name=encrypted_view_message,json=encryptedViewMessage,proto3,oneof"`
}

type EnvelopeContent_TransferOutMediatorMessage struct {
	TransferOutMediatorMessage *TransferOutMediatorMessage `protobuf:"bytes,3,opt,name=transfer_out_mediator_message,json=transferOutMediatorMessage,proto3,oneof"`
}

type EnvelopeContent_TransferInMediatorMessage struct {
	TransferInMediatorMessage *TransferInMediatorMessage `protobuf:"bytes,4,opt,name=transfer_in_mediator_message,json=transferInMediatorMessage,proto3,oneof"`
}

type EnvelopeContent_RootHashMessage struct {
	RootHashMessage *RootHashMessage `protobuf:"bytes,5,opt,name=root_hash_message,json=rootHashMessage,proto3,oneof"`
}

type EnvelopeContent_TopologyTransactionsBroadcast struct {
	TopologyTransactionsBroadcast *TopologyTransactionsBroadcast `protobuf:"bytes,6,opt,name=topology_transactions_broadcast,json=topologyTransactionsBroadcast,proto3,oneof"`
}

func (*EnvelopeContent_InformeeMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_EncryptedViewMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_TransferOutMediatorMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_TransferInMediatorMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_RootHashMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_TopologyTransactionsBroadcast) isEnvelopeContent_SomeEnvelopeContent() {}

var File_com_digitalasset_canton_protocol_v30_synchronization_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x33, 0x30, 0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x42, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x02,
	0x0a, 0x21, 0x54, 0x79, 0x70, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a,
	0x0e, 0x61, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x63, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x42, 0x1e, 0x0a, 0x1c,
	0x73, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb6, 0x01, 0x0a,
	0x15, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x50, 0x0a, 0x25, 0x74, 0x79, 0x70, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x21, 0x74, 0x79, 0x70, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x84, 0x06, 0x0a, 0x0f, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x62, 0x0a, 0x10, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x65, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x65, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x72, 0x0a,
	0x16, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x33, 0x30, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x56, 0x69,
	0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x14, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x85, 0x01, 0x0a, 0x1d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x1c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x49, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x63,
	0x0a, 0x11, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x33, 0x30, 0x2e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x73, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x55, 0x5a, 0x53,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f,
	0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x76, 0x33, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescData = file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDesc
)

func file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescData)
	})
	return file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_digitalasset_canton_protocol_v30_synchronization_proto_goTypes = []any{
	(*TypedSignedProtocolMessageContent)(nil), // 0: com.digitalasset.canton.protocol.v30.TypedSignedProtocolMessageContent
	(*SignedProtocolMessage)(nil),             // 1: com.digitalasset.canton.protocol.v30.SignedProtocolMessage
	(*EnvelopeContent)(nil),                   // 2: com.digitalasset.canton.protocol.v30.EnvelopeContent
	(*v30.Signature)(nil),                     // 3: com.digitalasset.canton.crypto.v30.Signature
	(*InformeeMessage)(nil),                   // 4: com.digitalasset.canton.protocol.v30.InformeeMessage
	(*EncryptedViewMessage)(nil),              // 5: com.digitalasset.canton.protocol.v30.EncryptedViewMessage
	(*TransferOutMediatorMessage)(nil),        // 6: com.digitalasset.canton.protocol.v30.TransferOutMediatorMessage
	(*TransferInMediatorMessage)(nil),         // 7: com.digitalasset.canton.protocol.v30.TransferInMediatorMessage
	(*RootHashMessage)(nil),                   // 8: com.digitalasset.canton.protocol.v30.RootHashMessage
	(*TopologyTransactionsBroadcast)(nil),     // 9: com.digitalasset.canton.protocol.v30.TopologyTransactionsBroadcast
}
var file_com_digitalasset_canton_protocol_v30_synchronization_proto_depIdxs = []int32{
	3, // 0: com.digitalasset.canton.protocol.v30.SignedProtocolMessage.signature:type_name -> com.digitalasset.canton.crypto.v30.Signature
	4, // 1: com.digitalasset.canton.protocol.v30.EnvelopeContent.informee_message:type_name -> com.digitalasset.canton.protocol.v30.InformeeMessage
	5, // 2: com.digitalasset.canton.protocol.v30.EnvelopeContent.encrypted_view_message:type_name -> com.digitalasset.canton.protocol.v30.EncryptedViewMessage
	6, // 3: com.digitalasset.canton.protocol.v30.EnvelopeContent.transfer_out_mediator_message:type_name -> com.digitalasset.canton.protocol.v30.TransferOutMediatorMessage
	7, // 4: com.digitalasset.canton.protocol.v30.EnvelopeContent.transfer_in_mediator_message:type_name -> com.digitalasset.canton.protocol.v30.TransferInMediatorMessage
	8, // 5: com.digitalasset.canton.protocol.v30.EnvelopeContent.root_hash_message:type_name -> com.digitalasset.canton.protocol.v30.RootHashMessage
	9, // 6: com.digitalasset.canton.protocol.v30.EnvelopeContent.topology_transactions_broadcast:type_name -> com.digitalasset.canton.protocol.v30.TopologyTransactionsBroadcast
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v30_synchronization_proto_init() }
func file_com_digitalasset_canton_protocol_v30_synchronization_proto_init() {
	if File_com_digitalasset_canton_protocol_v30_synchronization_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v30_participant_transaction_proto_init()
	file_com_digitalasset_canton_protocol_v30_participant_transfer_proto_init()
	file_com_digitalasset_canton_protocol_v30_topology_proto_init()
	file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes[0].OneofWrappers = []any{
		(*TypedSignedProtocolMessageContent_ConfirmationResponse)(nil),
		(*TypedSignedProtocolMessageContent_ConfirmationResult)(nil),
		(*TypedSignedProtocolMessageContent_AcsCommitment)(nil),
		(*TypedSignedProtocolMessageContent_SetTrafficPurchased)(nil),
	}
	file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes[2].OneofWrappers = []any{
		(*EnvelopeContent_InformeeMessage)(nil),
		(*EnvelopeContent_EncryptedViewMessage)(nil),
		(*EnvelopeContent_TransferOutMediatorMessage)(nil),
		(*EnvelopeContent_TransferInMediatorMessage)(nil),
		(*EnvelopeContent_RootHashMessage)(nil),
		(*EnvelopeContent_TopologyTransactionsBroadcast)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v30_synchronization_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v30_synchronization_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v30_synchronization_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v30_synchronization_proto = out.File
	file_com_digitalasset_canton_protocol_v30_synchronization_proto_rawDesc = nil
	file_com_digitalasset_canton_protocol_v30_synchronization_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v30_synchronization_proto_depIdxs = nil
}
