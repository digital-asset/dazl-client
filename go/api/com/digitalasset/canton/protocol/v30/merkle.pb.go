// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v30/merkle.proto

package v30

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenTransactionTree struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SubmitterMetadata   *BlindableNode         `protobuf:"bytes,1,opt,name=submitter_metadata,json=submitterMetadata,proto3" json:"submitter_metadata,omitempty"`
	CommonMetadata      *BlindableNode         `protobuf:"bytes,2,opt,name=common_metadata,json=commonMetadata,proto3" json:"common_metadata,omitempty"`
	ParticipantMetadata *BlindableNode         `protobuf:"bytes,3,opt,name=participant_metadata,json=participantMetadata,proto3" json:"participant_metadata,omitempty"`
	RootViews           *MerkleSeq             `protobuf:"bytes,4,opt,name=root_views,json=rootViews,proto3" json:"root_views,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GenTransactionTree) Reset() {
	*x = GenTransactionTree{}
	mi := &file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenTransactionTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenTransactionTree) ProtoMessage() {}

func (x *GenTransactionTree) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenTransactionTree.ProtoReflect.Descriptor instead.
func (*GenTransactionTree) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescGZIP(), []int{0}
}

func (x *GenTransactionTree) GetSubmitterMetadata() *BlindableNode {
	if x != nil {
		return x.SubmitterMetadata
	}
	return nil
}

func (x *GenTransactionTree) GetCommonMetadata() *BlindableNode {
	if x != nil {
		return x.CommonMetadata
	}
	return nil
}

func (x *GenTransactionTree) GetParticipantMetadata() *BlindableNode {
	if x != nil {
		return x.ParticipantMetadata
	}
	return nil
}

func (x *GenTransactionTree) GetRootViews() *MerkleSeq {
	if x != nil {
		return x.RootViews
	}
	return nil
}

type BlindableNode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to BlindedOrNot:
	//
	//	*BlindableNode_Unblinded
	//	*BlindableNode_BlindedHash
	BlindedOrNot  isBlindableNode_BlindedOrNot `protobuf_oneof:"blinded_or_not"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlindableNode) Reset() {
	*x = BlindableNode{}
	mi := &file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlindableNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlindableNode) ProtoMessage() {}

func (x *BlindableNode) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlindableNode.ProtoReflect.Descriptor instead.
func (*BlindableNode) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescGZIP(), []int{1}
}

func (x *BlindableNode) GetBlindedOrNot() isBlindableNode_BlindedOrNot {
	if x != nil {
		return x.BlindedOrNot
	}
	return nil
}

func (x *BlindableNode) GetUnblinded() []byte {
	if x != nil {
		if x, ok := x.BlindedOrNot.(*BlindableNode_Unblinded); ok {
			return x.Unblinded
		}
	}
	return nil
}

func (x *BlindableNode) GetBlindedHash() []byte {
	if x != nil {
		if x, ok := x.BlindedOrNot.(*BlindableNode_BlindedHash); ok {
			return x.BlindedHash
		}
	}
	return nil
}

type isBlindableNode_BlindedOrNot interface {
	isBlindableNode_BlindedOrNot()
}

type BlindableNode_Unblinded struct {
	Unblinded []byte `protobuf:"bytes,1,opt,name=unblinded,proto3,oneof"`
}

type BlindableNode_BlindedHash struct {
	BlindedHash []byte `protobuf:"bytes,2,opt,name=blinded_hash,json=blindedHash,proto3,oneof"`
}

func (*BlindableNode_Unblinded) isBlindableNode_BlindedOrNot() {}

func (*BlindableNode_BlindedHash) isBlindableNode_BlindedOrNot() {}

type MerkleSeq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RootOrEmpty   *BlindableNode         `protobuf:"bytes,1,opt,name=root_or_empty,json=rootOrEmpty,proto3" json:"root_or_empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerkleSeq) Reset() {
	*x = MerkleSeq{}
	mi := &file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerkleSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleSeq) ProtoMessage() {}

func (x *MerkleSeq) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleSeq.ProtoReflect.Descriptor instead.
func (*MerkleSeq) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescGZIP(), []int{2}
}

func (x *MerkleSeq) GetRootOrEmpty() *BlindableNode {
	if x != nil {
		return x.RootOrEmpty
	}
	return nil
}

type MerkleSeqElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	First         *BlindableNode         `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	Second        *BlindableNode         `protobuf:"bytes,2,opt,name=second,proto3" json:"second,omitempty"`
	Data          *BlindableNode         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerkleSeqElement) Reset() {
	*x = MerkleSeqElement{}
	mi := &file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerkleSeqElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleSeqElement) ProtoMessage() {}

func (x *MerkleSeqElement) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleSeqElement.ProtoReflect.Descriptor instead.
func (*MerkleSeqElement) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescGZIP(), []int{3}
}

func (x *MerkleSeqElement) GetFirst() *BlindableNode {
	if x != nil {
		return x.First
	}
	return nil
}

func (x *MerkleSeqElement) GetSecond() *BlindableNode {
	if x != nil {
		return x.Second
	}
	return nil
}

func (x *MerkleSeqElement) GetData() *BlindableNode {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_com_digitalasset_canton_protocol_v30_merkle_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDesc = "" +
	"\n" +
	"1com/digitalasset/canton/protocol/v30/merkle.proto\x12$com.digitalasset.canton.protocol.v30\"\x8e\x03\n" +
	"\x12GenTransactionTree\x12b\n" +
	"\x12submitter_metadata\x18\x01 \x01(\v23.com.digitalasset.canton.protocol.v30.BlindableNodeR\x11submitterMetadata\x12\\\n" +
	"\x0fcommon_metadata\x18\x02 \x01(\v23.com.digitalasset.canton.protocol.v30.BlindableNodeR\x0ecommonMetadata\x12f\n" +
	"\x14participant_metadata\x18\x03 \x01(\v23.com.digitalasset.canton.protocol.v30.BlindableNodeR\x13participantMetadata\x12N\n" +
	"\n" +
	"root_views\x18\x04 \x01(\v2/.com.digitalasset.canton.protocol.v30.MerkleSeqR\trootViews\"f\n" +
	"\rBlindableNode\x12\x1e\n" +
	"\tunblinded\x18\x01 \x01(\fH\x00R\tunblinded\x12#\n" +
	"\fblinded_hash\x18\x02 \x01(\fH\x00R\vblindedHashB\x10\n" +
	"\x0eblinded_or_not\"d\n" +
	"\tMerkleSeq\x12W\n" +
	"\rroot_or_empty\x18\x01 \x01(\v23.com.digitalasset.canton.protocol.v30.BlindableNodeR\vrootOrEmpty\"\xf3\x01\n" +
	"\x10MerkleSeqElement\x12I\n" +
	"\x05first\x18\x01 \x01(\v23.com.digitalasset.canton.protocol.v30.BlindableNodeR\x05first\x12K\n" +
	"\x06second\x18\x02 \x01(\v23.com.digitalasset.canton.protocol.v30.BlindableNodeR\x06second\x12G\n" +
	"\x04data\x18\x03 \x01(\v23.com.digitalasset.canton.protocol.v30.BlindableNodeR\x04dataBUZSgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v30b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_com_digitalasset_canton_protocol_v30_merkle_proto_goTypes = []any{
	(*GenTransactionTree)(nil), // 0: com.digitalasset.canton.protocol.v30.GenTransactionTree
	(*BlindableNode)(nil),      // 1: com.digitalasset.canton.protocol.v30.BlindableNode
	(*MerkleSeq)(nil),          // 2: com.digitalasset.canton.protocol.v30.MerkleSeq
	(*MerkleSeqElement)(nil),   // 3: com.digitalasset.canton.protocol.v30.MerkleSeqElement
}
var file_com_digitalasset_canton_protocol_v30_merkle_proto_depIdxs = []int32{
	1, // 0: com.digitalasset.canton.protocol.v30.GenTransactionTree.submitter_metadata:type_name -> com.digitalasset.canton.protocol.v30.BlindableNode
	1, // 1: com.digitalasset.canton.protocol.v30.GenTransactionTree.common_metadata:type_name -> com.digitalasset.canton.protocol.v30.BlindableNode
	1, // 2: com.digitalasset.canton.protocol.v30.GenTransactionTree.participant_metadata:type_name -> com.digitalasset.canton.protocol.v30.BlindableNode
	2, // 3: com.digitalasset.canton.protocol.v30.GenTransactionTree.root_views:type_name -> com.digitalasset.canton.protocol.v30.MerkleSeq
	1, // 4: com.digitalasset.canton.protocol.v30.MerkleSeq.root_or_empty:type_name -> com.digitalasset.canton.protocol.v30.BlindableNode
	1, // 5: com.digitalasset.canton.protocol.v30.MerkleSeqElement.first:type_name -> com.digitalasset.canton.protocol.v30.BlindableNode
	1, // 6: com.digitalasset.canton.protocol.v30.MerkleSeqElement.second:type_name -> com.digitalasset.canton.protocol.v30.BlindableNode
	1, // 7: com.digitalasset.canton.protocol.v30.MerkleSeqElement.data:type_name -> com.digitalasset.canton.protocol.v30.BlindableNode
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v30_merkle_proto_init() }
func file_com_digitalasset_canton_protocol_v30_merkle_proto_init() {
	if File_com_digitalasset_canton_protocol_v30_merkle_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes[1].OneofWrappers = []any{
		(*BlindableNode_Unblinded)(nil),
		(*BlindableNode_BlindedHash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v30_merkle_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v30_merkle_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v30_merkle_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v30_merkle_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v30_merkle_proto = out.File
	file_com_digitalasset_canton_protocol_v30_merkle_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v30_merkle_proto_depIdxs = nil
}
