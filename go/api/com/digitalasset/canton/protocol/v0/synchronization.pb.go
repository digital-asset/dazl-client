// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v0/synchronization.proto

package v0

import (
	v0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignedProtocolMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Signature *v0.Signature          `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Types that are valid to be assigned to SomeSignedProtocolMessage:
	//
	//	*SignedProtocolMessage_MediatorResponse
	//	*SignedProtocolMessage_TransactionResult
	//	*SignedProtocolMessage_MalformedMediatorRequestResult
	//	*SignedProtocolMessage_TransferResult
	//	*SignedProtocolMessage_AcsCommitment
	SomeSignedProtocolMessage isSignedProtocolMessage_SomeSignedProtocolMessage `protobuf_oneof:"some_signed_protocol_message"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *SignedProtocolMessage) Reset() {
	*x = SignedProtocolMessage{}
	mi := &file_com_digitalasset_canton_protocol_v0_synchronization_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedProtocolMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedProtocolMessage) ProtoMessage() {}

func (x *SignedProtocolMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v0_synchronization_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedProtocolMessage.ProtoReflect.Descriptor instead.
func (*SignedProtocolMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDescGZIP(), []int{0}
}

func (x *SignedProtocolMessage) GetSignature() *v0.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignedProtocolMessage) GetSomeSignedProtocolMessage() isSignedProtocolMessage_SomeSignedProtocolMessage {
	if x != nil {
		return x.SomeSignedProtocolMessage
	}
	return nil
}

func (x *SignedProtocolMessage) GetMediatorResponse() []byte {
	if x != nil {
		if x, ok := x.SomeSignedProtocolMessage.(*SignedProtocolMessage_MediatorResponse); ok {
			return x.MediatorResponse
		}
	}
	return nil
}

func (x *SignedProtocolMessage) GetTransactionResult() []byte {
	if x != nil {
		if x, ok := x.SomeSignedProtocolMessage.(*SignedProtocolMessage_TransactionResult); ok {
			return x.TransactionResult
		}
	}
	return nil
}

func (x *SignedProtocolMessage) GetMalformedMediatorRequestResult() []byte {
	if x != nil {
		if x, ok := x.SomeSignedProtocolMessage.(*SignedProtocolMessage_MalformedMediatorRequestResult); ok {
			return x.MalformedMediatorRequestResult
		}
	}
	return nil
}

func (x *SignedProtocolMessage) GetTransferResult() []byte {
	if x != nil {
		if x, ok := x.SomeSignedProtocolMessage.(*SignedProtocolMessage_TransferResult); ok {
			return x.TransferResult
		}
	}
	return nil
}

func (x *SignedProtocolMessage) GetAcsCommitment() []byte {
	if x != nil {
		if x, ok := x.SomeSignedProtocolMessage.(*SignedProtocolMessage_AcsCommitment); ok {
			return x.AcsCommitment
		}
	}
	return nil
}

type isSignedProtocolMessage_SomeSignedProtocolMessage interface {
	isSignedProtocolMessage_SomeSignedProtocolMessage()
}

type SignedProtocolMessage_MediatorResponse struct {
	MediatorResponse []byte `protobuf:"bytes,2,opt,name=mediator_response,json=mediatorResponse,proto3,oneof"`
}

type SignedProtocolMessage_TransactionResult struct {
	TransactionResult []byte `protobuf:"bytes,3,opt,name=transaction_result,json=transactionResult,proto3,oneof"`
}

type SignedProtocolMessage_MalformedMediatorRequestResult struct {
	MalformedMediatorRequestResult []byte `protobuf:"bytes,4,opt,name=malformed_mediator_request_result,json=malformedMediatorRequestResult,proto3,oneof"`
}

type SignedProtocolMessage_TransferResult struct {
	TransferResult []byte `protobuf:"bytes,5,opt,name=transfer_result,json=transferResult,proto3,oneof"`
}

type SignedProtocolMessage_AcsCommitment struct {
	AcsCommitment []byte `protobuf:"bytes,6,opt,name=acs_commitment,json=acsCommitment,proto3,oneof"`
}

func (*SignedProtocolMessage_MediatorResponse) isSignedProtocolMessage_SomeSignedProtocolMessage() {}

func (*SignedProtocolMessage_TransactionResult) isSignedProtocolMessage_SomeSignedProtocolMessage() {}

func (*SignedProtocolMessage_MalformedMediatorRequestResult) isSignedProtocolMessage_SomeSignedProtocolMessage() {
}

func (*SignedProtocolMessage_TransferResult) isSignedProtocolMessage_SomeSignedProtocolMessage() {}

func (*SignedProtocolMessage_AcsCommitment) isSignedProtocolMessage_SomeSignedProtocolMessage() {}

type EnvelopeContent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to SomeEnvelopeContent:
	//
	//	*EnvelopeContent_InformeeMessage
	//	*EnvelopeContent_SignedMessage
	//	*EnvelopeContent_EncryptedViewMessage
	//	*EnvelopeContent_DomainTopologyTransactionMessage
	//	*EnvelopeContent_TransferOutMediatorMessage
	//	*EnvelopeContent_TransferInMediatorMessage
	//	*EnvelopeContent_RootHashMessage
	//	*EnvelopeContent_RegisterTopologyTransactionRequest
	//	*EnvelopeContent_RegisterTopologyTransactionResponse
	//	*EnvelopeContent_CausalityMessage
	SomeEnvelopeContent isEnvelopeContent_SomeEnvelopeContent `protobuf_oneof:"some_envelope_content"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EnvelopeContent) Reset() {
	*x = EnvelopeContent{}
	mi := &file_com_digitalasset_canton_protocol_v0_synchronization_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvelopeContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvelopeContent) ProtoMessage() {}

func (x *EnvelopeContent) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v0_synchronization_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvelopeContent.ProtoReflect.Descriptor instead.
func (*EnvelopeContent) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDescGZIP(), []int{1}
}

func (x *EnvelopeContent) GetSomeEnvelopeContent() isEnvelopeContent_SomeEnvelopeContent {
	if x != nil {
		return x.SomeEnvelopeContent
	}
	return nil
}

func (x *EnvelopeContent) GetInformeeMessage() *InformeeMessage {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_InformeeMessage); ok {
			return x.InformeeMessage
		}
	}
	return nil
}

func (x *EnvelopeContent) GetSignedMessage() *SignedProtocolMessage {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_SignedMessage); ok {
			return x.SignedMessage
		}
	}
	return nil
}

func (x *EnvelopeContent) GetEncryptedViewMessage() *EncryptedViewMessage {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_EncryptedViewMessage); ok {
			return x.EncryptedViewMessage
		}
	}
	return nil
}

func (x *EnvelopeContent) GetDomainTopologyTransactionMessage() *DomainTopologyTransactionMessage {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_DomainTopologyTransactionMessage); ok {
			return x.DomainTopologyTransactionMessage
		}
	}
	return nil
}

func (x *EnvelopeContent) GetTransferOutMediatorMessage() *TransferOutMediatorMessage {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_TransferOutMediatorMessage); ok {
			return x.TransferOutMediatorMessage
		}
	}
	return nil
}

func (x *EnvelopeContent) GetTransferInMediatorMessage() *TransferInMediatorMessage {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_TransferInMediatorMessage); ok {
			return x.TransferInMediatorMessage
		}
	}
	return nil
}

func (x *EnvelopeContent) GetRootHashMessage() *RootHashMessage {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_RootHashMessage); ok {
			return x.RootHashMessage
		}
	}
	return nil
}

func (x *EnvelopeContent) GetRegisterTopologyTransactionRequest() *RegisterTopologyTransactionRequest {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_RegisterTopologyTransactionRequest); ok {
			return x.RegisterTopologyTransactionRequest
		}
	}
	return nil
}

func (x *EnvelopeContent) GetRegisterTopologyTransactionResponse() *RegisterTopologyTransactionResponse {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_RegisterTopologyTransactionResponse); ok {
			return x.RegisterTopologyTransactionResponse
		}
	}
	return nil
}

func (x *EnvelopeContent) GetCausalityMessage() *CausalityMessage {
	if x != nil {
		if x, ok := x.SomeEnvelopeContent.(*EnvelopeContent_CausalityMessage); ok {
			return x.CausalityMessage
		}
	}
	return nil
}

type isEnvelopeContent_SomeEnvelopeContent interface {
	isEnvelopeContent_SomeEnvelopeContent()
}

type EnvelopeContent_InformeeMessage struct {
	InformeeMessage *InformeeMessage `protobuf:"bytes,1,opt,name=informee_message,json=informeeMessage,proto3,oneof"`
}

type EnvelopeContent_SignedMessage struct {
	SignedMessage *SignedProtocolMessage `protobuf:"bytes,2,opt,name=signed_message,json=signedMessage,proto3,oneof"`
}

type EnvelopeContent_EncryptedViewMessage struct {
	EncryptedViewMessage *EncryptedViewMessage `protobuf:"bytes,3,opt,name=encrypted_view_message,json=encryptedViewMessage,proto3,oneof"`
}

type EnvelopeContent_DomainTopologyTransactionMessage struct {
	DomainTopologyTransactionMessage *DomainTopologyTransactionMessage `protobuf:"bytes,5,opt,name=domain_topology_transaction_message,json=domainTopologyTransactionMessage,proto3,oneof"`
}

type EnvelopeContent_TransferOutMediatorMessage struct {
	TransferOutMediatorMessage *TransferOutMediatorMessage `protobuf:"bytes,6,opt,name=transfer_out_mediator_message,json=transferOutMediatorMessage,proto3,oneof"`
}

type EnvelopeContent_TransferInMediatorMessage struct {
	TransferInMediatorMessage *TransferInMediatorMessage `protobuf:"bytes,7,opt,name=transfer_in_mediator_message,json=transferInMediatorMessage,proto3,oneof"`
}

type EnvelopeContent_RootHashMessage struct {
	RootHashMessage *RootHashMessage `protobuf:"bytes,8,opt,name=root_hash_message,json=rootHashMessage,proto3,oneof"`
}

type EnvelopeContent_RegisterTopologyTransactionRequest struct {
	RegisterTopologyTransactionRequest *RegisterTopologyTransactionRequest `protobuf:"bytes,9,opt,name=register_topology_transaction_request,json=registerTopologyTransactionRequest,proto3,oneof"`
}

type EnvelopeContent_RegisterTopologyTransactionResponse struct {
	RegisterTopologyTransactionResponse *RegisterTopologyTransactionResponse `protobuf:"bytes,10,opt,name=register_topology_transaction_response,json=registerTopologyTransactionResponse,proto3,oneof"`
}

type EnvelopeContent_CausalityMessage struct {
	CausalityMessage *CausalityMessage `protobuf:"bytes,11,opt,name=causality_message,json=causalityMessage,proto3,oneof"`
}

func (*EnvelopeContent_InformeeMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_SignedMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_EncryptedViewMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_DomainTopologyTransactionMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_TransferOutMediatorMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_TransferInMediatorMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_RootHashMessage) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_RegisterTopologyTransactionRequest) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_RegisterTopologyTransactionResponse) isEnvelopeContent_SomeEnvelopeContent() {}

func (*EnvelopeContent_CausalityMessage) isEnvelopeContent_SomeEnvelopeContent() {}

var File_com_digitalasset_canton_protocol_v0_synchronization_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDesc = "" +
	"\n" +
	"9com/digitalasset/canton/protocol/v0/synchronization.proto\x12#com.digitalasset.canton.protocol.v0\x1a.com/digitalasset/canton/crypto/v0/crypto.proto\x1a3com/digitalasset/canton/protocol/v0/causality.proto\x1aAcom/digitalasset/canton/protocol/v0/participant_transaction.proto\x1a>com/digitalasset/canton/protocol/v0/participant_transfer.proto\x1a2com/digitalasset/canton/protocol/v0/topology.proto\"\x84\x03\n" +
	"\x15SignedProtocolMessage\x12J\n" +
	"\tsignature\x18\x01 \x01(\v2,.com.digitalasset.canton.crypto.v0.SignatureR\tsignature\x12-\n" +
	"\x11mediator_response\x18\x02 \x01(\fH\x00R\x10mediatorResponse\x12/\n" +
	"\x12transaction_result\x18\x03 \x01(\fH\x00R\x11transactionResult\x12K\n" +
	"!malformed_mediator_request_result\x18\x04 \x01(\fH\x00R\x1emalformedMediatorRequestResult\x12)\n" +
	"\x0ftransfer_result\x18\x05 \x01(\fH\x00R\x0etransferResult\x12'\n" +
	"\x0eacs_commitment\x18\x06 \x01(\fH\x00R\racsCommitmentB\x1e\n" +
	"\x1csome_signed_protocol_message\"\x94\n" +
	"\n" +
	"\x0fEnvelopeContent\x12a\n" +
	"\x10informee_message\x18\x01 \x01(\v24.com.digitalasset.canton.protocol.v0.InformeeMessageH\x00R\x0finformeeMessage\x12c\n" +
	"\x0esigned_message\x18\x02 \x01(\v2:.com.digitalasset.canton.protocol.v0.SignedProtocolMessageH\x00R\rsignedMessage\x12q\n" +
	"\x16encrypted_view_message\x18\x03 \x01(\v29.com.digitalasset.canton.protocol.v0.EncryptedViewMessageH\x00R\x14encryptedViewMessage\x12\x96\x01\n" +
	"#domain_topology_transaction_message\x18\x05 \x01(\v2E.com.digitalasset.canton.protocol.v0.DomainTopologyTransactionMessageH\x00R domainTopologyTransactionMessage\x12\x84\x01\n" +
	"\x1dtransfer_out_mediator_message\x18\x06 \x01(\v2?.com.digitalasset.canton.protocol.v0.TransferOutMediatorMessageH\x00R\x1atransferOutMediatorMessage\x12\x81\x01\n" +
	"\x1ctransfer_in_mediator_message\x18\a \x01(\v2>.com.digitalasset.canton.protocol.v0.TransferInMediatorMessageH\x00R\x19transferInMediatorMessage\x12b\n" +
	"\x11root_hash_message\x18\b \x01(\v24.com.digitalasset.canton.protocol.v0.RootHashMessageH\x00R\x0frootHashMessage\x12\x9c\x01\n" +
	"%register_topology_transaction_request\x18\t \x01(\v2G.com.digitalasset.canton.protocol.v0.RegisterTopologyTransactionRequestH\x00R\"registerTopologyTransactionRequest\x12\x9f\x01\n" +
	"&register_topology_transaction_response\x18\n" +
	" \x01(\v2H.com.digitalasset.canton.protocol.v0.RegisterTopologyTransactionResponseH\x00R#registerTopologyTransactionResponse\x12d\n" +
	"\x11causality_message\x18\v \x01(\v25.com.digitalasset.canton.protocol.v0.CausalityMessageH\x00R\x10causalityMessageB\x17\n" +
	"\x15some_envelope_contentBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v0_synchronization_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_com_digitalasset_canton_protocol_v0_synchronization_proto_goTypes = []any{
	(*SignedProtocolMessage)(nil),               // 0: com.digitalasset.canton.protocol.v0.SignedProtocolMessage
	(*EnvelopeContent)(nil),                     // 1: com.digitalasset.canton.protocol.v0.EnvelopeContent
	(*v0.Signature)(nil),                        // 2: com.digitalasset.canton.crypto.v0.Signature
	(*InformeeMessage)(nil),                     // 3: com.digitalasset.canton.protocol.v0.InformeeMessage
	(*EncryptedViewMessage)(nil),                // 4: com.digitalasset.canton.protocol.v0.EncryptedViewMessage
	(*DomainTopologyTransactionMessage)(nil),    // 5: com.digitalasset.canton.protocol.v0.DomainTopologyTransactionMessage
	(*TransferOutMediatorMessage)(nil),          // 6: com.digitalasset.canton.protocol.v0.TransferOutMediatorMessage
	(*TransferInMediatorMessage)(nil),           // 7: com.digitalasset.canton.protocol.v0.TransferInMediatorMessage
	(*RootHashMessage)(nil),                     // 8: com.digitalasset.canton.protocol.v0.RootHashMessage
	(*RegisterTopologyTransactionRequest)(nil),  // 9: com.digitalasset.canton.protocol.v0.RegisterTopologyTransactionRequest
	(*RegisterTopologyTransactionResponse)(nil), // 10: com.digitalasset.canton.protocol.v0.RegisterTopologyTransactionResponse
	(*CausalityMessage)(nil),                    // 11: com.digitalasset.canton.protocol.v0.CausalityMessage
}
var file_com_digitalasset_canton_protocol_v0_synchronization_proto_depIdxs = []int32{
	2,  // 0: com.digitalasset.canton.protocol.v0.SignedProtocolMessage.signature:type_name -> com.digitalasset.canton.crypto.v0.Signature
	3,  // 1: com.digitalasset.canton.protocol.v0.EnvelopeContent.informee_message:type_name -> com.digitalasset.canton.protocol.v0.InformeeMessage
	0,  // 2: com.digitalasset.canton.protocol.v0.EnvelopeContent.signed_message:type_name -> com.digitalasset.canton.protocol.v0.SignedProtocolMessage
	4,  // 3: com.digitalasset.canton.protocol.v0.EnvelopeContent.encrypted_view_message:type_name -> com.digitalasset.canton.protocol.v0.EncryptedViewMessage
	5,  // 4: com.digitalasset.canton.protocol.v0.EnvelopeContent.domain_topology_transaction_message:type_name -> com.digitalasset.canton.protocol.v0.DomainTopologyTransactionMessage
	6,  // 5: com.digitalasset.canton.protocol.v0.EnvelopeContent.transfer_out_mediator_message:type_name -> com.digitalasset.canton.protocol.v0.TransferOutMediatorMessage
	7,  // 6: com.digitalasset.canton.protocol.v0.EnvelopeContent.transfer_in_mediator_message:type_name -> com.digitalasset.canton.protocol.v0.TransferInMediatorMessage
	8,  // 7: com.digitalasset.canton.protocol.v0.EnvelopeContent.root_hash_message:type_name -> com.digitalasset.canton.protocol.v0.RootHashMessage
	9,  // 8: com.digitalasset.canton.protocol.v0.EnvelopeContent.register_topology_transaction_request:type_name -> com.digitalasset.canton.protocol.v0.RegisterTopologyTransactionRequest
	10, // 9: com.digitalasset.canton.protocol.v0.EnvelopeContent.register_topology_transaction_response:type_name -> com.digitalasset.canton.protocol.v0.RegisterTopologyTransactionResponse
	11, // 10: com.digitalasset.canton.protocol.v0.EnvelopeContent.causality_message:type_name -> com.digitalasset.canton.protocol.v0.CausalityMessage
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v0_synchronization_proto_init() }
func file_com_digitalasset_canton_protocol_v0_synchronization_proto_init() {
	if File_com_digitalasset_canton_protocol_v0_synchronization_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v0_causality_proto_init()
	file_com_digitalasset_canton_protocol_v0_participant_transaction_proto_init()
	file_com_digitalasset_canton_protocol_v0_participant_transfer_proto_init()
	file_com_digitalasset_canton_protocol_v0_topology_proto_init()
	file_com_digitalasset_canton_protocol_v0_synchronization_proto_msgTypes[0].OneofWrappers = []any{
		(*SignedProtocolMessage_MediatorResponse)(nil),
		(*SignedProtocolMessage_TransactionResult)(nil),
		(*SignedProtocolMessage_MalformedMediatorRequestResult)(nil),
		(*SignedProtocolMessage_TransferResult)(nil),
		(*SignedProtocolMessage_AcsCommitment)(nil),
	}
	file_com_digitalasset_canton_protocol_v0_synchronization_proto_msgTypes[1].OneofWrappers = []any{
		(*EnvelopeContent_InformeeMessage)(nil),
		(*EnvelopeContent_SignedMessage)(nil),
		(*EnvelopeContent_EncryptedViewMessage)(nil),
		(*EnvelopeContent_DomainTopologyTransactionMessage)(nil),
		(*EnvelopeContent_TransferOutMediatorMessage)(nil),
		(*EnvelopeContent_TransferInMediatorMessage)(nil),
		(*EnvelopeContent_RootHashMessage)(nil),
		(*EnvelopeContent_RegisterTopologyTransactionRequest)(nil),
		(*EnvelopeContent_RegisterTopologyTransactionResponse)(nil),
		(*EnvelopeContent_CausalityMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v0_synchronization_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v0_synchronization_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v0_synchronization_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v0_synchronization_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v0_synchronization_proto = out.File
	file_com_digitalasset_canton_protocol_v0_synchronization_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v0_synchronization_proto_depIdxs = nil
}
