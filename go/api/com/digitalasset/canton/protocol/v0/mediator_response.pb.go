// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v0/mediator_response.proto

package v0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LocalReject_Code int32

const (
	LocalReject_MissingCode                 LocalReject_Code = 0
	LocalReject_LockedContracts             LocalReject_Code = 1
	LocalReject_LockedKeys                  LocalReject_Code = 2
	LocalReject_InactiveContracts           LocalReject_Code = 3
	LocalReject_DuplicateKey                LocalReject_Code = 4
	LocalReject_CreatesExistingContract     LocalReject_Code = 5
	LocalReject_LedgerTime                  LocalReject_Code = 6
	LocalReject_SubmissionTime              LocalReject_Code = 7
	LocalReject_LocalTimeout                LocalReject_Code = 8
	LocalReject_MalformedPayloads           LocalReject_Code = 9
	LocalReject_MalformedModel              LocalReject_Code = 10
	LocalReject_MalformedConfirmationPolicy LocalReject_Code = 11
	LocalReject_BadRootHashMessage          LocalReject_Code = 12
	LocalReject_TransferOutActivenessCheck  LocalReject_Code = 13
	LocalReject_TransferInAlreadyCompleted  LocalReject_Code = 14
	LocalReject_TransferInAlreadyActive     LocalReject_Code = 15
	LocalReject_TransferInAlreadyArchived   LocalReject_Code = 16
	LocalReject_TransferInLocked            LocalReject_Code = 17
	LocalReject_InconsistentKey             LocalReject_Code = 18
)

// Enum value maps for LocalReject_Code.
var (
	LocalReject_Code_name = map[int32]string{
		0:  "MissingCode",
		1:  "LockedContracts",
		2:  "LockedKeys",
		3:  "InactiveContracts",
		4:  "DuplicateKey",
		5:  "CreatesExistingContract",
		6:  "LedgerTime",
		7:  "SubmissionTime",
		8:  "LocalTimeout",
		9:  "MalformedPayloads",
		10: "MalformedModel",
		11: "MalformedConfirmationPolicy",
		12: "BadRootHashMessage",
		13: "TransferOutActivenessCheck",
		14: "TransferInAlreadyCompleted",
		15: "TransferInAlreadyActive",
		16: "TransferInAlreadyArchived",
		17: "TransferInLocked",
		18: "InconsistentKey",
	}
	LocalReject_Code_value = map[string]int32{
		"MissingCode":                 0,
		"LockedContracts":             1,
		"LockedKeys":                  2,
		"InactiveContracts":           3,
		"DuplicateKey":                4,
		"CreatesExistingContract":     5,
		"LedgerTime":                  6,
		"SubmissionTime":              7,
		"LocalTimeout":                8,
		"MalformedPayloads":           9,
		"MalformedModel":              10,
		"MalformedConfirmationPolicy": 11,
		"BadRootHashMessage":          12,
		"TransferOutActivenessCheck":  13,
		"TransferInAlreadyCompleted":  14,
		"TransferInAlreadyActive":     15,
		"TransferInAlreadyArchived":   16,
		"TransferInLocked":            17,
		"InconsistentKey":             18,
	}
)

func (x LocalReject_Code) Enum() *LocalReject_Code {
	p := new(LocalReject_Code)
	*p = x
	return p
}

func (x LocalReject_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocalReject_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_com_digitalasset_canton_protocol_v0_mediator_response_proto_enumTypes[0].Descriptor()
}

func (LocalReject_Code) Type() protoreflect.EnumType {
	return &file_com_digitalasset_canton_protocol_v0_mediator_response_proto_enumTypes[0]
}

func (x LocalReject_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocalReject_Code.Descriptor instead.
func (LocalReject_Code) EnumDescriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescGZIP(), []int{2, 0}
}

type MediatorResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RequestId         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Sender            string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	ViewHash          []byte                 `protobuf:"bytes,3,opt,name=view_hash,json=viewHash,proto3" json:"view_hash,omitempty"`
	LocalVerdict      *LocalVerdict          `protobuf:"bytes,4,opt,name=local_verdict,json=localVerdict,proto3" json:"local_verdict,omitempty"`
	RootHash          []byte                 `protobuf:"bytes,5,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	ConfirmingParties []string               `protobuf:"bytes,6,rep,name=confirming_parties,json=confirmingParties,proto3" json:"confirming_parties,omitempty"`
	DomainId          string                 `protobuf:"bytes,7,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MediatorResponse) Reset() {
	*x = MediatorResponse{}
	mi := &file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediatorResponse) ProtoMessage() {}

func (x *MediatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediatorResponse.ProtoReflect.Descriptor instead.
func (*MediatorResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescGZIP(), []int{0}
}

func (x *MediatorResponse) GetRequestId() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *MediatorResponse) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MediatorResponse) GetViewHash() []byte {
	if x != nil {
		return x.ViewHash
	}
	return nil
}

func (x *MediatorResponse) GetLocalVerdict() *LocalVerdict {
	if x != nil {
		return x.LocalVerdict
	}
	return nil
}

func (x *MediatorResponse) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *MediatorResponse) GetConfirmingParties() []string {
	if x != nil {
		return x.ConfirmingParties
	}
	return nil
}

func (x *MediatorResponse) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type LocalVerdict struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to SomeLocalVerdict:
	//
	//	*LocalVerdict_LocalApprove
	//	*LocalVerdict_LocalReject
	SomeLocalVerdict isLocalVerdict_SomeLocalVerdict `protobuf_oneof:"some_local_verdict"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LocalVerdict) Reset() {
	*x = LocalVerdict{}
	mi := &file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalVerdict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalVerdict) ProtoMessage() {}

func (x *LocalVerdict) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalVerdict.ProtoReflect.Descriptor instead.
func (*LocalVerdict) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescGZIP(), []int{1}
}

func (x *LocalVerdict) GetSomeLocalVerdict() isLocalVerdict_SomeLocalVerdict {
	if x != nil {
		return x.SomeLocalVerdict
	}
	return nil
}

func (x *LocalVerdict) GetLocalApprove() *emptypb.Empty {
	if x != nil {
		if x, ok := x.SomeLocalVerdict.(*LocalVerdict_LocalApprove); ok {
			return x.LocalApprove
		}
	}
	return nil
}

func (x *LocalVerdict) GetLocalReject() *LocalReject {
	if x != nil {
		if x, ok := x.SomeLocalVerdict.(*LocalVerdict_LocalReject); ok {
			return x.LocalReject
		}
	}
	return nil
}

type isLocalVerdict_SomeLocalVerdict interface {
	isLocalVerdict_SomeLocalVerdict()
}

type LocalVerdict_LocalApprove struct {
	LocalApprove *emptypb.Empty `protobuf:"bytes,1,opt,name=local_approve,json=localApprove,proto3,oneof"`
}

type LocalVerdict_LocalReject struct {
	LocalReject *LocalReject `protobuf:"bytes,2,opt,name=local_reject,json=localReject,proto3,oneof"`
}

func (*LocalVerdict_LocalApprove) isLocalVerdict_SomeLocalVerdict() {}

func (*LocalVerdict_LocalReject) isLocalVerdict_SomeLocalVerdict() {}

type LocalReject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          LocalReject_Code       `protobuf:"varint,1,opt,name=code,proto3,enum=com.digitalasset.canton.protocol.v0.LocalReject_Code" json:"code,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Resource      []string               `protobuf:"bytes,3,rep,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalReject) Reset() {
	*x = LocalReject{}
	mi := &file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalReject) ProtoMessage() {}

func (x *LocalReject) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalReject.ProtoReflect.Descriptor instead.
func (*LocalReject) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescGZIP(), []int{2}
}

func (x *LocalReject) GetCode() LocalReject_Code {
	if x != nil {
		return x.Code
	}
	return LocalReject_MissingCode
}

func (x *LocalReject) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *LocalReject) GetResource() []string {
	if x != nil {
		return x.Resource
	}
	return nil
}

var File_com_digitalasset_canton_protocol_v0_mediator_response_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDesc = "" +
	"\n" +
	";com/digitalasset/canton/protocol/v0/mediator_response.proto\x12#com.digitalasset.canton.protocol.v0\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc3\x02\n" +
	"\x10MediatorResponse\x129\n" +
	"\n" +
	"request_id\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\trequestId\x12\x16\n" +
	"\x06sender\x18\x02 \x01(\tR\x06sender\x12\x1b\n" +
	"\tview_hash\x18\x03 \x01(\fR\bviewHash\x12V\n" +
	"\rlocal_verdict\x18\x04 \x01(\v21.com.digitalasset.canton.protocol.v0.LocalVerdictR\flocalVerdict\x12\x1b\n" +
	"\troot_hash\x18\x05 \x01(\fR\brootHash\x12-\n" +
	"\x12confirming_parties\x18\x06 \x03(\tR\x11confirmingParties\x12\x1b\n" +
	"\tdomain_id\x18\a \x01(\tR\bdomainId\"\xba\x01\n" +
	"\fLocalVerdict\x12=\n" +
	"\rlocal_approve\x18\x01 \x01(\v2\x16.google.protobuf.EmptyH\x00R\flocalApprove\x12U\n" +
	"\flocal_reject\x18\x02 \x01(\v20.com.digitalasset.canton.protocol.v0.LocalRejectH\x00R\vlocalRejectB\x14\n" +
	"\x12some_local_verdict\"\xd2\x04\n" +
	"\vLocalReject\x12I\n" +
	"\x04code\x18\x01 \x01(\x0e25.com.digitalasset.canton.protocol.v0.LocalReject.CodeR\x04code\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x1a\n" +
	"\bresource\x18\x03 \x03(\tR\bresource\"\xc3\x03\n" +
	"\x04Code\x12\x0f\n" +
	"\vMissingCode\x10\x00\x12\x13\n" +
	"\x0fLockedContracts\x10\x01\x12\x0e\n" +
	"\n" +
	"LockedKeys\x10\x02\x12\x15\n" +
	"\x11InactiveContracts\x10\x03\x12\x10\n" +
	"\fDuplicateKey\x10\x04\x12\x1b\n" +
	"\x17CreatesExistingContract\x10\x05\x12\x0e\n" +
	"\n" +
	"LedgerTime\x10\x06\x12\x12\n" +
	"\x0eSubmissionTime\x10\a\x12\x10\n" +
	"\fLocalTimeout\x10\b\x12\x15\n" +
	"\x11MalformedPayloads\x10\t\x12\x12\n" +
	"\x0eMalformedModel\x10\n" +
	"\x12\x1f\n" +
	"\x1bMalformedConfirmationPolicy\x10\v\x12\x16\n" +
	"\x12BadRootHashMessage\x10\f\x12\x1e\n" +
	"\x1aTransferOutActivenessCheck\x10\r\x12\x1e\n" +
	"\x1aTransferInAlreadyCompleted\x10\x0e\x12\x1b\n" +
	"\x17TransferInAlreadyActive\x10\x0f\x12\x1d\n" +
	"\x19TransferInAlreadyArchived\x10\x10\x12\x14\n" +
	"\x10TransferInLocked\x10\x11\x12\x13\n" +
	"\x0fInconsistentKey\x10\x12BTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v0_mediator_response_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_digitalasset_canton_protocol_v0_mediator_response_proto_goTypes = []any{
	(LocalReject_Code)(0),         // 0: com.digitalasset.canton.protocol.v0.LocalReject.Code
	(*MediatorResponse)(nil),      // 1: com.digitalasset.canton.protocol.v0.MediatorResponse
	(*LocalVerdict)(nil),          // 2: com.digitalasset.canton.protocol.v0.LocalVerdict
	(*LocalReject)(nil),           // 3: com.digitalasset.canton.protocol.v0.LocalReject
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_com_digitalasset_canton_protocol_v0_mediator_response_proto_depIdxs = []int32{
	4, // 0: com.digitalasset.canton.protocol.v0.MediatorResponse.request_id:type_name -> google.protobuf.Timestamp
	2, // 1: com.digitalasset.canton.protocol.v0.MediatorResponse.local_verdict:type_name -> com.digitalasset.canton.protocol.v0.LocalVerdict
	5, // 2: com.digitalasset.canton.protocol.v0.LocalVerdict.local_approve:type_name -> google.protobuf.Empty
	3, // 3: com.digitalasset.canton.protocol.v0.LocalVerdict.local_reject:type_name -> com.digitalasset.canton.protocol.v0.LocalReject
	0, // 4: com.digitalasset.canton.protocol.v0.LocalReject.code:type_name -> com.digitalasset.canton.protocol.v0.LocalReject.Code
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v0_mediator_response_proto_init() }
func file_com_digitalasset_canton_protocol_v0_mediator_response_proto_init() {
	if File_com_digitalasset_canton_protocol_v0_mediator_response_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes[1].OneofWrappers = []any{
		(*LocalVerdict_LocalApprove)(nil),
		(*LocalVerdict_LocalReject)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v0_mediator_response_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v0_mediator_response_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v0_mediator_response_proto_depIdxs,
		EnumInfos:         file_com_digitalasset_canton_protocol_v0_mediator_response_proto_enumTypes,
		MessageInfos:      file_com_digitalasset_canton_protocol_v0_mediator_response_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v0_mediator_response_proto = out.File
	file_com_digitalasset_canton_protocol_v0_mediator_response_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v0_mediator_response_proto_depIdxs = nil
}
