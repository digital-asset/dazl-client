// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v0/acs_commitments.proto

package v0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AcsCommitment struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DomainId           string                 `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	SendingParticipant string                 `protobuf:"bytes,2,opt,name=sending_participant,json=sendingParticipant,proto3" json:"sending_participant,omitempty"`
	CounterParticipant string                 `protobuf:"bytes,3,opt,name=counter_participant,json=counterParticipant,proto3" json:"counter_participant,omitempty"`
	FromExclusive      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from_exclusive,json=fromExclusive,proto3" json:"from_exclusive,omitempty"`
	ToInclusive        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to_inclusive,json=toInclusive,proto3" json:"to_inclusive,omitempty"`
	Commitment         []byte                 `protobuf:"bytes,6,opt,name=commitment,proto3" json:"commitment,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AcsCommitment) Reset() {
	*x = AcsCommitment{}
	mi := &file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcsCommitment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcsCommitment) ProtoMessage() {}

func (x *AcsCommitment) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcsCommitment.ProtoReflect.Descriptor instead.
func (*AcsCommitment) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDescGZIP(), []int{0}
}

func (x *AcsCommitment) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *AcsCommitment) GetSendingParticipant() string {
	if x != nil {
		return x.SendingParticipant
	}
	return ""
}

func (x *AcsCommitment) GetCounterParticipant() string {
	if x != nil {
		return x.CounterParticipant
	}
	return ""
}

func (x *AcsCommitment) GetFromExclusive() *timestamppb.Timestamp {
	if x != nil {
		return x.FromExclusive
	}
	return nil
}

func (x *AcsCommitment) GetToInclusive() *timestamppb.Timestamp {
	if x != nil {
		return x.ToInclusive
	}
	return nil
}

func (x *AcsCommitment) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

var File_com_digitalasset_canton_protocol_v0_acs_commitments_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDesc = "" +
	"\n" +
	"9com/digitalasset/canton/protocol/v0/acs_commitments.proto\x12#com.digitalasset.canton.protocol.v0\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb0\x02\n" +
	"\rAcsCommitment\x12\x1b\n" +
	"\tdomain_id\x18\x01 \x01(\tR\bdomainId\x12/\n" +
	"\x13sending_participant\x18\x02 \x01(\tR\x12sendingParticipant\x12/\n" +
	"\x13counter_participant\x18\x03 \x01(\tR\x12counterParticipant\x12A\n" +
	"\x0efrom_exclusive\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\rfromExclusive\x12=\n" +
	"\fto_inclusive\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vtoInclusive\x12\x1e\n" +
	"\n" +
	"commitment\x18\x06 \x01(\fR\n" +
	"commitmentBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_goTypes = []any{
	(*AcsCommitment)(nil),         // 0: com.digitalasset.canton.protocol.v0.AcsCommitment
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_depIdxs = []int32{
	1, // 0: com.digitalasset.canton.protocol.v0.AcsCommitment.from_exclusive:type_name -> google.protobuf.Timestamp
	1, // 1: com.digitalasset.canton.protocol.v0.AcsCommitment.to_inclusive:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_init() }
func file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_init() {
	if File_com_digitalasset_canton_protocol_v0_acs_commitments_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v0_acs_commitments_proto = out.File
	file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v0_acs_commitments_proto_depIdxs = nil
}
