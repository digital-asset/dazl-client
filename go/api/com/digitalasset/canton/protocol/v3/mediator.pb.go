// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v3/mediator.proto

package v3

import (
	v2 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Verdict struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to SomeVerdict:
	//
	//	*Verdict_Approve
	//	*Verdict_ParticipantReject
	//	*Verdict_MediatorReject
	SomeVerdict   isVerdict_SomeVerdict `protobuf_oneof:"some_verdict"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Verdict) Reset() {
	*x = Verdict{}
	mi := &file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Verdict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verdict) ProtoMessage() {}

func (x *Verdict) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verdict.ProtoReflect.Descriptor instead.
func (*Verdict) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescGZIP(), []int{0}
}

func (x *Verdict) GetSomeVerdict() isVerdict_SomeVerdict {
	if x != nil {
		return x.SomeVerdict
	}
	return nil
}

func (x *Verdict) GetApprove() *emptypb.Empty {
	if x != nil {
		if x, ok := x.SomeVerdict.(*Verdict_Approve); ok {
			return x.Approve
		}
	}
	return nil
}

func (x *Verdict) GetParticipantReject() *v2.ParticipantReject {
	if x != nil {
		if x, ok := x.SomeVerdict.(*Verdict_ParticipantReject); ok {
			return x.ParticipantReject
		}
	}
	return nil
}

func (x *Verdict) GetMediatorReject() *v2.MediatorReject {
	if x != nil {
		if x, ok := x.SomeVerdict.(*Verdict_MediatorReject); ok {
			return x.MediatorReject
		}
	}
	return nil
}

type isVerdict_SomeVerdict interface {
	isVerdict_SomeVerdict()
}

type Verdict_Approve struct {
	Approve *emptypb.Empty `protobuf:"bytes,1,opt,name=approve,proto3,oneof"`
}

type Verdict_ParticipantReject struct {
	ParticipantReject *v2.ParticipantReject `protobuf:"bytes,2,opt,name=participant_reject,json=participantReject,proto3,oneof"`
}

type Verdict_MediatorReject struct {
	MediatorReject *v2.MediatorReject `protobuf:"bytes,3,opt,name=mediator_reject,json=mediatorReject,proto3,oneof"`
}

func (*Verdict_Approve) isVerdict_SomeVerdict() {}

func (*Verdict_ParticipantReject) isVerdict_SomeVerdict() {}

func (*Verdict_MediatorReject) isVerdict_SomeVerdict() {}

type TransactionResultMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Verdict       *Verdict               `protobuf:"bytes,2,opt,name=verdict,proto3" json:"verdict,omitempty"`
	RootHash      []byte                 `protobuf:"bytes,3,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	DomainId      string                 `protobuf:"bytes,4,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionResultMessage) Reset() {
	*x = TransactionResultMessage{}
	mi := &file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionResultMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResultMessage) ProtoMessage() {}

func (x *TransactionResultMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResultMessage.ProtoReflect.Descriptor instead.
func (*TransactionResultMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionResultMessage) GetRequestId() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *TransactionResultMessage) GetVerdict() *Verdict {
	if x != nil {
		return x.Verdict
	}
	return nil
}

func (x *TransactionResultMessage) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *TransactionResultMessage) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type TransferResult struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Domain:
	//
	//	*TransferResult_SourceDomain
	//	*TransferResult_TargetDomain
	Domain        isTransferResult_Domain `protobuf_oneof:"domain"`
	Informees     []string                `protobuf:"bytes,4,rep,name=informees,proto3" json:"informees,omitempty"`
	Verdict       *Verdict                `protobuf:"bytes,5,opt,name=verdict,proto3" json:"verdict,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferResult) Reset() {
	*x = TransferResult{}
	mi := &file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResult) ProtoMessage() {}

func (x *TransferResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResult.ProtoReflect.Descriptor instead.
func (*TransferResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescGZIP(), []int{2}
}

func (x *TransferResult) GetRequestId() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *TransferResult) GetDomain() isTransferResult_Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *TransferResult) GetSourceDomain() string {
	if x != nil {
		if x, ok := x.Domain.(*TransferResult_SourceDomain); ok {
			return x.SourceDomain
		}
	}
	return ""
}

func (x *TransferResult) GetTargetDomain() string {
	if x != nil {
		if x, ok := x.Domain.(*TransferResult_TargetDomain); ok {
			return x.TargetDomain
		}
	}
	return ""
}

func (x *TransferResult) GetInformees() []string {
	if x != nil {
		return x.Informees
	}
	return nil
}

func (x *TransferResult) GetVerdict() *Verdict {
	if x != nil {
		return x.Verdict
	}
	return nil
}

type isTransferResult_Domain interface {
	isTransferResult_Domain()
}

type TransferResult_SourceDomain struct {
	SourceDomain string `protobuf:"bytes,2,opt,name=source_domain,json=sourceDomain,proto3,oneof"`
}

type TransferResult_TargetDomain struct {
	TargetDomain string `protobuf:"bytes,3,opt,name=target_domain,json=targetDomain,proto3,oneof"`
}

func (*TransferResult_SourceDomain) isTransferResult_Domain() {}

func (*TransferResult_TargetDomain) isTransferResult_Domain() {}

var File_com_digitalasset_canton_protocol_v3_mediator_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDesc = "" +
	"\n" +
	"2com/digitalasset/canton/protocol/v3/mediator.proto\x12#com.digitalasset.canton.protocol.v3\x1a2com/digitalasset/canton/protocol/v2/mediator.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x96\x02\n" +
	"\aVerdict\x122\n" +
	"\aapprove\x18\x01 \x01(\v2\x16.google.protobuf.EmptyH\x00R\aapprove\x12g\n" +
	"\x12participant_reject\x18\x02 \x01(\v26.com.digitalasset.canton.protocol.v2.ParticipantRejectH\x00R\x11participantReject\x12^\n" +
	"\x0fmediator_reject\x18\x03 \x01(\v23.com.digitalasset.canton.protocol.v2.MediatorRejectH\x00R\x0emediatorRejectB\x0e\n" +
	"\fsome_verdict\"\xd7\x01\n" +
	"\x18TransactionResultMessage\x129\n" +
	"\n" +
	"request_id\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\trequestId\x12F\n" +
	"\averdict\x18\x02 \x01(\v2,.com.digitalasset.canton.protocol.v3.VerdictR\averdict\x12\x1b\n" +
	"\troot_hash\x18\x03 \x01(\fR\brootHash\x12\x1b\n" +
	"\tdomain_id\x18\x04 \x01(\tR\bdomainId\"\x89\x02\n" +
	"\x0eTransferResult\x129\n" +
	"\n" +
	"request_id\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\trequestId\x12%\n" +
	"\rsource_domain\x18\x02 \x01(\tH\x00R\fsourceDomain\x12%\n" +
	"\rtarget_domain\x18\x03 \x01(\tH\x00R\ftargetDomain\x12\x1c\n" +
	"\tinformees\x18\x04 \x03(\tR\tinformees\x12F\n" +
	"\averdict\x18\x05 \x01(\v2,.com.digitalasset.canton.protocol.v3.VerdictR\averdictB\b\n" +
	"\x06domainBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v3b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_digitalasset_canton_protocol_v3_mediator_proto_goTypes = []any{
	(*Verdict)(nil),                  // 0: com.digitalasset.canton.protocol.v3.Verdict
	(*TransactionResultMessage)(nil), // 1: com.digitalasset.canton.protocol.v3.TransactionResultMessage
	(*TransferResult)(nil),           // 2: com.digitalasset.canton.protocol.v3.TransferResult
	(*emptypb.Empty)(nil),            // 3: google.protobuf.Empty
	(*v2.ParticipantReject)(nil),     // 4: com.digitalasset.canton.protocol.v2.ParticipantReject
	(*v2.MediatorReject)(nil),        // 5: com.digitalasset.canton.protocol.v2.MediatorReject
	(*timestamppb.Timestamp)(nil),    // 6: google.protobuf.Timestamp
}
var file_com_digitalasset_canton_protocol_v3_mediator_proto_depIdxs = []int32{
	3, // 0: com.digitalasset.canton.protocol.v3.Verdict.approve:type_name -> google.protobuf.Empty
	4, // 1: com.digitalasset.canton.protocol.v3.Verdict.participant_reject:type_name -> com.digitalasset.canton.protocol.v2.ParticipantReject
	5, // 2: com.digitalasset.canton.protocol.v3.Verdict.mediator_reject:type_name -> com.digitalasset.canton.protocol.v2.MediatorReject
	6, // 3: com.digitalasset.canton.protocol.v3.TransactionResultMessage.request_id:type_name -> google.protobuf.Timestamp
	0, // 4: com.digitalasset.canton.protocol.v3.TransactionResultMessage.verdict:type_name -> com.digitalasset.canton.protocol.v3.Verdict
	6, // 5: com.digitalasset.canton.protocol.v3.TransferResult.request_id:type_name -> google.protobuf.Timestamp
	0, // 6: com.digitalasset.canton.protocol.v3.TransferResult.verdict:type_name -> com.digitalasset.canton.protocol.v3.Verdict
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v3_mediator_proto_init() }
func file_com_digitalasset_canton_protocol_v3_mediator_proto_init() {
	if File_com_digitalasset_canton_protocol_v3_mediator_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes[0].OneofWrappers = []any{
		(*Verdict_Approve)(nil),
		(*Verdict_ParticipantReject)(nil),
		(*Verdict_MediatorReject)(nil),
	}
	file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes[2].OneofWrappers = []any{
		(*TransferResult_SourceDomain)(nil),
		(*TransferResult_TargetDomain)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v3_mediator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v3_mediator_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v3_mediator_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v3_mediator_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v3_mediator_proto = out.File
	file_com_digitalasset_canton_protocol_v3_mediator_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v3_mediator_proto_depIdxs = nil
}
