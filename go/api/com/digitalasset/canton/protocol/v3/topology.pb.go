// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v3/topology.proto

package v3

import (
	v2 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopologyTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Transaction:
	//
	//	*TopologyTransaction_StateUpdate
	//	*TopologyTransaction_DomainGovernance
	Transaction   isTopologyTransaction_Transaction `protobuf_oneof:"transaction"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopologyTransaction) Reset() {
	*x = TopologyTransaction{}
	mi := &file_com_digitalasset_canton_protocol_v3_topology_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyTransaction) ProtoMessage() {}

func (x *TopologyTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v3_topology_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyTransaction.ProtoReflect.Descriptor instead.
func (*TopologyTransaction) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v3_topology_proto_rawDescGZIP(), []int{0}
}

func (x *TopologyTransaction) GetTransaction() isTopologyTransaction_Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TopologyTransaction) GetStateUpdate() *v2.TopologyStateUpdate {
	if x != nil {
		if x, ok := x.Transaction.(*TopologyTransaction_StateUpdate); ok {
			return x.StateUpdate
		}
	}
	return nil
}

func (x *TopologyTransaction) GetDomainGovernance() *v2.DomainGovernanceTransaction {
	if x != nil {
		if x, ok := x.Transaction.(*TopologyTransaction_DomainGovernance); ok {
			return x.DomainGovernance
		}
	}
	return nil
}

type isTopologyTransaction_Transaction interface {
	isTopologyTransaction_Transaction()
}

type TopologyTransaction_StateUpdate struct {
	StateUpdate *v2.TopologyStateUpdate `protobuf:"bytes,1,opt,name=state_update,json=stateUpdate,proto3,oneof"`
}

type TopologyTransaction_DomainGovernance struct {
	DomainGovernance *v2.DomainGovernanceTransaction `protobuf:"bytes,2,opt,name=domain_governance,json=domainGovernance,proto3,oneof"`
}

func (*TopologyTransaction_StateUpdate) isTopologyTransaction_Transaction() {}

func (*TopologyTransaction_DomainGovernance) isTopologyTransaction_Transaction() {}

var File_com_digitalasset_canton_protocol_v3_topology_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v3_topology_proto_rawDesc = "" +
	"\n" +
	"2com/digitalasset/canton/protocol/v3/topology.proto\x12#com.digitalasset.canton.protocol.v3\x1a2com/digitalasset/canton/protocol/v2/topology.proto\"\xf4\x01\n" +
	"\x13TopologyTransaction\x12]\n" +
	"\fstate_update\x18\x01 \x01(\v28.com.digitalasset.canton.protocol.v2.TopologyStateUpdateH\x00R\vstateUpdate\x12o\n" +
	"\x11domain_governance\x18\x02 \x01(\v2@.com.digitalasset.canton.protocol.v2.DomainGovernanceTransactionH\x00R\x10domainGovernanceB\r\n" +
	"\vtransactionBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v3b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v3_topology_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v3_topology_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v3_topology_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v3_topology_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v3_topology_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v3_topology_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v3_topology_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v3_topology_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v3_topology_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_com_digitalasset_canton_protocol_v3_topology_proto_goTypes = []any{
	(*TopologyTransaction)(nil),            // 0: com.digitalasset.canton.protocol.v3.TopologyTransaction
	(*v2.TopologyStateUpdate)(nil),         // 1: com.digitalasset.canton.protocol.v2.TopologyStateUpdate
	(*v2.DomainGovernanceTransaction)(nil), // 2: com.digitalasset.canton.protocol.v2.DomainGovernanceTransaction
}
var file_com_digitalasset_canton_protocol_v3_topology_proto_depIdxs = []int32{
	1, // 0: com.digitalasset.canton.protocol.v3.TopologyTransaction.state_update:type_name -> com.digitalasset.canton.protocol.v2.TopologyStateUpdate
	2, // 1: com.digitalasset.canton.protocol.v3.TopologyTransaction.domain_governance:type_name -> com.digitalasset.canton.protocol.v2.DomainGovernanceTransaction
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v3_topology_proto_init() }
func file_com_digitalasset_canton_protocol_v3_topology_proto_init() {
	if File_com_digitalasset_canton_protocol_v3_topology_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v3_topology_proto_msgTypes[0].OneofWrappers = []any{
		(*TopologyTransaction_StateUpdate)(nil),
		(*TopologyTransaction_DomainGovernance)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v3_topology_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v3_topology_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v3_topology_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v3_topology_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v3_topology_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v3_topology_proto = out.File
	file_com_digitalasset_canton_protocol_v3_topology_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v3_topology_proto_depIdxs = nil
}
