// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v1/topology.proto

package v1

import (
	v01 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v0"
	v0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterTopologyTransactionResponse_Result_State int32

const (
	RegisterTopologyTransactionResponse_Result_MISSING_STATE RegisterTopologyTransactionResponse_Result_State = 0
	RegisterTopologyTransactionResponse_Result_FAILED        RegisterTopologyTransactionResponse_Result_State = 2
	RegisterTopologyTransactionResponse_Result_REJECTED      RegisterTopologyTransactionResponse_Result_State = 3
	RegisterTopologyTransactionResponse_Result_ACCEPTED      RegisterTopologyTransactionResponse_Result_State = 4
	RegisterTopologyTransactionResponse_Result_DUPLICATE     RegisterTopologyTransactionResponse_Result_State = 5
	RegisterTopologyTransactionResponse_Result_OBSOLETE      RegisterTopologyTransactionResponse_Result_State = 6
)

// Enum value maps for RegisterTopologyTransactionResponse_Result_State.
var (
	RegisterTopologyTransactionResponse_Result_State_name = map[int32]string{
		0: "MISSING_STATE",
		2: "FAILED",
		3: "REJECTED",
		4: "ACCEPTED",
		5: "DUPLICATE",
		6: "OBSOLETE",
	}
	RegisterTopologyTransactionResponse_Result_State_value = map[string]int32{
		"MISSING_STATE": 0,
		"FAILED":        2,
		"REJECTED":      3,
		"ACCEPTED":      4,
		"DUPLICATE":     5,
		"OBSOLETE":      6,
	}
)

func (x RegisterTopologyTransactionResponse_Result_State) Enum() *RegisterTopologyTransactionResponse_Result_State {
	p := new(RegisterTopologyTransactionResponse_Result_State)
	*p = x
	return p
}

func (x RegisterTopologyTransactionResponse_Result_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterTopologyTransactionResponse_Result_State) Descriptor() protoreflect.EnumDescriptor {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_enumTypes[0].Descriptor()
}

func (RegisterTopologyTransactionResponse_Result_State) Type() protoreflect.EnumType {
	return &file_com_digitalasset_canton_protocol_v1_topology_proto_enumTypes[0]
}

func (x RegisterTopologyTransactionResponse_Result_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterTopologyTransactionResponse_Result_State.Descriptor instead.
func (RegisterTopologyTransactionResponse_Result_State) EnumDescriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP(), []int{4, 0, 0}
}

type TopologyStateUpdate struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Operation v0.TopologyChangeOp    `protobuf:"varint,1,opt,name=operation,proto3,enum=com.digitalasset.canton.protocol.v0.TopologyChangeOp" json:"operation,omitempty"`
	Id        string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Mapping:
	//
	//	*TopologyStateUpdate_NamespaceDelegation
	//	*TopologyStateUpdate_IdentifierDelegation
	//	*TopologyStateUpdate_OwnerToKeyMapping
	//	*TopologyStateUpdate_PartyToParticipant
	//	*TopologyStateUpdate_SignedLegalIdentityClaim
	//	*TopologyStateUpdate_ParticipantState
	//	*TopologyStateUpdate_VettedPackages
	//	*TopologyStateUpdate_MediatorDomainState
	Mapping       isTopologyStateUpdate_Mapping `protobuf_oneof:"mapping"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopologyStateUpdate) Reset() {
	*x = TopologyStateUpdate{}
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyStateUpdate) ProtoMessage() {}

func (x *TopologyStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyStateUpdate.ProtoReflect.Descriptor instead.
func (*TopologyStateUpdate) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP(), []int{0}
}

func (x *TopologyStateUpdate) GetOperation() v0.TopologyChangeOp {
	if x != nil {
		return x.Operation
	}
	return v0.TopologyChangeOp(0)
}

func (x *TopologyStateUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TopologyStateUpdate) GetMapping() isTopologyStateUpdate_Mapping {
	if x != nil {
		return x.Mapping
	}
	return nil
}

func (x *TopologyStateUpdate) GetNamespaceDelegation() *v0.NamespaceDelegation {
	if x != nil {
		if x, ok := x.Mapping.(*TopologyStateUpdate_NamespaceDelegation); ok {
			return x.NamespaceDelegation
		}
	}
	return nil
}

func (x *TopologyStateUpdate) GetIdentifierDelegation() *v0.IdentifierDelegation {
	if x != nil {
		if x, ok := x.Mapping.(*TopologyStateUpdate_IdentifierDelegation); ok {
			return x.IdentifierDelegation
		}
	}
	return nil
}

func (x *TopologyStateUpdate) GetOwnerToKeyMapping() *v0.OwnerToKeyMapping {
	if x != nil {
		if x, ok := x.Mapping.(*TopologyStateUpdate_OwnerToKeyMapping); ok {
			return x.OwnerToKeyMapping
		}
	}
	return nil
}

func (x *TopologyStateUpdate) GetPartyToParticipant() *v0.PartyToParticipant {
	if x != nil {
		if x, ok := x.Mapping.(*TopologyStateUpdate_PartyToParticipant); ok {
			return x.PartyToParticipant
		}
	}
	return nil
}

func (x *TopologyStateUpdate) GetSignedLegalIdentityClaim() *v0.SignedLegalIdentityClaim {
	if x != nil {
		if x, ok := x.Mapping.(*TopologyStateUpdate_SignedLegalIdentityClaim); ok {
			return x.SignedLegalIdentityClaim
		}
	}
	return nil
}

func (x *TopologyStateUpdate) GetParticipantState() *v0.ParticipantState {
	if x != nil {
		if x, ok := x.Mapping.(*TopologyStateUpdate_ParticipantState); ok {
			return x.ParticipantState
		}
	}
	return nil
}

func (x *TopologyStateUpdate) GetVettedPackages() *v0.VettedPackages {
	if x != nil {
		if x, ok := x.Mapping.(*TopologyStateUpdate_VettedPackages); ok {
			return x.VettedPackages
		}
	}
	return nil
}

func (x *TopologyStateUpdate) GetMediatorDomainState() *v0.MediatorDomainState {
	if x != nil {
		if x, ok := x.Mapping.(*TopologyStateUpdate_MediatorDomainState); ok {
			return x.MediatorDomainState
		}
	}
	return nil
}

type isTopologyStateUpdate_Mapping interface {
	isTopologyStateUpdate_Mapping()
}

type TopologyStateUpdate_NamespaceDelegation struct {
	NamespaceDelegation *v0.NamespaceDelegation `protobuf:"bytes,3,opt,name=namespace_delegation,json=namespaceDelegation,proto3,oneof"`
}

type TopologyStateUpdate_IdentifierDelegation struct {
	IdentifierDelegation *v0.IdentifierDelegation `protobuf:"bytes,4,opt,name=identifier_delegation,json=identifierDelegation,proto3,oneof"`
}

type TopologyStateUpdate_OwnerToKeyMapping struct {
	OwnerToKeyMapping *v0.OwnerToKeyMapping `protobuf:"bytes,5,opt,name=owner_to_key_mapping,json=ownerToKeyMapping,proto3,oneof"`
}

type TopologyStateUpdate_PartyToParticipant struct {
	PartyToParticipant *v0.PartyToParticipant `protobuf:"bytes,6,opt,name=party_to_participant,json=partyToParticipant,proto3,oneof"`
}

type TopologyStateUpdate_SignedLegalIdentityClaim struct {
	SignedLegalIdentityClaim *v0.SignedLegalIdentityClaim `protobuf:"bytes,7,opt,name=signed_legal_identity_claim,json=signedLegalIdentityClaim,proto3,oneof"`
}

type TopologyStateUpdate_ParticipantState struct {
	ParticipantState *v0.ParticipantState `protobuf:"bytes,8,opt,name=participant_state,json=participantState,proto3,oneof"`
}

type TopologyStateUpdate_VettedPackages struct {
	VettedPackages *v0.VettedPackages `protobuf:"bytes,9,opt,name=vetted_packages,json=vettedPackages,proto3,oneof"`
}

type TopologyStateUpdate_MediatorDomainState struct {
	MediatorDomainState *v0.MediatorDomainState `protobuf:"bytes,10,opt,name=mediator_domain_state,json=mediatorDomainState,proto3,oneof"`
}

func (*TopologyStateUpdate_NamespaceDelegation) isTopologyStateUpdate_Mapping() {}

func (*TopologyStateUpdate_IdentifierDelegation) isTopologyStateUpdate_Mapping() {}

func (*TopologyStateUpdate_OwnerToKeyMapping) isTopologyStateUpdate_Mapping() {}

func (*TopologyStateUpdate_PartyToParticipant) isTopologyStateUpdate_Mapping() {}

func (*TopologyStateUpdate_SignedLegalIdentityClaim) isTopologyStateUpdate_Mapping() {}

func (*TopologyStateUpdate_ParticipantState) isTopologyStateUpdate_Mapping() {}

func (*TopologyStateUpdate_VettedPackages) isTopologyStateUpdate_Mapping() {}

func (*TopologyStateUpdate_MediatorDomainState) isTopologyStateUpdate_Mapping() {}

type DomainParametersChange struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	Domain           string                   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DomainParameters *DynamicDomainParameters `protobuf:"bytes,2,opt,name=domain_parameters,json=domainParameters,proto3" json:"domain_parameters,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DomainParametersChange) Reset() {
	*x = DomainParametersChange{}
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainParametersChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainParametersChange) ProtoMessage() {}

func (x *DomainParametersChange) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainParametersChange.ProtoReflect.Descriptor instead.
func (*DomainParametersChange) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP(), []int{1}
}

func (x *DomainParametersChange) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DomainParametersChange) GetDomainParameters() *DynamicDomainParameters {
	if x != nil {
		return x.DomainParameters
	}
	return nil
}

type DomainGovernanceTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Mapping:
	//
	//	*DomainGovernanceTransaction_DomainParametersChange
	Mapping       isDomainGovernanceTransaction_Mapping `protobuf_oneof:"mapping"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DomainGovernanceTransaction) Reset() {
	*x = DomainGovernanceTransaction{}
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainGovernanceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainGovernanceTransaction) ProtoMessage() {}

func (x *DomainGovernanceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainGovernanceTransaction.ProtoReflect.Descriptor instead.
func (*DomainGovernanceTransaction) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP(), []int{2}
}

func (x *DomainGovernanceTransaction) GetMapping() isDomainGovernanceTransaction_Mapping {
	if x != nil {
		return x.Mapping
	}
	return nil
}

func (x *DomainGovernanceTransaction) GetDomainParametersChange() *DomainParametersChange {
	if x != nil {
		if x, ok := x.Mapping.(*DomainGovernanceTransaction_DomainParametersChange); ok {
			return x.DomainParametersChange
		}
	}
	return nil
}

type isDomainGovernanceTransaction_Mapping interface {
	isDomainGovernanceTransaction_Mapping()
}

type DomainGovernanceTransaction_DomainParametersChange struct {
	DomainParametersChange *DomainParametersChange `protobuf:"bytes,1,opt,name=domain_parameters_change,json=domainParametersChange,proto3,oneof"`
}

func (*DomainGovernanceTransaction_DomainParametersChange) isDomainGovernanceTransaction_Mapping() {}

type TopologyTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Transaction:
	//
	//	*TopologyTransaction_StateUpdate
	//	*TopologyTransaction_DomainGovernance
	Transaction   isTopologyTransaction_Transaction `protobuf_oneof:"transaction"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopologyTransaction) Reset() {
	*x = TopologyTransaction{}
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyTransaction) ProtoMessage() {}

func (x *TopologyTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyTransaction.ProtoReflect.Descriptor instead.
func (*TopologyTransaction) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP(), []int{3}
}

func (x *TopologyTransaction) GetTransaction() isTopologyTransaction_Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TopologyTransaction) GetStateUpdate() *TopologyStateUpdate {
	if x != nil {
		if x, ok := x.Transaction.(*TopologyTransaction_StateUpdate); ok {
			return x.StateUpdate
		}
	}
	return nil
}

func (x *TopologyTransaction) GetDomainGovernance() *DomainGovernanceTransaction {
	if x != nil {
		if x, ok := x.Transaction.(*TopologyTransaction_DomainGovernance); ok {
			return x.DomainGovernance
		}
	}
	return nil
}

type isTopologyTransaction_Transaction interface {
	isTopologyTransaction_Transaction()
}

type TopologyTransaction_StateUpdate struct {
	StateUpdate *TopologyStateUpdate `protobuf:"bytes,1,opt,name=state_update,json=stateUpdate,proto3,oneof"`
}

type TopologyTransaction_DomainGovernance struct {
	DomainGovernance *DomainGovernanceTransaction `protobuf:"bytes,2,opt,name=domain_governance,json=domainGovernance,proto3,oneof"`
}

func (*TopologyTransaction_StateUpdate) isTopologyTransaction_Transaction() {}

func (*TopologyTransaction_DomainGovernance) isTopologyTransaction_Transaction() {}

type RegisterTopologyTransactionResponse struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	RequestedBy   string                                        `protobuf:"bytes,1,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	Participant   string                                        `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
	RequestId     string                                        `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Results       []*RegisterTopologyTransactionResponse_Result `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
	DomainId      string                                        `protobuf:"bytes,5,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterTopologyTransactionResponse) Reset() {
	*x = RegisterTopologyTransactionResponse{}
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterTopologyTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTopologyTransactionResponse) ProtoMessage() {}

func (x *RegisterTopologyTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTopologyTransactionResponse.ProtoReflect.Descriptor instead.
func (*RegisterTopologyTransactionResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterTopologyTransactionResponse) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

func (x *RegisterTopologyTransactionResponse) GetParticipant() string {
	if x != nil {
		return x.Participant
	}
	return ""
}

func (x *RegisterTopologyTransactionResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RegisterTopologyTransactionResponse) GetResults() []*RegisterTopologyTransactionResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RegisterTopologyTransactionResponse) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type DomainTopologyTransactionMessage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Signature         *v01.Signature         `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	DomainId          string                 `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	NotSequencedAfter *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=not_sequenced_after,json=notSequencedAfter,proto3" json:"not_sequenced_after,omitempty"`
	Transactions      [][]byte               `protobuf:"bytes,4,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DomainTopologyTransactionMessage) Reset() {
	*x = DomainTopologyTransactionMessage{}
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DomainTopologyTransactionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainTopologyTransactionMessage) ProtoMessage() {}

func (x *DomainTopologyTransactionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainTopologyTransactionMessage.ProtoReflect.Descriptor instead.
func (*DomainTopologyTransactionMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP(), []int{5}
}

func (x *DomainTopologyTransactionMessage) GetSignature() *v01.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DomainTopologyTransactionMessage) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *DomainTopologyTransactionMessage) GetNotSequencedAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.NotSequencedAfter
	}
	return nil
}

func (x *DomainTopologyTransactionMessage) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type RegisterTopologyTransactionResponse_Result struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	State         RegisterTopologyTransactionResponse_Result_State `protobuf:"varint,1,opt,name=state,proto3,enum=com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse_Result_State" json:"state,omitempty"`
	ErrorMessage  string                                           `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterTopologyTransactionResponse_Result) Reset() {
	*x = RegisterTopologyTransactionResponse_Result{}
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterTopologyTransactionResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTopologyTransactionResponse_Result) ProtoMessage() {}

func (x *RegisterTopologyTransactionResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTopologyTransactionResponse_Result.ProtoReflect.Descriptor instead.
func (*RegisterTopologyTransactionResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP(), []int{4, 0}
}

func (x *RegisterTopologyTransactionResponse_Result) GetState() RegisterTopologyTransactionResponse_Result_State {
	if x != nil {
		return x.State
	}
	return RegisterTopologyTransactionResponse_Result_MISSING_STATE
}

func (x *RegisterTopologyTransactionResponse_Result) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_com_digitalasset_canton_protocol_v1_topology_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v1_topology_proto_rawDesc = "" +
	"\n" +
	"2com/digitalasset/canton/protocol/v1/topology.proto\x12#com.digitalasset.canton.protocol.v1\x1a.com/digitalasset/canton/crypto/v0/crypto.proto\x1a2com/digitalasset/canton/protocol/v0/topology.proto\x1a4com/digitalasset/canton/protocol/v1/sequencing.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf4\a\n" +
	"\x13TopologyStateUpdate\x12S\n" +
	"\toperation\x18\x01 \x01(\x0e25.com.digitalasset.canton.protocol.v0.TopologyChangeOpR\toperation\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12m\n" +
	"\x14namespace_delegation\x18\x03 \x01(\v28.com.digitalasset.canton.protocol.v0.NamespaceDelegationH\x00R\x13namespaceDelegation\x12p\n" +
	"\x15identifier_delegation\x18\x04 \x01(\v29.com.digitalasset.canton.protocol.v0.IdentifierDelegationH\x00R\x14identifierDelegation\x12i\n" +
	"\x14owner_to_key_mapping\x18\x05 \x01(\v26.com.digitalasset.canton.protocol.v0.OwnerToKeyMappingH\x00R\x11ownerToKeyMapping\x12k\n" +
	"\x14party_to_participant\x18\x06 \x01(\v27.com.digitalasset.canton.protocol.v0.PartyToParticipantH\x00R\x12partyToParticipant\x12~\n" +
	"\x1bsigned_legal_identity_claim\x18\a \x01(\v2=.com.digitalasset.canton.protocol.v0.SignedLegalIdentityClaimH\x00R\x18signedLegalIdentityClaim\x12d\n" +
	"\x11participant_state\x18\b \x01(\v25.com.digitalasset.canton.protocol.v0.ParticipantStateH\x00R\x10participantState\x12^\n" +
	"\x0fvetted_packages\x18\t \x01(\v23.com.digitalasset.canton.protocol.v0.VettedPackagesH\x00R\x0evettedPackages\x12n\n" +
	"\x15mediator_domain_state\x18\n" +
	" \x01(\v28.com.digitalasset.canton.protocol.v0.MediatorDomainStateH\x00R\x13mediatorDomainStateB\t\n" +
	"\amapping\"\x9b\x01\n" +
	"\x16DomainParametersChange\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12i\n" +
	"\x11domain_parameters\x18\x02 \x01(\v2<.com.digitalasset.canton.protocol.v1.DynamicDomainParametersR\x10domainParameters\"\xa1\x01\n" +
	"\x1bDomainGovernanceTransaction\x12w\n" +
	"\x18domain_parameters_change\x18\x01 \x01(\v2;.com.digitalasset.canton.protocol.v1.DomainParametersChangeH\x00R\x16domainParametersChangeB\t\n" +
	"\amapping\"\xf4\x01\n" +
	"\x13TopologyTransaction\x12]\n" +
	"\fstate_update\x18\x01 \x01(\v28.com.digitalasset.canton.protocol.v1.TopologyStateUpdateH\x00R\vstateUpdate\x12o\n" +
	"\x11domain_governance\x18\x02 \x01(\v2@.com.digitalasset.canton.protocol.v1.DomainGovernanceTransactionH\x00R\x10domainGovernanceB\r\n" +
	"\vtransaction\"\x8f\x04\n" +
	"#RegisterTopologyTransactionResponse\x12!\n" +
	"\frequested_by\x18\x01 \x01(\tR\vrequestedBy\x12 \n" +
	"\vparticipant\x18\x02 \x01(\tR\vparticipant\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\x12i\n" +
	"\aresults\x18\x04 \x03(\v2O.com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse.ResultR\aresults\x12\x1b\n" +
	"\tdomain_id\x18\x05 \x01(\tR\bdomainId\x1a\xfb\x01\n" +
	"\x06Result\x12k\n" +
	"\x05state\x18\x01 \x01(\x0e2U.com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse.Result.StateR\x05state\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"_\n" +
	"\x05State\x12\x11\n" +
	"\rMISSING_STATE\x10\x00\x12\n" +
	"\n" +
	"\x06FAILED\x10\x02\x12\f\n" +
	"\bREJECTED\x10\x03\x12\f\n" +
	"\bACCEPTED\x10\x04\x12\r\n" +
	"\tDUPLICATE\x10\x05\x12\f\n" +
	"\bOBSOLETE\x10\x06\"\xfb\x01\n" +
	" DomainTopologyTransactionMessage\x12J\n" +
	"\tsignature\x18\x01 \x01(\v2,.com.digitalasset.canton.crypto.v0.SignatureR\tsignature\x12\x1b\n" +
	"\tdomain_id\x18\x02 \x01(\tR\bdomainId\x12J\n" +
	"\x13not_sequenced_after\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x11notSequencedAfter\x12\"\n" +
	"\ftransactions\x18\x04 \x03(\fR\ftransactionsBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v1b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v1_topology_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v1_topology_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v1_topology_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v1_topology_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_com_digitalasset_canton_protocol_v1_topology_proto_goTypes = []any{
	(RegisterTopologyTransactionResponse_Result_State)(0), // 0: com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse.Result.State
	(*TopologyStateUpdate)(nil),                           // 1: com.digitalasset.canton.protocol.v1.TopologyStateUpdate
	(*DomainParametersChange)(nil),                        // 2: com.digitalasset.canton.protocol.v1.DomainParametersChange
	(*DomainGovernanceTransaction)(nil),                   // 3: com.digitalasset.canton.protocol.v1.DomainGovernanceTransaction
	(*TopologyTransaction)(nil),                           // 4: com.digitalasset.canton.protocol.v1.TopologyTransaction
	(*RegisterTopologyTransactionResponse)(nil),           // 5: com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse
	(*DomainTopologyTransactionMessage)(nil),              // 6: com.digitalasset.canton.protocol.v1.DomainTopologyTransactionMessage
	(*RegisterTopologyTransactionResponse_Result)(nil),    // 7: com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse.Result
	(v0.TopologyChangeOp)(0),                              // 8: com.digitalasset.canton.protocol.v0.TopologyChangeOp
	(*v0.NamespaceDelegation)(nil),                        // 9: com.digitalasset.canton.protocol.v0.NamespaceDelegation
	(*v0.IdentifierDelegation)(nil),                       // 10: com.digitalasset.canton.protocol.v0.IdentifierDelegation
	(*v0.OwnerToKeyMapping)(nil),                          // 11: com.digitalasset.canton.protocol.v0.OwnerToKeyMapping
	(*v0.PartyToParticipant)(nil),                         // 12: com.digitalasset.canton.protocol.v0.PartyToParticipant
	(*v0.SignedLegalIdentityClaim)(nil),                   // 13: com.digitalasset.canton.protocol.v0.SignedLegalIdentityClaim
	(*v0.ParticipantState)(nil),                           // 14: com.digitalasset.canton.protocol.v0.ParticipantState
	(*v0.VettedPackages)(nil),                             // 15: com.digitalasset.canton.protocol.v0.VettedPackages
	(*v0.MediatorDomainState)(nil),                        // 16: com.digitalasset.canton.protocol.v0.MediatorDomainState
	(*DynamicDomainParameters)(nil),                       // 17: com.digitalasset.canton.protocol.v1.DynamicDomainParameters
	(*v01.Signature)(nil),                                 // 18: com.digitalasset.canton.crypto.v0.Signature
	(*timestamppb.Timestamp)(nil),                         // 19: google.protobuf.Timestamp
}
var file_com_digitalasset_canton_protocol_v1_topology_proto_depIdxs = []int32{
	8,  // 0: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.operation:type_name -> com.digitalasset.canton.protocol.v0.TopologyChangeOp
	9,  // 1: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.namespace_delegation:type_name -> com.digitalasset.canton.protocol.v0.NamespaceDelegation
	10, // 2: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.identifier_delegation:type_name -> com.digitalasset.canton.protocol.v0.IdentifierDelegation
	11, // 3: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.owner_to_key_mapping:type_name -> com.digitalasset.canton.protocol.v0.OwnerToKeyMapping
	12, // 4: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.party_to_participant:type_name -> com.digitalasset.canton.protocol.v0.PartyToParticipant
	13, // 5: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.signed_legal_identity_claim:type_name -> com.digitalasset.canton.protocol.v0.SignedLegalIdentityClaim
	14, // 6: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.participant_state:type_name -> com.digitalasset.canton.protocol.v0.ParticipantState
	15, // 7: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.vetted_packages:type_name -> com.digitalasset.canton.protocol.v0.VettedPackages
	16, // 8: com.digitalasset.canton.protocol.v1.TopologyStateUpdate.mediator_domain_state:type_name -> com.digitalasset.canton.protocol.v0.MediatorDomainState
	17, // 9: com.digitalasset.canton.protocol.v1.DomainParametersChange.domain_parameters:type_name -> com.digitalasset.canton.protocol.v1.DynamicDomainParameters
	2,  // 10: com.digitalasset.canton.protocol.v1.DomainGovernanceTransaction.domain_parameters_change:type_name -> com.digitalasset.canton.protocol.v1.DomainParametersChange
	1,  // 11: com.digitalasset.canton.protocol.v1.TopologyTransaction.state_update:type_name -> com.digitalasset.canton.protocol.v1.TopologyStateUpdate
	3,  // 12: com.digitalasset.canton.protocol.v1.TopologyTransaction.domain_governance:type_name -> com.digitalasset.canton.protocol.v1.DomainGovernanceTransaction
	7,  // 13: com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse.results:type_name -> com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse.Result
	18, // 14: com.digitalasset.canton.protocol.v1.DomainTopologyTransactionMessage.signature:type_name -> com.digitalasset.canton.crypto.v0.Signature
	19, // 15: com.digitalasset.canton.protocol.v1.DomainTopologyTransactionMessage.not_sequenced_after:type_name -> google.protobuf.Timestamp
	0,  // 16: com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse.Result.state:type_name -> com.digitalasset.canton.protocol.v1.RegisterTopologyTransactionResponse.Result.State
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v1_topology_proto_init() }
func file_com_digitalasset_canton_protocol_v1_topology_proto_init() {
	if File_com_digitalasset_canton_protocol_v1_topology_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v1_sequencing_proto_init()
	file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[0].OneofWrappers = []any{
		(*TopologyStateUpdate_NamespaceDelegation)(nil),
		(*TopologyStateUpdate_IdentifierDelegation)(nil),
		(*TopologyStateUpdate_OwnerToKeyMapping)(nil),
		(*TopologyStateUpdate_PartyToParticipant)(nil),
		(*TopologyStateUpdate_SignedLegalIdentityClaim)(nil),
		(*TopologyStateUpdate_ParticipantState)(nil),
		(*TopologyStateUpdate_VettedPackages)(nil),
		(*TopologyStateUpdate_MediatorDomainState)(nil),
	}
	file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[2].OneofWrappers = []any{
		(*DomainGovernanceTransaction_DomainParametersChange)(nil),
	}
	file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes[3].OneofWrappers = []any{
		(*TopologyTransaction_StateUpdate)(nil),
		(*TopologyTransaction_DomainGovernance)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v1_topology_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v1_topology_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v1_topology_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v1_topology_proto_depIdxs,
		EnumInfos:         file_com_digitalasset_canton_protocol_v1_topology_proto_enumTypes,
		MessageInfos:      file_com_digitalasset_canton_protocol_v1_topology_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v1_topology_proto = out.File
	file_com_digitalasset_canton_protocol_v1_topology_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v1_topology_proto_depIdxs = nil
}
