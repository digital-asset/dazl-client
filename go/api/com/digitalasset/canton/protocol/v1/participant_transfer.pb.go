// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/protocol/v1/participant_transfer.proto

package v1

import (
	v0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v0"
	v02 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0"
	protocolv0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferOutCommonData struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Salt                  *v0.Salt               `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	SourceDomain          string                 `protobuf:"bytes,2,opt,name=source_domain,json=sourceDomain,proto3" json:"source_domain,omitempty"`
	Stakeholders          []string               `protobuf:"bytes,3,rep,name=stakeholders,proto3" json:"stakeholders,omitempty"`
	AdminParties          []string               `protobuf:"bytes,4,rep,name=admin_parties,json=adminParties,proto3" json:"admin_parties,omitempty"`
	Uuid                  string                 `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceMediator        string                 `protobuf:"bytes,6,opt,name=source_mediator,json=sourceMediator,proto3" json:"source_mediator,omitempty"`
	SourceProtocolVersion int32                  `protobuf:"varint,7,opt,name=source_protocol_version,json=sourceProtocolVersion,proto3" json:"source_protocol_version,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TransferOutCommonData) Reset() {
	*x = TransferOutCommonData{}
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferOutCommonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOutCommonData) ProtoMessage() {}

func (x *TransferOutCommonData) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOutCommonData.ProtoReflect.Descriptor instead.
func (*TransferOutCommonData) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *TransferOutCommonData) GetSalt() *v0.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *TransferOutCommonData) GetSourceDomain() string {
	if x != nil {
		return x.SourceDomain
	}
	return ""
}

func (x *TransferOutCommonData) GetStakeholders() []string {
	if x != nil {
		return x.Stakeholders
	}
	return nil
}

func (x *TransferOutCommonData) GetAdminParties() []string {
	if x != nil {
		return x.AdminParties
	}
	return nil
}

func (x *TransferOutCommonData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TransferOutCommonData) GetSourceMediator() string {
	if x != nil {
		return x.SourceMediator
	}
	return ""
}

func (x *TransferOutCommonData) GetSourceProtocolVersion() int32 {
	if x != nil {
		return x.SourceProtocolVersion
	}
	return 0
}

type TransferViewTree struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommonData      *BlindableNode         `protobuf:"bytes,1,opt,name=common_data,json=commonData,proto3" json:"common_data,omitempty"`
	ParticipantData *BlindableNode         `protobuf:"bytes,2,opt,name=participant_data,json=participantData,proto3" json:"participant_data,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransferViewTree) Reset() {
	*x = TransferViewTree{}
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferViewTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferViewTree) ProtoMessage() {}

func (x *TransferViewTree) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferViewTree.ProtoReflect.Descriptor instead.
func (*TransferViewTree) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *TransferViewTree) GetCommonData() *BlindableNode {
	if x != nil {
		return x.CommonData
	}
	return nil
}

func (x *TransferViewTree) GetParticipantData() *BlindableNode {
	if x != nil {
		return x.ParticipantData
	}
	return nil
}

type TransferInMediatorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tree          *TransferViewTree      `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferInMediatorMessage) Reset() {
	*x = TransferInMediatorMessage{}
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferInMediatorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInMediatorMessage) ProtoMessage() {}

func (x *TransferInMediatorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInMediatorMessage.ProtoReflect.Descriptor instead.
func (*TransferInMediatorMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescGZIP(), []int{2}
}

func (x *TransferInMediatorMessage) GetTree() *TransferViewTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

type TransferOutMediatorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tree          *TransferViewTree      `protobuf:"bytes,1,opt,name=tree,proto3" json:"tree,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferOutMediatorMessage) Reset() {
	*x = TransferOutMediatorMessage{}
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferOutMediatorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOutMediatorMessage) ProtoMessage() {}

func (x *TransferOutMediatorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOutMediatorMessage.ProtoReflect.Descriptor instead.
func (*TransferOutMediatorMessage) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *TransferOutMediatorMessage) GetTree() *TransferViewTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

type TransferOutView struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Salt                  *v0.Salt               `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	Submitter             string                 `protobuf:"bytes,2,opt,name=submitter,proto3" json:"submitter,omitempty"`
	ContractId            string                 `protobuf:"bytes,3,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	TargetDomain          string                 `protobuf:"bytes,4,opt,name=target_domain,json=targetDomain,proto3" json:"target_domain,omitempty"`
	TargetTimeProof       *protocolv0.TimeProof         `protobuf:"bytes,5,opt,name=target_time_proof,json=targetTimeProof,proto3" json:"target_time_proof,omitempty"`
	TargetProtocolVersion int32                  `protobuf:"varint,6,opt,name=target_protocol_version,json=targetProtocolVersion,proto3" json:"target_protocol_version,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TransferOutView) Reset() {
	*x = TransferOutView{}
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferOutView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOutView) ProtoMessage() {}

func (x *TransferOutView) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOutView.ProtoReflect.Descriptor instead.
func (*TransferOutView) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescGZIP(), []int{4}
}

func (x *TransferOutView) GetSalt() *v0.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *TransferOutView) GetSubmitter() string {
	if x != nil {
		return x.Submitter
	}
	return ""
}

func (x *TransferOutView) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *TransferOutView) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *TransferOutView) GetTargetTimeProof() *protocolv0.TimeProof {
	if x != nil {
		return x.TargetTimeProof
	}
	return nil
}

func (x *TransferOutView) GetTargetProtocolVersion() int32 {
	if x != nil {
		return x.TargetProtocolVersion
	}
	return 0
}

type TransferInCommonData struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Salt                  *v0.Salt               `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	TargetDomain          string                 `protobuf:"bytes,2,opt,name=target_domain,json=targetDomain,proto3" json:"target_domain,omitempty"`
	Stakeholders          []string               `protobuf:"bytes,3,rep,name=stakeholders,proto3" json:"stakeholders,omitempty"`
	Uuid                  string                 `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TargetMediator        string                 `protobuf:"bytes,6,opt,name=target_mediator,json=targetMediator,proto3" json:"target_mediator,omitempty"`
	TargetProtocolVersion int32                  `protobuf:"varint,7,opt,name=target_protocol_version,json=targetProtocolVersion,proto3" json:"target_protocol_version,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TransferInCommonData) Reset() {
	*x = TransferInCommonData{}
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferInCommonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInCommonData) ProtoMessage() {}

func (x *TransferInCommonData) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInCommonData.ProtoReflect.Descriptor instead.
func (*TransferInCommonData) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescGZIP(), []int{5}
}

func (x *TransferInCommonData) GetSalt() *v0.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *TransferInCommonData) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *TransferInCommonData) GetStakeholders() []string {
	if x != nil {
		return x.Stakeholders
	}
	return nil
}

func (x *TransferInCommonData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TransferInCommonData) GetTargetMediator() string {
	if x != nil {
		return x.TargetMediator
	}
	return ""
}

func (x *TransferInCommonData) GetTargetProtocolVersion() int32 {
	if x != nil {
		return x.TargetProtocolVersion
	}
	return 0
}

type TransferInView struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Salt                   *v0.Salt               `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	Submitter              string                 `protobuf:"bytes,2,opt,name=submitter,proto3" json:"submitter,omitempty"`
	Contract               *SerializableContract  `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	TransferOutResultEvent *v02.SignedContent     `protobuf:"bytes,4,opt,name=transfer_out_result_event,json=transferOutResultEvent,proto3" json:"transfer_out_result_event,omitempty"`
	CreatingTransactionId  []byte                 `protobuf:"bytes,5,opt,name=creating_transaction_id,json=creatingTransactionId,proto3" json:"creating_transaction_id,omitempty"`
	SourceProtocolVersion  int32                  `protobuf:"varint,6,opt,name=source_protocol_version,json=sourceProtocolVersion,proto3" json:"source_protocol_version,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TransferInView) Reset() {
	*x = TransferInView{}
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferInView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInView) ProtoMessage() {}

func (x *TransferInView) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInView.ProtoReflect.Descriptor instead.
func (*TransferInView) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescGZIP(), []int{6}
}

func (x *TransferInView) GetSalt() *v0.Salt {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *TransferInView) GetSubmitter() string {
	if x != nil {
		return x.Submitter
	}
	return ""
}

func (x *TransferInView) GetContract() *SerializableContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *TransferInView) GetTransferOutResultEvent() *v02.SignedContent {
	if x != nil {
		return x.TransferOutResultEvent
	}
	return nil
}

func (x *TransferInView) GetCreatingTransactionId() []byte {
	if x != nil {
		return x.CreatingTransactionId
	}
	return nil
}

func (x *TransferInView) GetSourceProtocolVersion() int32 {
	if x != nil {
		return x.SourceProtocolVersion
	}
	return 0
}

var File_com_digitalasset_canton_protocol_v1_participant_transfer_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDesc = "" +
	"\n" +
	">com/digitalasset/canton/protocol/v1/participant_transfer.proto\x12#com.digitalasset.canton.protocol.v1\x1a.com/digitalasset/canton/crypto/v0/crypto.proto\x1a4com/digitalasset/canton/protocol/v0/sequencing.proto\x1a0com/digitalasset/canton/protocol/v1/common.proto\x1a0com/digitalasset/canton/protocol/v1/merkle.proto\x1a0com/digitalasset/canton/time/v0/time_proof.proto\"\xb7\x02\n" +
	"\x15TransferOutCommonData\x12;\n" +
	"\x04salt\x18\x01 \x01(\v2'.com.digitalasset.canton.crypto.v0.SaltR\x04salt\x12#\n" +
	"\rsource_domain\x18\x02 \x01(\tR\fsourceDomain\x12\"\n" +
	"\fstakeholders\x18\x03 \x03(\tR\fstakeholders\x12#\n" +
	"\radmin_parties\x18\x04 \x03(\tR\fadminParties\x12\x12\n" +
	"\x04uuid\x18\x05 \x01(\tR\x04uuid\x12'\n" +
	"\x0fsource_mediator\x18\x06 \x01(\tR\x0esourceMediator\x126\n" +
	"\x17source_protocol_version\x18\a \x01(\x05R\x15sourceProtocolVersion\"\xc6\x01\n" +
	"\x10TransferViewTree\x12S\n" +
	"\vcommon_data\x18\x01 \x01(\v22.com.digitalasset.canton.protocol.v1.BlindableNodeR\n" +
	"commonData\x12]\n" +
	"\x10participant_data\x18\x02 \x01(\v22.com.digitalasset.canton.protocol.v1.BlindableNodeR\x0fparticipantData\"f\n" +
	"\x19TransferInMediatorMessage\x12I\n" +
	"\x04tree\x18\x01 \x01(\v25.com.digitalasset.canton.protocol.v1.TransferViewTreeR\x04tree\"g\n" +
	"\x1aTransferOutMediatorMessage\x12I\n" +
	"\x04tree\x18\x01 \x01(\v25.com.digitalasset.canton.protocol.v1.TransferViewTreeR\x04tree\"\xc2\x02\n" +
	"\x0fTransferOutView\x12;\n" +
	"\x04salt\x18\x01 \x01(\v2'.com.digitalasset.canton.crypto.v0.SaltR\x04salt\x12\x1c\n" +
	"\tsubmitter\x18\x02 \x01(\tR\tsubmitter\x12\x1f\n" +
	"\vcontract_id\x18\x03 \x01(\tR\n" +
	"contractId\x12#\n" +
	"\rtarget_domain\x18\x04 \x01(\tR\ftargetDomain\x12V\n" +
	"\x11target_time_proof\x18\x05 \x01(\v2*.com.digitalasset.canton.time.v0.TimeProofR\x0ftargetTimeProof\x126\n" +
	"\x17target_protocol_version\x18\x06 \x01(\x05R\x15targetProtocolVersion\"\x91\x02\n" +
	"\x14TransferInCommonData\x12;\n" +
	"\x04salt\x18\x01 \x01(\v2'.com.digitalasset.canton.crypto.v0.SaltR\x04salt\x12#\n" +
	"\rtarget_domain\x18\x02 \x01(\tR\ftargetDomain\x12\"\n" +
	"\fstakeholders\x18\x03 \x03(\tR\fstakeholders\x12\x12\n" +
	"\x04uuid\x18\x04 \x01(\tR\x04uuid\x12'\n" +
	"\x0ftarget_mediator\x18\x06 \x01(\tR\x0etargetMediator\x126\n" +
	"\x17target_protocol_version\x18\a \x01(\x05R\x15targetProtocolVersion\"\xa1\x03\n" +
	"\x0eTransferInView\x12;\n" +
	"\x04salt\x18\x01 \x01(\v2'.com.digitalasset.canton.crypto.v0.SaltR\x04salt\x12\x1c\n" +
	"\tsubmitter\x18\x02 \x01(\tR\tsubmitter\x12U\n" +
	"\bcontract\x18\x03 \x01(\v29.com.digitalasset.canton.protocol.v1.SerializableContractR\bcontract\x12m\n" +
	"\x19transfer_out_result_event\x18\x04 \x01(\v22.com.digitalasset.canton.protocol.v0.SignedContentR\x16transferOutResultEvent\x126\n" +
	"\x17creating_transaction_id\x18\x05 \x01(\fR\x15creatingTransactionId\x126\n" +
	"\x17source_protocol_version\x18\x06 \x01(\x05R\x15sourceProtocolVersionBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v1b\x06proto3"

var (
	file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescData []byte
)

func file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDescData
}

var file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_goTypes = []any{
	(*TransferOutCommonData)(nil),      // 0: com.digitalasset.canton.protocol.v1.TransferOutCommonData
	(*TransferViewTree)(nil),           // 1: com.digitalasset.canton.protocol.v1.TransferViewTree
	(*TransferInMediatorMessage)(nil),  // 2: com.digitalasset.canton.protocol.v1.TransferInMediatorMessage
	(*TransferOutMediatorMessage)(nil), // 3: com.digitalasset.canton.protocol.v1.TransferOutMediatorMessage
	(*TransferOutView)(nil),            // 4: com.digitalasset.canton.protocol.v1.TransferOutView
	(*TransferInCommonData)(nil),       // 5: com.digitalasset.canton.protocol.v1.TransferInCommonData
	(*TransferInView)(nil),             // 6: com.digitalasset.canton.protocol.v1.TransferInView
	(*v0.Salt)(nil),                    // 7: com.digitalasset.canton.crypto.v0.Salt
	(*BlindableNode)(nil),              // 8: com.digitalasset.canton.protocol.v1.BlindableNode
	(*protocolv0.TimeProof)(nil),              // 9: com.digitalasset.canton.time.v0.TimeProof
	(*SerializableContract)(nil),       // 10: com.digitalasset.canton.protocol.v1.SerializableContract
	(*v02.SignedContent)(nil),          // 11: com.digitalasset.canton.protocol.v0.SignedContent
}
var file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_depIdxs = []int32{
	7,  // 0: com.digitalasset.canton.protocol.v1.TransferOutCommonData.salt:type_name -> com.digitalasset.canton.crypto.v0.Salt
	8,  // 1: com.digitalasset.canton.protocol.v1.TransferViewTree.common_data:type_name -> com.digitalasset.canton.protocol.v1.BlindableNode
	8,  // 2: com.digitalasset.canton.protocol.v1.TransferViewTree.participant_data:type_name -> com.digitalasset.canton.protocol.v1.BlindableNode
	1,  // 3: com.digitalasset.canton.protocol.v1.TransferInMediatorMessage.tree:type_name -> com.digitalasset.canton.protocol.v1.TransferViewTree
	1,  // 4: com.digitalasset.canton.protocol.v1.TransferOutMediatorMessage.tree:type_name -> com.digitalasset.canton.protocol.v1.TransferViewTree
	7,  // 5: com.digitalasset.canton.protocol.v1.TransferOutView.salt:type_name -> com.digitalasset.canton.crypto.v0.Salt
	9,  // 6: com.digitalasset.canton.protocol.v1.TransferOutView.target_time_proof:type_name -> com.digitalasset.canton.time.v0.TimeProof
	7,  // 7: com.digitalasset.canton.protocol.v1.TransferInCommonData.salt:type_name -> com.digitalasset.canton.crypto.v0.Salt
	7,  // 8: com.digitalasset.canton.protocol.v1.TransferInView.salt:type_name -> com.digitalasset.canton.crypto.v0.Salt
	10, // 9: com.digitalasset.canton.protocol.v1.TransferInView.contract:type_name -> com.digitalasset.canton.protocol.v1.SerializableContract
	11, // 10: com.digitalasset.canton.protocol.v1.TransferInView.transfer_out_result_event:type_name -> com.digitalasset.canton.protocol.v0.SignedContent
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_init() }
func file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_init() {
	if File_com_digitalasset_canton_protocol_v1_participant_transfer_proto != nil {
		return
	}
	file_com_digitalasset_canton_protocol_v1_common_proto_init()
	file_com_digitalasset_canton_protocol_v1_merkle_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDesc), len(file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_protocol_v1_participant_transfer_proto = out.File
	file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_goTypes = nil
	file_com_digitalasset_canton_protocol_v1_participant_transfer_proto_depIdxs = nil
}
