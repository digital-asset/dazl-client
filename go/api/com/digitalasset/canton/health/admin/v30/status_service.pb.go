// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/health/admin/v30/status_service.proto

package v30

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusResponse_NotInitialized_WaitingForExternalInput int32

const (
	StatusResponse_NotInitialized_WAITING_FOR_EXTERNAL_INPUT_UNSPECIFIED    StatusResponse_NotInitialized_WaitingForExternalInput = 0
	StatusResponse_NotInitialized_WAITING_FOR_EXTERNAL_INPUT_ID             StatusResponse_NotInitialized_WaitingForExternalInput = 1
	StatusResponse_NotInitialized_WAITING_FOR_EXTERNAL_INPUT_NODE_TOPOLOGY  StatusResponse_NotInitialized_WaitingForExternalInput = 2
	StatusResponse_NotInitialized_WAITING_FOR_EXTERNAL_INPUT_INITIALIZATION StatusResponse_NotInitialized_WaitingForExternalInput = 3
)

// Enum value maps for StatusResponse_NotInitialized_WaitingForExternalInput.
var (
	StatusResponse_NotInitialized_WaitingForExternalInput_name = map[int32]string{
		0: "WAITING_FOR_EXTERNAL_INPUT_UNSPECIFIED",
		1: "WAITING_FOR_EXTERNAL_INPUT_ID",
		2: "WAITING_FOR_EXTERNAL_INPUT_NODE_TOPOLOGY",
		3: "WAITING_FOR_EXTERNAL_INPUT_INITIALIZATION",
	}
	StatusResponse_NotInitialized_WaitingForExternalInput_value = map[string]int32{
		"WAITING_FOR_EXTERNAL_INPUT_UNSPECIFIED":    0,
		"WAITING_FOR_EXTERNAL_INPUT_ID":             1,
		"WAITING_FOR_EXTERNAL_INPUT_NODE_TOPOLOGY":  2,
		"WAITING_FOR_EXTERNAL_INPUT_INITIALIZATION": 3,
	}
)

func (x StatusResponse_NotInitialized_WaitingForExternalInput) Enum() *StatusResponse_NotInitialized_WaitingForExternalInput {
	p := new(StatusResponse_NotInitialized_WaitingForExternalInput)
	*p = x
	return p
}

func (x StatusResponse_NotInitialized_WaitingForExternalInput) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusResponse_NotInitialized_WaitingForExternalInput) Descriptor() protoreflect.EnumDescriptor {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_enumTypes[0].Descriptor()
}

func (StatusResponse_NotInitialized_WaitingForExternalInput) Type() protoreflect.EnumType {
	return &file_com_digitalasset_canton_health_admin_v30_status_service_proto_enumTypes[0]
}

func (x StatusResponse_NotInitialized_WaitingForExternalInput) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusResponse_NotInitialized_WaitingForExternalInput.Descriptor instead.
func (StatusResponse_NotInitialized_WaitingForExternalInput) EnumDescriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{2, 2, 0}
}

type TopologyQueueStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manager    uint32 `protobuf:"varint,1,opt,name=manager,proto3" json:"manager,omitempty"`
	Dispatcher uint32 `protobuf:"varint,2,opt,name=dispatcher,proto3" json:"dispatcher,omitempty"`
	Clients    uint32 `protobuf:"varint,3,opt,name=clients,proto3" json:"clients,omitempty"`
}

func (x *TopologyQueueStatus) Reset() {
	*x = TopologyQueueStatus{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyQueueStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyQueueStatus) ProtoMessage() {}

func (x *TopologyQueueStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyQueueStatus.ProtoReflect.Descriptor instead.
func (*TopologyQueueStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{0}
}

func (x *TopologyQueueStatus) GetManager() uint32 {
	if x != nil {
		return x.Manager
	}
	return 0
}

func (x *TopologyQueueStatus) GetDispatcher() uint32 {
	if x != nil {
		return x.Dispatcher
	}
	return 0
}

func (x *TopologyQueueStatus) GetClients() uint32 {
	if x != nil {
		return x.Clients
	}
	return 0
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{1}
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*StatusResponse_NotInitialized_
	//	*StatusResponse_Success
	Response isStatusResponse_Response `protobuf_oneof:"response"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{2}
}

func (m *StatusResponse) GetResponse() isStatusResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *StatusResponse) GetNotInitialized() *StatusResponse_NotInitialized {
	if x, ok := x.GetResponse().(*StatusResponse_NotInitialized_); ok {
		return x.NotInitialized
	}
	return nil
}

func (x *StatusResponse) GetSuccess() *StatusResponse_Status {
	if x, ok := x.GetResponse().(*StatusResponse_Success); ok {
		return x.Success
	}
	return nil
}

type isStatusResponse_Response interface {
	isStatusResponse_Response()
}

type StatusResponse_NotInitialized_ struct {
	NotInitialized *StatusResponse_NotInitialized `protobuf:"bytes,1,opt,name=not_initialized,json=notInitialized,proto3,oneof"`
}

type StatusResponse_Success struct {
	Success *StatusResponse_Status `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

func (*StatusResponse_NotInitialized_) isStatusResponse_Response() {}

func (*StatusResponse_Success) isStatusResponse_Response() {}

type HealthDumpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkSize *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
}

func (x *HealthDumpRequest) Reset() {
	*x = HealthDumpRequest{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthDumpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthDumpRequest) ProtoMessage() {}

func (x *HealthDumpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthDumpRequest.ProtoReflect.Descriptor instead.
func (*HealthDumpRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{3}
}

func (x *HealthDumpRequest) GetChunkSize() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ChunkSize
	}
	return nil
}

type HealthDumpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *HealthDumpResponse) Reset() {
	*x = HealthDumpResponse{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthDumpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthDumpResponse) ProtoMessage() {}

func (x *HealthDumpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthDumpResponse.ProtoReflect.Descriptor instead.
func (*HealthDumpResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{4}
}

func (x *HealthDumpResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type ParticipantStatusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectedDomains []*ParticipantStatusInfo_ConnectedDomain `protobuf:"bytes,1,rep,name=connected_domains,json=connectedDomains,proto3" json:"connected_domains,omitempty"`
	Active           bool                                     `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *ParticipantStatusInfo) Reset() {
	*x = ParticipantStatusInfo{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipantStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantStatusInfo) ProtoMessage() {}

func (x *ParticipantStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantStatusInfo.ProtoReflect.Descriptor instead.
func (*ParticipantStatusInfo) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{5}
}

func (x *ParticipantStatusInfo) GetConnectedDomains() []*ParticipantStatusInfo_ConnectedDomain {
	if x != nil {
		return x.ConnectedDomains
	}
	return nil
}

func (x *ParticipantStatusInfo) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type SequencerNodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectedParticipantUids []string               `protobuf:"bytes,1,rep,name=connected_participant_uids,json=connectedParticipantUids,proto3" json:"connected_participant_uids,omitempty"`
	Sequencer                *SequencerHealthStatus `protobuf:"bytes,2,opt,name=sequencer,proto3" json:"sequencer,omitempty"`
	DomainId                 string                 `protobuf:"bytes,3,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Admin                    *SequencerAdminStatus  `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *SequencerNodeStatus) Reset() {
	*x = SequencerNodeStatus{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerNodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerNodeStatus) ProtoMessage() {}

func (x *SequencerNodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerNodeStatus.ProtoReflect.Descriptor instead.
func (*SequencerNodeStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{6}
}

func (x *SequencerNodeStatus) GetConnectedParticipantUids() []string {
	if x != nil {
		return x.ConnectedParticipantUids
	}
	return nil
}

func (x *SequencerNodeStatus) GetSequencer() *SequencerHealthStatus {
	if x != nil {
		return x.Sequencer
	}
	return nil
}

func (x *SequencerNodeStatus) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *SequencerNodeStatus) GetAdmin() *SequencerAdminStatus {
	if x != nil {
		return x.Admin
	}
	return nil
}

type SequencerHealthStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active  bool                    `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	Details *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SequencerHealthStatus) Reset() {
	*x = SequencerHealthStatus{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerHealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerHealthStatus) ProtoMessage() {}

func (x *SequencerHealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerHealthStatus.ProtoReflect.Descriptor instead.
func (*SequencerHealthStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{7}
}

func (x *SequencerHealthStatus) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *SequencerHealthStatus) GetDetails() *wrapperspb.StringValue {
	if x != nil {
		return x.Details
	}
	return nil
}

type SequencerAdminStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcceptsAdminChanges bool `protobuf:"varint,1,opt,name=accepts_admin_changes,json=acceptsAdminChanges,proto3" json:"accepts_admin_changes,omitempty"`
}

func (x *SequencerAdminStatus) Reset() {
	*x = SequencerAdminStatus{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequencerAdminStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequencerAdminStatus) ProtoMessage() {}

func (x *SequencerAdminStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequencerAdminStatus.ProtoReflect.Descriptor instead.
func (*SequencerAdminStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{8}
}

func (x *SequencerAdminStatus) GetAcceptsAdminChanges() bool {
	if x != nil {
		return x.AcceptsAdminChanges
	}
	return false
}

type MediatorNodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *MediatorNodeStatus) Reset() {
	*x = MediatorNodeStatus{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediatorNodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediatorNodeStatus) ProtoMessage() {}

func (x *MediatorNodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediatorNodeStatus.ProtoReflect.Descriptor instead.
func (*MediatorNodeStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{9}
}

func (x *MediatorNodeStatus) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type SetLogLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level string `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *SetLogLevelRequest) Reset() {
	*x = SetLogLevelRequest{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelRequest) ProtoMessage() {}

func (x *SetLogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogLevelRequest.ProtoReflect.Descriptor instead.
func (*SetLogLevelRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{10}
}

func (x *SetLogLevelRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type SetLogLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetLogLevelResponse) Reset() {
	*x = SetLogLevelResponse{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelResponse) ProtoMessage() {}

func (x *SetLogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogLevelResponse.ProtoReflect.Descriptor instead.
func (*SetLogLevelResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{11}
}

type GetLastErrorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLastErrorsRequest) Reset() {
	*x = GetLastErrorsRequest{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastErrorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastErrorsRequest) ProtoMessage() {}

func (x *GetLastErrorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastErrorsRequest.ProtoReflect.Descriptor instead.
func (*GetLastErrorsRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{12}
}

type GetLastErrorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*GetLastErrorsResponse_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetLastErrorsResponse) Reset() {
	*x = GetLastErrorsResponse{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastErrorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastErrorsResponse) ProtoMessage() {}

func (x *GetLastErrorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastErrorsResponse.ProtoReflect.Descriptor instead.
func (*GetLastErrorsResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetLastErrorsResponse) GetErrors() []*GetLastErrorsResponse_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetLastErrorTraceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *GetLastErrorTraceRequest) Reset() {
	*x = GetLastErrorTraceRequest{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastErrorTraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastErrorTraceRequest) ProtoMessage() {}

func (x *GetLastErrorTraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastErrorTraceRequest.ProtoReflect.Descriptor instead.
func (*GetLastErrorTraceRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetLastErrorTraceRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type GetLastErrorTraceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []string `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetLastErrorTraceResponse) Reset() {
	*x = GetLastErrorTraceResponse{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastErrorTraceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastErrorTraceResponse) ProtoMessage() {}

func (x *GetLastErrorTraceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastErrorTraceResponse.ProtoReflect.Descriptor instead.
func (*GetLastErrorTraceResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetLastErrorTraceResponse) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type StatusResponse_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uptime         *durationpb.Duration              `protobuf:"bytes,2,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Ports          map[string]int32                  `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Extra          []byte                            `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	Active         bool                              `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	TopologyQueues *TopologyQueueStatus              `protobuf:"bytes,6,opt,name=topology_queues,json=topologyQueues,proto3" json:"topology_queues,omitempty"`
	Components     []*StatusResponse_ComponentStatus `protobuf:"bytes,7,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *StatusResponse_Status) Reset() {
	*x = StatusResponse_Status{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_Status) ProtoMessage() {}

func (x *StatusResponse_Status) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_Status.ProtoReflect.Descriptor instead.
func (*StatusResponse_Status) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *StatusResponse_Status) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StatusResponse_Status) GetUptime() *durationpb.Duration {
	if x != nil {
		return x.Uptime
	}
	return nil
}

func (x *StatusResponse_Status) GetPorts() map[string]int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *StatusResponse_Status) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *StatusResponse_Status) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *StatusResponse_Status) GetTopologyQueues() *TopologyQueueStatus {
	if x != nil {
		return x.TopologyQueues
	}
	return nil
}

func (x *StatusResponse_Status) GetComponents() []*StatusResponse_ComponentStatus {
	if x != nil {
		return x.Components
	}
	return nil
}

type StatusResponse_ComponentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Status:
	//
	//	*StatusResponse_ComponentStatus_Ok
	//	*StatusResponse_ComponentStatus_Degraded
	//	*StatusResponse_ComponentStatus_Failed
	//	*StatusResponse_ComponentStatus_Fatal
	Status isStatusResponse_ComponentStatus_Status `protobuf_oneof:"status"`
}

func (x *StatusResponse_ComponentStatus) Reset() {
	*x = StatusResponse_ComponentStatus{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_ComponentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_ComponentStatus) ProtoMessage() {}

func (x *StatusResponse_ComponentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_ComponentStatus.ProtoReflect.Descriptor instead.
func (*StatusResponse_ComponentStatus) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{2, 1}
}

func (x *StatusResponse_ComponentStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *StatusResponse_ComponentStatus) GetStatus() isStatusResponse_ComponentStatus_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *StatusResponse_ComponentStatus) GetOk() *StatusResponse_ComponentStatus_StatusData {
	if x, ok := x.GetStatus().(*StatusResponse_ComponentStatus_Ok); ok {
		return x.Ok
	}
	return nil
}

func (x *StatusResponse_ComponentStatus) GetDegraded() *StatusResponse_ComponentStatus_StatusData {
	if x, ok := x.GetStatus().(*StatusResponse_ComponentStatus_Degraded); ok {
		return x.Degraded
	}
	return nil
}

func (x *StatusResponse_ComponentStatus) GetFailed() *StatusResponse_ComponentStatus_StatusData {
	if x, ok := x.GetStatus().(*StatusResponse_ComponentStatus_Failed); ok {
		return x.Failed
	}
	return nil
}

func (x *StatusResponse_ComponentStatus) GetFatal() *StatusResponse_ComponentStatus_StatusData {
	if x, ok := x.GetStatus().(*StatusResponse_ComponentStatus_Fatal); ok {
		return x.Fatal
	}
	return nil
}

type isStatusResponse_ComponentStatus_Status interface {
	isStatusResponse_ComponentStatus_Status()
}

type StatusResponse_ComponentStatus_Ok struct {
	Ok *StatusResponse_ComponentStatus_StatusData `protobuf:"bytes,2,opt,name=ok,proto3,oneof"`
}

type StatusResponse_ComponentStatus_Degraded struct {
	Degraded *StatusResponse_ComponentStatus_StatusData `protobuf:"bytes,3,opt,name=degraded,proto3,oneof"`
}

type StatusResponse_ComponentStatus_Failed struct {
	Failed *StatusResponse_ComponentStatus_StatusData `protobuf:"bytes,4,opt,name=failed,proto3,oneof"`
}

type StatusResponse_ComponentStatus_Fatal struct {
	Fatal *StatusResponse_ComponentStatus_StatusData `protobuf:"bytes,5,opt,name=fatal,proto3,oneof"`
}

func (*StatusResponse_ComponentStatus_Ok) isStatusResponse_ComponentStatus_Status() {}

func (*StatusResponse_ComponentStatus_Degraded) isStatusResponse_ComponentStatus_Status() {}

func (*StatusResponse_ComponentStatus_Failed) isStatusResponse_ComponentStatus_Status() {}

func (*StatusResponse_ComponentStatus_Fatal) isStatusResponse_ComponentStatus_Status() {}

type StatusResponse_NotInitialized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active                  bool                                                  `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	WaitingForExternalInput StatusResponse_NotInitialized_WaitingForExternalInput `protobuf:"varint,2,opt,name=waiting_for_external_input,json=waitingForExternalInput,proto3,enum=com.digitalasset.canton.health.admin.v30.StatusResponse_NotInitialized_WaitingForExternalInput" json:"waiting_for_external_input,omitempty"`
}

func (x *StatusResponse_NotInitialized) Reset() {
	*x = StatusResponse_NotInitialized{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_NotInitialized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_NotInitialized) ProtoMessage() {}

func (x *StatusResponse_NotInitialized) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_NotInitialized.ProtoReflect.Descriptor instead.
func (*StatusResponse_NotInitialized) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{2, 2}
}

func (x *StatusResponse_NotInitialized) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *StatusResponse_NotInitialized) GetWaitingForExternalInput() StatusResponse_NotInitialized_WaitingForExternalInput {
	if x != nil {
		return x.WaitingForExternalInput
	}
	return StatusResponse_NotInitialized_WAITING_FOR_EXTERNAL_INPUT_UNSPECIFIED
}

type StatusResponse_ComponentStatus_StatusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *StatusResponse_ComponentStatus_StatusData) Reset() {
	*x = StatusResponse_ComponentStatus_StatusData{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse_ComponentStatus_StatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse_ComponentStatus_StatusData) ProtoMessage() {}

func (x *StatusResponse_ComponentStatus_StatusData) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse_ComponentStatus_StatusData.ProtoReflect.Descriptor instead.
func (*StatusResponse_ComponentStatus_StatusData) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{2, 1, 0}
}

func (x *StatusResponse_ComponentStatus_StatusData) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

type ParticipantStatusInfo_ConnectedDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain  string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Healthy bool   `protobuf:"varint,2,opt,name=healthy,proto3" json:"healthy,omitempty"`
}

func (x *ParticipantStatusInfo_ConnectedDomain) Reset() {
	*x = ParticipantStatusInfo_ConnectedDomain{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipantStatusInfo_ConnectedDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantStatusInfo_ConnectedDomain) ProtoMessage() {}

func (x *ParticipantStatusInfo_ConnectedDomain) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantStatusInfo_ConnectedDomain.ProtoReflect.Descriptor instead.
func (*ParticipantStatusInfo_ConnectedDomain) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ParticipantStatusInfo_ConnectedDomain) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ParticipantStatusInfo_ConnectedDomain) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

type GetLastErrorsResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetLastErrorsResponse_Error) Reset() {
	*x = GetLastErrorsResponse_Error{}
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLastErrorsResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastErrorsResponse_Error) ProtoMessage() {}

func (x *GetLastErrorsResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastErrorsResponse_Error.ProtoReflect.Descriptor instead.
func (*GetLastErrorsResponse_Error) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetLastErrorsResponse_Error) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *GetLastErrorsResponse_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_com_digitalasset_canton_health_admin_v30_status_service_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x13, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9f, 0x0d, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x5f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x6f,
	0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x5b, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0xe7, 0x03, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x60, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33,
	0x30, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12,
	0x68, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0xb3, 0x04, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x02,
	0x6f, 0x6b, 0x12, 0x71, 0x0a, 0x08, 0x64, 0x65, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x12, 0x6b, 0x0a, 0x05, 0x66, 0x61, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x05, 0x66, 0x61, 0x74, 0x61,
	0x6c, 0x1a, 0x4c, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x8f, 0x03, 0x0a, 0x0e, 0x4e, 0x6f,
	0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x1a, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x5f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x17, 0x77, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x17, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46,
	0x6f, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x2a, 0x0a, 0x26, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x45,
	0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x57,
	0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x2c,
	0x0a, 0x28, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x45, 0x58,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4e, 0x4f, 0x44,
	0x45, 0x5f, 0x54, 0x4f, 0x50, 0x4f, 0x4c, 0x4f, 0x47, 0x59, 0x10, 0x02, 0x12, 0x2d, 0x0a, 0x29,
	0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x45, 0x58, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x42, 0x0a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0xf2, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x7c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x43, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x22, 0xa5, 0x02, 0x0a, 0x13, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x73,
	0x12, 0x5d, 0x0a, 0x09, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x05,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x22, 0x67, 0x0a, 0x15, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4a, 0x0a, 0x14, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x12, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5d, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x3c,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x32, 0xd7, 0x05, 0x0a,
	0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64,
	0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x33, 0x30, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x0a,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x44, 0x75, 0x6d, 0x70, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x44, 0x75, 0x6d, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x8a, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69,
	0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33,
	0x30, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33,
	0x30, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x42, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x59, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x33,
	0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescData = file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDesc
)

func file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescData)
	})
	return file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDescData
}

var file_com_digitalasset_canton_health_admin_v30_status_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_com_digitalasset_canton_health_admin_v30_status_service_proto_goTypes = []any{
	(StatusResponse_NotInitialized_WaitingForExternalInput)(0), // 0: com.digitalasset.canton.health.admin.v30.StatusResponse.NotInitialized.WaitingForExternalInput
	(*TopologyQueueStatus)(nil),                                // 1: com.digitalasset.canton.health.admin.v30.TopologyQueueStatus
	(*StatusRequest)(nil),                                      // 2: com.digitalasset.canton.health.admin.v30.StatusRequest
	(*StatusResponse)(nil),                                     // 3: com.digitalasset.canton.health.admin.v30.StatusResponse
	(*HealthDumpRequest)(nil),                                  // 4: com.digitalasset.canton.health.admin.v30.HealthDumpRequest
	(*HealthDumpResponse)(nil),                                 // 5: com.digitalasset.canton.health.admin.v30.HealthDumpResponse
	(*ParticipantStatusInfo)(nil),                              // 6: com.digitalasset.canton.health.admin.v30.ParticipantStatusInfo
	(*SequencerNodeStatus)(nil),                                // 7: com.digitalasset.canton.health.admin.v30.SequencerNodeStatus
	(*SequencerHealthStatus)(nil),                              // 8: com.digitalasset.canton.health.admin.v30.SequencerHealthStatus
	(*SequencerAdminStatus)(nil),                               // 9: com.digitalasset.canton.health.admin.v30.SequencerAdminStatus
	(*MediatorNodeStatus)(nil),                                 // 10: com.digitalasset.canton.health.admin.v30.MediatorNodeStatus
	(*SetLogLevelRequest)(nil),                                 // 11: com.digitalasset.canton.health.admin.v30.SetLogLevelRequest
	(*SetLogLevelResponse)(nil),                                // 12: com.digitalasset.canton.health.admin.v30.SetLogLevelResponse
	(*GetLastErrorsRequest)(nil),                               // 13: com.digitalasset.canton.health.admin.v30.GetLastErrorsRequest
	(*GetLastErrorsResponse)(nil),                              // 14: com.digitalasset.canton.health.admin.v30.GetLastErrorsResponse
	(*GetLastErrorTraceRequest)(nil),                           // 15: com.digitalasset.canton.health.admin.v30.GetLastErrorTraceRequest
	(*GetLastErrorTraceResponse)(nil),                          // 16: com.digitalasset.canton.health.admin.v30.GetLastErrorTraceResponse
	(*StatusResponse_Status)(nil),                              // 17: com.digitalasset.canton.health.admin.v30.StatusResponse.Status
	(*StatusResponse_ComponentStatus)(nil),                     // 18: com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus
	(*StatusResponse_NotInitialized)(nil),                      // 19: com.digitalasset.canton.health.admin.v30.StatusResponse.NotInitialized
	nil,                                                        // 20: com.digitalasset.canton.health.admin.v30.StatusResponse.Status.PortsEntry
	(*StatusResponse_ComponentStatus_StatusData)(nil),          // 21: com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.StatusData
	(*ParticipantStatusInfo_ConnectedDomain)(nil),              // 22: com.digitalasset.canton.health.admin.v30.ParticipantStatusInfo.ConnectedDomain
	(*GetLastErrorsResponse_Error)(nil),                        // 23: com.digitalasset.canton.health.admin.v30.GetLastErrorsResponse.Error
	(*wrapperspb.UInt32Value)(nil),                             // 24: google.protobuf.UInt32Value
	(*wrapperspb.StringValue)(nil),                             // 25: google.protobuf.StringValue
	(*durationpb.Duration)(nil),                                // 26: google.protobuf.Duration
}
var file_com_digitalasset_canton_health_admin_v30_status_service_proto_depIdxs = []int32{
	19, // 0: com.digitalasset.canton.health.admin.v30.StatusResponse.not_initialized:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.NotInitialized
	17, // 1: com.digitalasset.canton.health.admin.v30.StatusResponse.success:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.Status
	24, // 2: com.digitalasset.canton.health.admin.v30.HealthDumpRequest.chunk_size:type_name -> google.protobuf.UInt32Value
	22, // 3: com.digitalasset.canton.health.admin.v30.ParticipantStatusInfo.connected_domains:type_name -> com.digitalasset.canton.health.admin.v30.ParticipantStatusInfo.ConnectedDomain
	8,  // 4: com.digitalasset.canton.health.admin.v30.SequencerNodeStatus.sequencer:type_name -> com.digitalasset.canton.health.admin.v30.SequencerHealthStatus
	9,  // 5: com.digitalasset.canton.health.admin.v30.SequencerNodeStatus.admin:type_name -> com.digitalasset.canton.health.admin.v30.SequencerAdminStatus
	25, // 6: com.digitalasset.canton.health.admin.v30.SequencerHealthStatus.details:type_name -> google.protobuf.StringValue
	23, // 7: com.digitalasset.canton.health.admin.v30.GetLastErrorsResponse.errors:type_name -> com.digitalasset.canton.health.admin.v30.GetLastErrorsResponse.Error
	26, // 8: com.digitalasset.canton.health.admin.v30.StatusResponse.Status.uptime:type_name -> google.protobuf.Duration
	20, // 9: com.digitalasset.canton.health.admin.v30.StatusResponse.Status.ports:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.Status.PortsEntry
	1,  // 10: com.digitalasset.canton.health.admin.v30.StatusResponse.Status.topology_queues:type_name -> com.digitalasset.canton.health.admin.v30.TopologyQueueStatus
	18, // 11: com.digitalasset.canton.health.admin.v30.StatusResponse.Status.components:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus
	21, // 12: com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.ok:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.StatusData
	21, // 13: com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.degraded:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.StatusData
	21, // 14: com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.failed:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.StatusData
	21, // 15: com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.fatal:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.StatusData
	0,  // 16: com.digitalasset.canton.health.admin.v30.StatusResponse.NotInitialized.waiting_for_external_input:type_name -> com.digitalasset.canton.health.admin.v30.StatusResponse.NotInitialized.WaitingForExternalInput
	25, // 17: com.digitalasset.canton.health.admin.v30.StatusResponse.ComponentStatus.StatusData.description:type_name -> google.protobuf.StringValue
	2,  // 18: com.digitalasset.canton.health.admin.v30.StatusService.Status:input_type -> com.digitalasset.canton.health.admin.v30.StatusRequest
	4,  // 19: com.digitalasset.canton.health.admin.v30.StatusService.HealthDump:input_type -> com.digitalasset.canton.health.admin.v30.HealthDumpRequest
	11, // 20: com.digitalasset.canton.health.admin.v30.StatusService.SetLogLevel:input_type -> com.digitalasset.canton.health.admin.v30.SetLogLevelRequest
	13, // 21: com.digitalasset.canton.health.admin.v30.StatusService.GetLastErrors:input_type -> com.digitalasset.canton.health.admin.v30.GetLastErrorsRequest
	15, // 22: com.digitalasset.canton.health.admin.v30.StatusService.GetLastErrorTrace:input_type -> com.digitalasset.canton.health.admin.v30.GetLastErrorTraceRequest
	3,  // 23: com.digitalasset.canton.health.admin.v30.StatusService.Status:output_type -> com.digitalasset.canton.health.admin.v30.StatusResponse
	5,  // 24: com.digitalasset.canton.health.admin.v30.StatusService.HealthDump:output_type -> com.digitalasset.canton.health.admin.v30.HealthDumpResponse
	12, // 25: com.digitalasset.canton.health.admin.v30.StatusService.SetLogLevel:output_type -> com.digitalasset.canton.health.admin.v30.SetLogLevelResponse
	14, // 26: com.digitalasset.canton.health.admin.v30.StatusService.GetLastErrors:output_type -> com.digitalasset.canton.health.admin.v30.GetLastErrorsResponse
	16, // 27: com.digitalasset.canton.health.admin.v30.StatusService.GetLastErrorTrace:output_type -> com.digitalasset.canton.health.admin.v30.GetLastErrorTraceResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_com_digitalasset_canton_health_admin_v30_status_service_proto_init() }
func file_com_digitalasset_canton_health_admin_v30_status_service_proto_init() {
	if File_com_digitalasset_canton_health_admin_v30_status_service_proto != nil {
		return
	}
	file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[2].OneofWrappers = []any{
		(*StatusResponse_NotInitialized_)(nil),
		(*StatusResponse_Success)(nil),
	}
	file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes[17].OneofWrappers = []any{
		(*StatusResponse_ComponentStatus_Ok)(nil),
		(*StatusResponse_ComponentStatus_Degraded)(nil),
		(*StatusResponse_ComponentStatus_Failed)(nil),
		(*StatusResponse_ComponentStatus_Fatal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_health_admin_v30_status_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_health_admin_v30_status_service_proto_depIdxs,
		EnumInfos:         file_com_digitalasset_canton_health_admin_v30_status_service_proto_enumTypes,
		MessageInfos:      file_com_digitalasset_canton_health_admin_v30_status_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_health_admin_v30_status_service_proto = out.File
	file_com_digitalasset_canton_health_admin_v30_status_service_proto_rawDesc = nil
	file_com_digitalasset_canton_health_admin_v30_status_service_proto_goTypes = nil
	file_com_digitalasset_canton_health_admin_v30_status_service_proto_depIdxs = nil
}
