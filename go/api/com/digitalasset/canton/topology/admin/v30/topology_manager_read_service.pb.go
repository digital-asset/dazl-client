// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/topology/admin/v30/topology_manager_read_service.proto

package v30

import (
	v30 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v30"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseQuery struct {
	state     protoimpl.MessageState     `protogen:"open.v1"`
	Store     *StoreId                   `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	Proposals bool                       `protobuf:"varint,2,opt,name=proposals,proto3" json:"proposals,omitempty"`
	Operation v30.Enums_TopologyChangeOp `protobuf:"varint,3,opt,name=operation,proto3,enum=com.digitalasset.canton.protocol.v30.Enums_TopologyChangeOp" json:"operation,omitempty"`
	// Types that are valid to be assigned to TimeQuery:
	//
	//	*BaseQuery_Snapshot
	//	*BaseQuery_HeadState
	//	*BaseQuery_Range
	TimeQuery       isBaseQuery_TimeQuery `protobuf_oneof:"time_query"`
	FilterSignedKey string                `protobuf:"bytes,8,opt,name=filter_signed_key,json=filterSignedKey,proto3" json:"filter_signed_key,omitempty"`
	ProtocolVersion *int32                `protobuf:"varint,9,opt,name=protocol_version,json=protocolVersion,proto3,oneof" json:"protocol_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BaseQuery) Reset() {
	*x = BaseQuery{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseQuery) ProtoMessage() {}

func (x *BaseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseQuery.ProtoReflect.Descriptor instead.
func (*BaseQuery) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{0}
}

func (x *BaseQuery) GetStore() *StoreId {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *BaseQuery) GetProposals() bool {
	if x != nil {
		return x.Proposals
	}
	return false
}

func (x *BaseQuery) GetOperation() v30.Enums_TopologyChangeOp {
	if x != nil {
		return x.Operation
	}
	return v30.Enums_TopologyChangeOp(0)
}

func (x *BaseQuery) GetTimeQuery() isBaseQuery_TimeQuery {
	if x != nil {
		return x.TimeQuery
	}
	return nil
}

func (x *BaseQuery) GetSnapshot() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.TimeQuery.(*BaseQuery_Snapshot); ok {
			return x.Snapshot
		}
	}
	return nil
}

func (x *BaseQuery) GetHeadState() *emptypb.Empty {
	if x != nil {
		if x, ok := x.TimeQuery.(*BaseQuery_HeadState); ok {
			return x.HeadState
		}
	}
	return nil
}

func (x *BaseQuery) GetRange() *BaseQuery_TimeRange {
	if x != nil {
		if x, ok := x.TimeQuery.(*BaseQuery_Range); ok {
			return x.Range
		}
	}
	return nil
}

func (x *BaseQuery) GetFilterSignedKey() string {
	if x != nil {
		return x.FilterSignedKey
	}
	return ""
}

func (x *BaseQuery) GetProtocolVersion() int32 {
	if x != nil && x.ProtocolVersion != nil {
		return *x.ProtocolVersion
	}
	return 0
}

type isBaseQuery_TimeQuery interface {
	isBaseQuery_TimeQuery()
}

type BaseQuery_Snapshot struct {
	Snapshot *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=snapshot,proto3,oneof"`
}

type BaseQuery_HeadState struct {
	HeadState *emptypb.Empty `protobuf:"bytes,6,opt,name=head_state,json=headState,proto3,oneof"`
}

type BaseQuery_Range struct {
	Range *BaseQuery_TimeRange `protobuf:"bytes,7,opt,name=range,proto3,oneof"`
}

func (*BaseQuery_Snapshot) isBaseQuery_TimeQuery() {}

func (*BaseQuery_HeadState) isBaseQuery_TimeQuery() {}

func (*BaseQuery_Range) isBaseQuery_TimeQuery() {}

type BaseResult struct {
	state                protoimpl.MessageState     `protogen:"open.v1"`
	Store                *StoreId                   `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	Sequenced            *timestamppb.Timestamp     `protobuf:"bytes,2,opt,name=sequenced,proto3" json:"sequenced,omitempty"`
	ValidFrom            *timestamppb.Timestamp     `protobuf:"bytes,3,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidUntil           *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Operation            v30.Enums_TopologyChangeOp `protobuf:"varint,5,opt,name=operation,proto3,enum=com.digitalasset.canton.protocol.v30.Enums_TopologyChangeOp" json:"operation,omitempty"`
	TransactionHash      []byte                     `protobuf:"bytes,6,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	Serial               int32                      `protobuf:"varint,7,opt,name=serial,proto3" json:"serial,omitempty"`
	SignedByFingerprints []string                   `protobuf:"bytes,8,rep,name=signed_by_fingerprints,json=signedByFingerprints,proto3" json:"signed_by_fingerprints,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BaseResult) Reset() {
	*x = BaseResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResult) ProtoMessage() {}

func (x *BaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResult.ProtoReflect.Descriptor instead.
func (*BaseResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{1}
}

func (x *BaseResult) GetStore() *StoreId {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *BaseResult) GetSequenced() *timestamppb.Timestamp {
	if x != nil {
		return x.Sequenced
	}
	return nil
}

func (x *BaseResult) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *BaseResult) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *BaseResult) GetOperation() v30.Enums_TopologyChangeOp {
	if x != nil {
		return x.Operation
	}
	return v30.Enums_TopologyChangeOp(0)
}

func (x *BaseResult) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *BaseResult) GetSerial() int32 {
	if x != nil {
		return x.Serial
	}
	return 0
}

func (x *BaseResult) GetSignedByFingerprints() []string {
	if x != nil {
		return x.SignedByFingerprints
	}
	return nil
}

type ListNamespaceDelegationRequest struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery                  *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterNamespace            string                 `protobuf:"bytes,2,opt,name=filter_namespace,json=filterNamespace,proto3" json:"filter_namespace,omitempty"`
	FilterTargetKeyFingerprint string                 `protobuf:"bytes,3,opt,name=filter_target_key_fingerprint,json=filterTargetKeyFingerprint,proto3" json:"filter_target_key_fingerprint,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ListNamespaceDelegationRequest) Reset() {
	*x = ListNamespaceDelegationRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespaceDelegationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceDelegationRequest) ProtoMessage() {}

func (x *ListNamespaceDelegationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceDelegationRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceDelegationRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListNamespaceDelegationRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListNamespaceDelegationRequest) GetFilterNamespace() string {
	if x != nil {
		return x.FilterNamespace
	}
	return ""
}

func (x *ListNamespaceDelegationRequest) GetFilterTargetKeyFingerprint() string {
	if x != nil {
		return x.FilterTargetKeyFingerprint
	}
	return ""
}

type ListNamespaceDelegationResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Results       []*ListNamespaceDelegationResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespaceDelegationResponse) Reset() {
	*x = ListNamespaceDelegationResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespaceDelegationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceDelegationResponse) ProtoMessage() {}

func (x *ListNamespaceDelegationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceDelegationResponse.ProtoReflect.Descriptor instead.
func (*ListNamespaceDelegationResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListNamespaceDelegationResponse) GetResults() []*ListNamespaceDelegationResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListDecentralizedNamespaceDefinitionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery       *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterNamespace string                 `protobuf:"bytes,2,opt,name=filter_namespace,json=filterNamespace,proto3" json:"filter_namespace,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListDecentralizedNamespaceDefinitionRequest) Reset() {
	*x = ListDecentralizedNamespaceDefinitionRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDecentralizedNamespaceDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDecentralizedNamespaceDefinitionRequest) ProtoMessage() {}

func (x *ListDecentralizedNamespaceDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDecentralizedNamespaceDefinitionRequest.ProtoReflect.Descriptor instead.
func (*ListDecentralizedNamespaceDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListDecentralizedNamespaceDefinitionRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListDecentralizedNamespaceDefinitionRequest) GetFilterNamespace() string {
	if x != nil {
		return x.FilterNamespace
	}
	return ""
}

type ListDecentralizedNamespaceDefinitionResponse struct {
	state         protoimpl.MessageState                                 `protogen:"open.v1"`
	Results       []*ListDecentralizedNamespaceDefinitionResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDecentralizedNamespaceDefinitionResponse) Reset() {
	*x = ListDecentralizedNamespaceDefinitionResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDecentralizedNamespaceDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDecentralizedNamespaceDefinitionResponse) ProtoMessage() {}

func (x *ListDecentralizedNamespaceDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDecentralizedNamespaceDefinitionResponse.ProtoReflect.Descriptor instead.
func (*ListDecentralizedNamespaceDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListDecentralizedNamespaceDefinitionResponse) GetResults() []*ListDecentralizedNamespaceDefinitionResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListOwnerToKeyMappingRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery          *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterKeyOwnerType string                 `protobuf:"bytes,2,opt,name=filter_key_owner_type,json=filterKeyOwnerType,proto3" json:"filter_key_owner_type,omitempty"`
	FilterKeyOwnerUid  string                 `protobuf:"bytes,3,opt,name=filter_key_owner_uid,json=filterKeyOwnerUid,proto3" json:"filter_key_owner_uid,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListOwnerToKeyMappingRequest) Reset() {
	*x = ListOwnerToKeyMappingRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnerToKeyMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnerToKeyMappingRequest) ProtoMessage() {}

func (x *ListOwnerToKeyMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnerToKeyMappingRequest.ProtoReflect.Descriptor instead.
func (*ListOwnerToKeyMappingRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListOwnerToKeyMappingRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListOwnerToKeyMappingRequest) GetFilterKeyOwnerType() string {
	if x != nil {
		return x.FilterKeyOwnerType
	}
	return ""
}

func (x *ListOwnerToKeyMappingRequest) GetFilterKeyOwnerUid() string {
	if x != nil {
		return x.FilterKeyOwnerUid
	}
	return ""
}

type ListOwnerToKeyMappingResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Results       []*ListOwnerToKeyMappingResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOwnerToKeyMappingResponse) Reset() {
	*x = ListOwnerToKeyMappingResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnerToKeyMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnerToKeyMappingResponse) ProtoMessage() {}

func (x *ListOwnerToKeyMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnerToKeyMappingResponse.ProtoReflect.Descriptor instead.
func (*ListOwnerToKeyMappingResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListOwnerToKeyMappingResponse) GetResults() []*ListOwnerToKeyMappingResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListPartyToKeyMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery     *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterParty   string                 `protobuf:"bytes,2,opt,name=filter_party,json=filterParty,proto3" json:"filter_party,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToKeyMappingRequest) Reset() {
	*x = ListPartyToKeyMappingRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToKeyMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToKeyMappingRequest) ProtoMessage() {}

func (x *ListPartyToKeyMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToKeyMappingRequest.ProtoReflect.Descriptor instead.
func (*ListPartyToKeyMappingRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListPartyToKeyMappingRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListPartyToKeyMappingRequest) GetFilterParty() string {
	if x != nil {
		return x.FilterParty
	}
	return ""
}

type ListPartyToKeyMappingResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Results       []*ListPartyToKeyMappingResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToKeyMappingResponse) Reset() {
	*x = ListPartyToKeyMappingResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToKeyMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToKeyMappingResponse) ProtoMessage() {}

func (x *ListPartyToKeyMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToKeyMappingResponse.ProtoReflect.Descriptor instead.
func (*ListPartyToKeyMappingResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListPartyToKeyMappingResponse) GetResults() []*ListPartyToKeyMappingResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListSynchronizerTrustCertificateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery     *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterUid     string                 `protobuf:"bytes,2,opt,name=filter_uid,json=filterUid,proto3" json:"filter_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSynchronizerTrustCertificateRequest) Reset() {
	*x = ListSynchronizerTrustCertificateRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSynchronizerTrustCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSynchronizerTrustCertificateRequest) ProtoMessage() {}

func (x *ListSynchronizerTrustCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSynchronizerTrustCertificateRequest.ProtoReflect.Descriptor instead.
func (*ListSynchronizerTrustCertificateRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListSynchronizerTrustCertificateRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListSynchronizerTrustCertificateRequest) GetFilterUid() string {
	if x != nil {
		return x.FilterUid
	}
	return ""
}

type ListSynchronizerTrustCertificateResponse struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Results       []*ListSynchronizerTrustCertificateResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSynchronizerTrustCertificateResponse) Reset() {
	*x = ListSynchronizerTrustCertificateResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSynchronizerTrustCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSynchronizerTrustCertificateResponse) ProtoMessage() {}

func (x *ListSynchronizerTrustCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSynchronizerTrustCertificateResponse.ProtoReflect.Descriptor instead.
func (*ListSynchronizerTrustCertificateResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListSynchronizerTrustCertificateResponse) GetResults() []*ListSynchronizerTrustCertificateResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListParticipantSynchronizerPermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery     *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterUid     string                 `protobuf:"bytes,2,opt,name=filter_uid,json=filterUid,proto3" json:"filter_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListParticipantSynchronizerPermissionRequest) Reset() {
	*x = ListParticipantSynchronizerPermissionRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListParticipantSynchronizerPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantSynchronizerPermissionRequest) ProtoMessage() {}

func (x *ListParticipantSynchronizerPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantSynchronizerPermissionRequest.ProtoReflect.Descriptor instead.
func (*ListParticipantSynchronizerPermissionRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListParticipantSynchronizerPermissionRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListParticipantSynchronizerPermissionRequest) GetFilterUid() string {
	if x != nil {
		return x.FilterUid
	}
	return ""
}

type ListParticipantSynchronizerPermissionResponse struct {
	state         protoimpl.MessageState                                  `protogen:"open.v1"`
	Results       []*ListParticipantSynchronizerPermissionResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListParticipantSynchronizerPermissionResponse) Reset() {
	*x = ListParticipantSynchronizerPermissionResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListParticipantSynchronizerPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantSynchronizerPermissionResponse) ProtoMessage() {}

func (x *ListParticipantSynchronizerPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantSynchronizerPermissionResponse.ProtoReflect.Descriptor instead.
func (*ListParticipantSynchronizerPermissionResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListParticipantSynchronizerPermissionResponse) GetResults() []*ListParticipantSynchronizerPermissionResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListPartyHostingLimitsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery     *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterUid     string                 `protobuf:"bytes,2,opt,name=filter_uid,json=filterUid,proto3" json:"filter_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyHostingLimitsRequest) Reset() {
	*x = ListPartyHostingLimitsRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyHostingLimitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyHostingLimitsRequest) ProtoMessage() {}

func (x *ListPartyHostingLimitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyHostingLimitsRequest.ProtoReflect.Descriptor instead.
func (*ListPartyHostingLimitsRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListPartyHostingLimitsRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListPartyHostingLimitsRequest) GetFilterUid() string {
	if x != nil {
		return x.FilterUid
	}
	return ""
}

type ListPartyHostingLimitsResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Results       []*ListPartyHostingLimitsResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyHostingLimitsResponse) Reset() {
	*x = ListPartyHostingLimitsResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyHostingLimitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyHostingLimitsResponse) ProtoMessage() {}

func (x *ListPartyHostingLimitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyHostingLimitsResponse.ProtoReflect.Descriptor instead.
func (*ListPartyHostingLimitsResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListPartyHostingLimitsResponse) GetResults() []*ListPartyHostingLimitsResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListVettedPackagesRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery         *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterParticipant string                 `protobuf:"bytes,2,opt,name=filter_participant,json=filterParticipant,proto3" json:"filter_participant,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListVettedPackagesRequest) Reset() {
	*x = ListVettedPackagesRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVettedPackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVettedPackagesRequest) ProtoMessage() {}

func (x *ListVettedPackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVettedPackagesRequest.ProtoReflect.Descriptor instead.
func (*ListVettedPackagesRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListVettedPackagesRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListVettedPackagesRequest) GetFilterParticipant() string {
	if x != nil {
		return x.FilterParticipant
	}
	return ""
}

type ListVettedPackagesResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Results       []*ListVettedPackagesResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVettedPackagesResponse) Reset() {
	*x = ListVettedPackagesResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVettedPackagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVettedPackagesResponse) ProtoMessage() {}

func (x *ListVettedPackagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVettedPackagesResponse.ProtoReflect.Descriptor instead.
func (*ListVettedPackagesResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListVettedPackagesResponse) GetResults() []*ListVettedPackagesResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListPartyToParticipantRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery         *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterParty       string                 `protobuf:"bytes,2,opt,name=filter_party,json=filterParty,proto3" json:"filter_party,omitempty"`
	FilterParticipant string                 `protobuf:"bytes,3,opt,name=filter_participant,json=filterParticipant,proto3" json:"filter_participant,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListPartyToParticipantRequest) Reset() {
	*x = ListPartyToParticipantRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToParticipantRequest) ProtoMessage() {}

func (x *ListPartyToParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToParticipantRequest.ProtoReflect.Descriptor instead.
func (*ListPartyToParticipantRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListPartyToParticipantRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListPartyToParticipantRequest) GetFilterParty() string {
	if x != nil {
		return x.FilterParty
	}
	return ""
}

func (x *ListPartyToParticipantRequest) GetFilterParticipant() string {
	if x != nil {
		return x.FilterParticipant
	}
	return ""
}

type ListPartyToParticipantResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Results       []*ListPartyToParticipantResponse_Result `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToParticipantResponse) Reset() {
	*x = ListPartyToParticipantResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToParticipantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToParticipantResponse) ProtoMessage() {}

func (x *ListPartyToParticipantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToParticipantResponse.ProtoReflect.Descriptor instead.
func (*ListPartyToParticipantResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListPartyToParticipantResponse) GetResults() []*ListPartyToParticipantResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListSynchronizerParametersStateRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery            *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterSynchronizerId string                 `protobuf:"bytes,2,opt,name=filter_synchronizer_id,json=filterSynchronizerId,proto3" json:"filter_synchronizer_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListSynchronizerParametersStateRequest) Reset() {
	*x = ListSynchronizerParametersStateRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSynchronizerParametersStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSynchronizerParametersStateRequest) ProtoMessage() {}

func (x *ListSynchronizerParametersStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSynchronizerParametersStateRequest.ProtoReflect.Descriptor instead.
func (*ListSynchronizerParametersStateRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListSynchronizerParametersStateRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListSynchronizerParametersStateRequest) GetFilterSynchronizerId() string {
	if x != nil {
		return x.FilterSynchronizerId
	}
	return ""
}

type ListSynchronizerParametersStateResponse struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Results       []*ListSynchronizerParametersStateResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSynchronizerParametersStateResponse) Reset() {
	*x = ListSynchronizerParametersStateResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSynchronizerParametersStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSynchronizerParametersStateResponse) ProtoMessage() {}

func (x *ListSynchronizerParametersStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSynchronizerParametersStateResponse.ProtoReflect.Descriptor instead.
func (*ListSynchronizerParametersStateResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListSynchronizerParametersStateResponse) GetResults() []*ListSynchronizerParametersStateResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListMediatorSynchronizerStateRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery            *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterSynchronizerId string                 `protobuf:"bytes,2,opt,name=filter_synchronizer_id,json=filterSynchronizerId,proto3" json:"filter_synchronizer_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListMediatorSynchronizerStateRequest) Reset() {
	*x = ListMediatorSynchronizerStateRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediatorSynchronizerStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediatorSynchronizerStateRequest) ProtoMessage() {}

func (x *ListMediatorSynchronizerStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediatorSynchronizerStateRequest.ProtoReflect.Descriptor instead.
func (*ListMediatorSynchronizerStateRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListMediatorSynchronizerStateRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListMediatorSynchronizerStateRequest) GetFilterSynchronizerId() string {
	if x != nil {
		return x.FilterSynchronizerId
	}
	return ""
}

type ListMediatorSynchronizerStateResponse struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Results       []*ListMediatorSynchronizerStateResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMediatorSynchronizerStateResponse) Reset() {
	*x = ListMediatorSynchronizerStateResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediatorSynchronizerStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediatorSynchronizerStateResponse) ProtoMessage() {}

func (x *ListMediatorSynchronizerStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediatorSynchronizerStateResponse.ProtoReflect.Descriptor instead.
func (*ListMediatorSynchronizerStateResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListMediatorSynchronizerStateResponse) GetResults() []*ListMediatorSynchronizerStateResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListSequencerSynchronizerStateRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery            *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterSynchronizerId string                 `protobuf:"bytes,2,opt,name=filter_synchronizer_id,json=filterSynchronizerId,proto3" json:"filter_synchronizer_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListSequencerSynchronizerStateRequest) Reset() {
	*x = ListSequencerSynchronizerStateRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSequencerSynchronizerStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSequencerSynchronizerStateRequest) ProtoMessage() {}

func (x *ListSequencerSynchronizerStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSequencerSynchronizerStateRequest.ProtoReflect.Descriptor instead.
func (*ListSequencerSynchronizerStateRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListSequencerSynchronizerStateRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListSequencerSynchronizerStateRequest) GetFilterSynchronizerId() string {
	if x != nil {
		return x.FilterSynchronizerId
	}
	return ""
}

type ListSequencerSynchronizerStateResponse struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Results       []*ListSequencerSynchronizerStateResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSequencerSynchronizerStateResponse) Reset() {
	*x = ListSequencerSynchronizerStateResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSequencerSynchronizerStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSequencerSynchronizerStateResponse) ProtoMessage() {}

func (x *ListSequencerSynchronizerStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSequencerSynchronizerStateResponse.ProtoReflect.Descriptor instead.
func (*ListSequencerSynchronizerStateResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListSequencerSynchronizerStateResponse) GetResults() []*ListSequencerSynchronizerStateResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListPurgeTopologyTransactionRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery            *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterSynchronizerId string                 `protobuf:"bytes,2,opt,name=filter_synchronizer_id,json=filterSynchronizerId,proto3" json:"filter_synchronizer_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListPurgeTopologyTransactionRequest) Reset() {
	*x = ListPurgeTopologyTransactionRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPurgeTopologyTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPurgeTopologyTransactionRequest) ProtoMessage() {}

func (x *ListPurgeTopologyTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPurgeTopologyTransactionRequest.ProtoReflect.Descriptor instead.
func (*ListPurgeTopologyTransactionRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{26}
}

func (x *ListPurgeTopologyTransactionRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListPurgeTopologyTransactionRequest) GetFilterSynchronizerId() string {
	if x != nil {
		return x.FilterSynchronizerId
	}
	return ""
}

type ListPurgeTopologyTransactionResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Results       []*ListPurgeTopologyTransactionResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPurgeTopologyTransactionResponse) Reset() {
	*x = ListPurgeTopologyTransactionResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPurgeTopologyTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPurgeTopologyTransactionResponse) ProtoMessage() {}

func (x *ListPurgeTopologyTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPurgeTopologyTransactionResponse.ProtoReflect.Descriptor instead.
func (*ListPurgeTopologyTransactionResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{27}
}

func (x *ListPurgeTopologyTransactionResponse) GetResults() []*ListPurgeTopologyTransactionResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListAvailableStoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAvailableStoresRequest) Reset() {
	*x = ListAvailableStoresRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableStoresRequest) ProtoMessage() {}

func (x *ListAvailableStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableStoresRequest.ProtoReflect.Descriptor instead.
func (*ListAvailableStoresRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{28}
}

type ListAvailableStoresResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreIds      []*StoreId             `protobuf:"bytes,1,rep,name=store_ids,json=storeIds,proto3" json:"store_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAvailableStoresResponse) Reset() {
	*x = ListAvailableStoresResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableStoresResponse) ProtoMessage() {}

func (x *ListAvailableStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableStoresResponse.ProtoReflect.Descriptor instead.
func (*ListAvailableStoresResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListAvailableStoresResponse) GetStoreIds() []*StoreId {
	if x != nil {
		return x.StoreIds
	}
	return nil
}

type ListAllRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery       *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	ExcludeMappings []string               `protobuf:"bytes,2,rep,name=exclude_mappings,json=excludeMappings,proto3" json:"exclude_mappings,omitempty"`
	FilterNamespace string                 `protobuf:"bytes,3,opt,name=filter_namespace,json=filterNamespace,proto3" json:"filter_namespace,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListAllRequest) Reset() {
	*x = ListAllRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllRequest) ProtoMessage() {}

func (x *ListAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllRequest.ProtoReflect.Descriptor instead.
func (*ListAllRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{30}
}

func (x *ListAllRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListAllRequest) GetExcludeMappings() []string {
	if x != nil {
		return x.ExcludeMappings
	}
	return nil
}

func (x *ListAllRequest) GetFilterNamespace() string {
	if x != nil {
		return x.FilterNamespace
	}
	return ""
}

type ExportTopologySnapshotRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery       *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	ExcludeMappings []string               `protobuf:"bytes,2,rep,name=exclude_mappings,json=excludeMappings,proto3" json:"exclude_mappings,omitempty"`
	FilterNamespace string                 `protobuf:"bytes,3,opt,name=filter_namespace,json=filterNamespace,proto3" json:"filter_namespace,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExportTopologySnapshotRequest) Reset() {
	*x = ExportTopologySnapshotRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTopologySnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTopologySnapshotRequest) ProtoMessage() {}

func (x *ExportTopologySnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTopologySnapshotRequest.ProtoReflect.Descriptor instead.
func (*ExportTopologySnapshotRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{31}
}

func (x *ExportTopologySnapshotRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ExportTopologySnapshotRequest) GetExcludeMappings() []string {
	if x != nil {
		return x.ExcludeMappings
	}
	return nil
}

func (x *ExportTopologySnapshotRequest) GetFilterNamespace() string {
	if x != nil {
		return x.FilterNamespace
	}
	return ""
}

type ListAllResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *TopologyTransactions  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllResponse) Reset() {
	*x = ListAllResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllResponse) ProtoMessage() {}

func (x *ListAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllResponse.ProtoReflect.Descriptor instead.
func (*ListAllResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{32}
}

func (x *ListAllResponse) GetResult() *TopologyTransactions {
	if x != nil {
		return x.Result
	}
	return nil
}

type ExportTopologySnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportTopologySnapshotResponse) Reset() {
	*x = ExportTopologySnapshotResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportTopologySnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportTopologySnapshotResponse) ProtoMessage() {}

func (x *ExportTopologySnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportTopologySnapshotResponse.ProtoReflect.Descriptor instead.
func (*ExportTopologySnapshotResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{33}
}

func (x *ExportTopologySnapshotResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type GenesisStateRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SynchronizerStore *StoreId               `protobuf:"bytes,1,opt,name=synchronizer_store,json=synchronizerStore,proto3,oneof" json:"synchronizer_store,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GenesisStateRequest) Reset() {
	*x = GenesisStateRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenesisStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisStateRequest) ProtoMessage() {}

func (x *GenesisStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisStateRequest.ProtoReflect.Descriptor instead.
func (*GenesisStateRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{34}
}

func (x *GenesisStateRequest) GetSynchronizerStore() *StoreId {
	if x != nil {
		return x.SynchronizerStore
	}
	return nil
}

func (x *GenesisStateRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GenesisStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenesisStateResponse) Reset() {
	*x = GenesisStateResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenesisStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisStateResponse) ProtoMessage() {}

func (x *GenesisStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisStateResponse.ProtoReflect.Descriptor instead.
func (*GenesisStateResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{35}
}

func (x *GenesisStateResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type BaseQuery_TimeRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Until         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=until,proto3" json:"until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseQuery_TimeRange) Reset() {
	*x = BaseQuery_TimeRange{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseQuery_TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseQuery_TimeRange) ProtoMessage() {}

func (x *BaseQuery_TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseQuery_TimeRange.ProtoReflect.Descriptor instead.
func (*BaseQuery_TimeRange) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BaseQuery_TimeRange) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *BaseQuery_TimeRange) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

type ListNamespaceDelegationResponse_Result struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Context       *BaseResult              `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.NamespaceDelegation `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespaceDelegationResponse_Result) Reset() {
	*x = ListNamespaceDelegationResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespaceDelegationResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceDelegationResponse_Result) ProtoMessage() {}

func (x *ListNamespaceDelegationResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceDelegationResponse_Result.ProtoReflect.Descriptor instead.
func (*ListNamespaceDelegationResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListNamespaceDelegationResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListNamespaceDelegationResponse_Result) GetItem() *v30.NamespaceDelegation {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListDecentralizedNamespaceDefinitionResponse_Result struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Context       *BaseResult                           `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.DecentralizedNamespaceDefinition `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDecentralizedNamespaceDefinitionResponse_Result) Reset() {
	*x = ListDecentralizedNamespaceDefinitionResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDecentralizedNamespaceDefinitionResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDecentralizedNamespaceDefinitionResponse_Result) ProtoMessage() {}

func (x *ListDecentralizedNamespaceDefinitionResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDecentralizedNamespaceDefinitionResponse_Result.ProtoReflect.Descriptor instead.
func (*ListDecentralizedNamespaceDefinitionResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListDecentralizedNamespaceDefinitionResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListDecentralizedNamespaceDefinitionResponse_Result) GetItem() *v30.DecentralizedNamespaceDefinition {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListOwnerToKeyMappingResponse_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.OwnerToKeyMapping `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOwnerToKeyMappingResponse_Result) Reset() {
	*x = ListOwnerToKeyMappingResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnerToKeyMappingResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnerToKeyMappingResponse_Result) ProtoMessage() {}

func (x *ListOwnerToKeyMappingResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnerToKeyMappingResponse_Result.ProtoReflect.Descriptor instead.
func (*ListOwnerToKeyMappingResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListOwnerToKeyMappingResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListOwnerToKeyMappingResponse_Result) GetItem() *v30.OwnerToKeyMapping {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListPartyToKeyMappingResponse_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.PartyToKeyMapping `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToKeyMappingResponse_Result) Reset() {
	*x = ListPartyToKeyMappingResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToKeyMappingResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToKeyMappingResponse_Result) ProtoMessage() {}

func (x *ListPartyToKeyMappingResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToKeyMappingResponse_Result.ProtoReflect.Descriptor instead.
func (*ListPartyToKeyMappingResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListPartyToKeyMappingResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListPartyToKeyMappingResponse_Result) GetItem() *v30.PartyToKeyMapping {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListSynchronizerTrustCertificateResponse_Result struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Context       *BaseResult                       `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.SynchronizerTrustCertificate `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSynchronizerTrustCertificateResponse_Result) Reset() {
	*x = ListSynchronizerTrustCertificateResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSynchronizerTrustCertificateResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSynchronizerTrustCertificateResponse_Result) ProtoMessage() {}

func (x *ListSynchronizerTrustCertificateResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSynchronizerTrustCertificateResponse_Result.ProtoReflect.Descriptor instead.
func (*ListSynchronizerTrustCertificateResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListSynchronizerTrustCertificateResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListSynchronizerTrustCertificateResponse_Result) GetItem() *v30.SynchronizerTrustCertificate {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListParticipantSynchronizerPermissionResponse_Result struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Context       *BaseResult                            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.ParticipantSynchronizerPermission `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListParticipantSynchronizerPermissionResponse_Result) Reset() {
	*x = ListParticipantSynchronizerPermissionResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListParticipantSynchronizerPermissionResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantSynchronizerPermissionResponse_Result) ProtoMessage() {}

func (x *ListParticipantSynchronizerPermissionResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantSynchronizerPermissionResponse_Result.ProtoReflect.Descriptor instead.
func (*ListParticipantSynchronizerPermissionResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListParticipantSynchronizerPermissionResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListParticipantSynchronizerPermissionResponse_Result) GetItem() *v30.ParticipantSynchronizerPermission {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListPartyHostingLimitsResponse_Result struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Context       *BaseResult             `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.PartyHostingLimits `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyHostingLimitsResponse_Result) Reset() {
	*x = ListPartyHostingLimitsResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyHostingLimitsResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyHostingLimitsResponse_Result) ProtoMessage() {}

func (x *ListPartyHostingLimitsResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyHostingLimitsResponse_Result.ProtoReflect.Descriptor instead.
func (*ListPartyHostingLimitsResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ListPartyHostingLimitsResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListPartyHostingLimitsResponse_Result) GetItem() *v30.PartyHostingLimits {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListVettedPackagesResponse_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.VettedPackages    `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVettedPackagesResponse_Result) Reset() {
	*x = ListVettedPackagesResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVettedPackagesResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVettedPackagesResponse_Result) ProtoMessage() {}

func (x *ListVettedPackagesResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVettedPackagesResponse_Result.ProtoReflect.Descriptor instead.
func (*ListVettedPackagesResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ListVettedPackagesResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListVettedPackagesResponse_Result) GetItem() *v30.VettedPackages {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListPartyToParticipantResponse_Result struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Context       *BaseResult             `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.PartyToParticipant `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToParticipantResponse_Result) Reset() {
	*x = ListPartyToParticipantResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToParticipantResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToParticipantResponse_Result) ProtoMessage() {}

func (x *ListPartyToParticipantResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToParticipantResponse_Result.ProtoReflect.Descriptor instead.
func (*ListPartyToParticipantResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{19, 0}
}

func (x *ListPartyToParticipantResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListPartyToParticipantResponse_Result) GetItem() *v30.PartyToParticipant {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListSynchronizerParametersStateResponse_Result struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Context       *BaseResult                        `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.DynamicSynchronizerParameters `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSynchronizerParametersStateResponse_Result) Reset() {
	*x = ListSynchronizerParametersStateResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSynchronizerParametersStateResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSynchronizerParametersStateResponse_Result) ProtoMessage() {}

func (x *ListSynchronizerParametersStateResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSynchronizerParametersStateResponse_Result.ProtoReflect.Descriptor instead.
func (*ListSynchronizerParametersStateResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ListSynchronizerParametersStateResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListSynchronizerParametersStateResponse_Result) GetItem() *v30.DynamicSynchronizerParameters {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListMediatorSynchronizerStateResponse_Result struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Context       *BaseResult                    `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.MediatorSynchronizerState `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMediatorSynchronizerStateResponse_Result) Reset() {
	*x = ListMediatorSynchronizerStateResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediatorSynchronizerStateResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediatorSynchronizerStateResponse_Result) ProtoMessage() {}

func (x *ListMediatorSynchronizerStateResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediatorSynchronizerStateResponse_Result.ProtoReflect.Descriptor instead.
func (*ListMediatorSynchronizerStateResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{23, 0}
}

func (x *ListMediatorSynchronizerStateResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListMediatorSynchronizerStateResponse_Result) GetItem() *v30.MediatorSynchronizerState {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListSequencerSynchronizerStateResponse_Result struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Context       *BaseResult                     `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.SequencerSynchronizerState `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSequencerSynchronizerStateResponse_Result) Reset() {
	*x = ListSequencerSynchronizerStateResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSequencerSynchronizerStateResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSequencerSynchronizerStateResponse_Result) ProtoMessage() {}

func (x *ListSequencerSynchronizerStateResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSequencerSynchronizerStateResponse_Result.ProtoReflect.Descriptor instead.
func (*ListSequencerSynchronizerStateResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{25, 0}
}

func (x *ListSequencerSynchronizerStateResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListSequencerSynchronizerStateResponse_Result) GetItem() *v30.SequencerSynchronizerState {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListPurgeTopologyTransactionResponse_Result struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Context       *BaseResult                   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v30.PurgeTopologyTransaction `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPurgeTopologyTransactionResponse_Result) Reset() {
	*x = ListPurgeTopologyTransactionResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPurgeTopologyTransactionResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPurgeTopologyTransactionResponse_Result) ProtoMessage() {}

func (x *ListPurgeTopologyTransactionResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPurgeTopologyTransactionResponse_Result.ProtoReflect.Descriptor instead.
func (*ListPurgeTopologyTransactionResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP(), []int{27, 0}
}

func (x *ListPurgeTopologyTransactionResponse_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListPurgeTopologyTransactionResponse_Result) GetItem() *v30.PurgeTopologyTransaction {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDesc = "" +
	"\n" +
	"Ncom/digitalasset/canton/topology/admin/v30/topology_manager_read_service.proto\x12*com.digitalasset.canton.topology.admin.v30\x1aBcom/digitalasset/canton/protocol/v30/synchronizer_parameters.proto\x1a3com/digitalasset/canton/protocol/v30/topology.proto\x1a7com/digitalasset/canton/topology/admin/v30/common.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x90\x05\n" +
	"\tBaseQuery\x12I\n" +
	"\x05store\x18\x01 \x01(\v23.com.digitalasset.canton.topology.admin.v30.StoreIdR\x05store\x12\x1c\n" +
	"\tproposals\x18\x02 \x01(\bR\tproposals\x12Z\n" +
	"\toperation\x18\x03 \x01(\x0e2<.com.digitalasset.canton.protocol.v30.Enums.TopologyChangeOpR\toperation\x128\n" +
	"\bsnapshot\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\bsnapshot\x127\n" +
	"\n" +
	"head_state\x18\x06 \x01(\v2\x16.google.protobuf.EmptyH\x00R\theadState\x12W\n" +
	"\x05range\x18\a \x01(\v2?.com.digitalasset.canton.topology.admin.v30.BaseQuery.TimeRangeH\x00R\x05range\x12*\n" +
	"\x11filter_signed_key\x18\b \x01(\tR\x0ffilterSignedKey\x12.\n" +
	"\x10protocol_version\x18\t \x01(\x05H\x01R\x0fprotocolVersion\x88\x01\x01\x1am\n" +
	"\tTimeRange\x12.\n" +
	"\x04from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x120\n" +
	"\x05until\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x05untilB\f\n" +
	"\n" +
	"time_queryB\x13\n" +
	"\x11_protocol_versionJ\x04\b\x04\x10\x05\"\xde\x03\n" +
	"\n" +
	"BaseResult\x12I\n" +
	"\x05store\x18\x01 \x01(\v23.com.digitalasset.canton.topology.admin.v30.StoreIdR\x05store\x128\n" +
	"\tsequenced\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tsequenced\x129\n" +
	"\n" +
	"valid_from\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tvalidFrom\x12;\n" +
	"\vvalid_until\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"validUntil\x12Z\n" +
	"\toperation\x18\x05 \x01(\x0e2<.com.digitalasset.canton.protocol.v30.Enums.TopologyChangeOpR\toperation\x12)\n" +
	"\x10transaction_hash\x18\x06 \x01(\fR\x0ftransactionHash\x12\x16\n" +
	"\x06serial\x18\a \x01(\x05R\x06serial\x124\n" +
	"\x16signed_by_fingerprints\x18\b \x03(\tR\x14signedByFingerprints\"\xe4\x01\n" +
	"\x1eListNamespaceDelegationRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12)\n" +
	"\x10filter_namespace\x18\x02 \x01(\tR\x0ffilterNamespace\x12A\n" +
	"\x1dfilter_target_key_fingerprint\x18\x03 \x01(\tR\x1afilterTargetKeyFingerprint\"\xbb\x02\n" +
	"\x1fListNamespaceDelegationResponse\x12l\n" +
	"\aresults\x18\x01 \x03(\v2R.com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse.ResultR\aresults\x1a\xa9\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12M\n" +
	"\x04item\x18\x02 \x01(\v29.com.digitalasset.canton.protocol.v30.NamespaceDelegationR\x04item\"\xae\x01\n" +
	"+ListDecentralizedNamespaceDefinitionRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12)\n" +
	"\x10filter_namespace\x18\x02 \x01(\tR\x0ffilterNamespace\"\xe2\x02\n" +
	",ListDecentralizedNamespaceDefinitionResponse\x12y\n" +
	"\aresults\x18\x01 \x03(\v2_.com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse.ResultR\aresults\x1a\xb6\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12Z\n" +
	"\x04item\x18\x02 \x01(\v2F.com.digitalasset.canton.protocol.v30.DecentralizedNamespaceDefinitionR\x04item\"\xd8\x01\n" +
	"\x1cListOwnerToKeyMappingRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x121\n" +
	"\x15filter_key_owner_type\x18\x02 \x01(\tR\x12filterKeyOwnerType\x12/\n" +
	"\x14filter_key_owner_uid\x18\x03 \x01(\tR\x11filterKeyOwnerUid\"\xb5\x02\n" +
	"\x1dListOwnerToKeyMappingResponse\x12j\n" +
	"\aresults\x18\x01 \x03(\v2P.com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse.ResultR\aresults\x1a\xa7\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12K\n" +
	"\x04item\x18\x02 \x01(\v27.com.digitalasset.canton.protocol.v30.OwnerToKeyMappingR\x04item\"\x97\x01\n" +
	"\x1cListPartyToKeyMappingRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12!\n" +
	"\ffilter_party\x18\x02 \x01(\tR\vfilterParty\"\xb5\x02\n" +
	"\x1dListPartyToKeyMappingResponse\x12j\n" +
	"\aresults\x18\x01 \x03(\v2P.com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse.ResultR\aresults\x1a\xa7\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12K\n" +
	"\x04item\x18\x02 \x01(\v27.com.digitalasset.canton.protocol.v30.PartyToKeyMappingR\x04item\"\x9e\x01\n" +
	"'ListSynchronizerTrustCertificateRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12\x1d\n" +
	"\n" +
	"filter_uid\x18\x02 \x01(\tR\tfilterUid\"\xd6\x02\n" +
	"(ListSynchronizerTrustCertificateResponse\x12u\n" +
	"\aresults\x18\x01 \x03(\v2[.com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse.ResultR\aresults\x1a\xb2\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12V\n" +
	"\x04item\x18\x02 \x01(\v2B.com.digitalasset.canton.protocol.v30.SynchronizerTrustCertificateR\x04item\"\xa3\x01\n" +
	",ListParticipantSynchronizerPermissionRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12\x1d\n" +
	"\n" +
	"filter_uid\x18\x02 \x01(\tR\tfilterUid\"\xe5\x02\n" +
	"-ListParticipantSynchronizerPermissionResponse\x12z\n" +
	"\aresults\x18\x01 \x03(\v2`.com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse.ResultR\aresults\x1a\xb7\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12[\n" +
	"\x04item\x18\x02 \x01(\v2G.com.digitalasset.canton.protocol.v30.ParticipantSynchronizerPermissionR\x04item\"\x94\x01\n" +
	"\x1dListPartyHostingLimitsRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12\x1d\n" +
	"\n" +
	"filter_uid\x18\x02 \x01(\tR\tfilterUid\"\xb8\x02\n" +
	"\x1eListPartyHostingLimitsResponse\x12k\n" +
	"\aresults\x18\x01 \x03(\v2Q.com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse.ResultR\aresults\x1a\xa8\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12L\n" +
	"\x04item\x18\x02 \x01(\v28.com.digitalasset.canton.protocol.v30.PartyHostingLimitsR\x04item\"\xa0\x01\n" +
	"\x19ListVettedPackagesRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12-\n" +
	"\x12filter_participant\x18\x02 \x01(\tR\x11filterParticipant\"\xac\x02\n" +
	"\x1aListVettedPackagesResponse\x12g\n" +
	"\aresults\x18\x01 \x03(\v2M.com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse.ResultR\aresults\x1a\xa4\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12H\n" +
	"\x04item\x18\x02 \x01(\v24.com.digitalasset.canton.protocol.v30.VettedPackagesR\x04item\"\xc7\x01\n" +
	"\x1dListPartyToParticipantRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12!\n" +
	"\ffilter_party\x18\x02 \x01(\tR\vfilterParty\x12-\n" +
	"\x12filter_participant\x18\x03 \x01(\tR\x11filterParticipant\"\xb8\x02\n" +
	"\x1eListPartyToParticipantResponse\x12k\n" +
	"\aresults\x18\x02 \x03(\v2Q.com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse.ResultR\aresults\x1a\xa8\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12L\n" +
	"\x04item\x18\x02 \x01(\v28.com.digitalasset.canton.protocol.v30.PartyToParticipantR\x04item\"\xb4\x01\n" +
	"&ListSynchronizerParametersStateRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x124\n" +
	"\x16filter_synchronizer_id\x18\x02 \x01(\tR\x14filterSynchronizerId\"\xd5\x02\n" +
	"'ListSynchronizerParametersStateResponse\x12t\n" +
	"\aresults\x18\x01 \x03(\v2Z.com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse.ResultR\aresults\x1a\xb3\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12W\n" +
	"\x04item\x18\x02 \x01(\v2C.com.digitalasset.canton.protocol.v30.DynamicSynchronizerParametersR\x04item\"\xb2\x01\n" +
	"$ListMediatorSynchronizerStateRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x124\n" +
	"\x16filter_synchronizer_id\x18\x02 \x01(\tR\x14filterSynchronizerId\"\xcd\x02\n" +
	"%ListMediatorSynchronizerStateResponse\x12r\n" +
	"\aresults\x18\x01 \x03(\v2X.com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse.ResultR\aresults\x1a\xaf\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12S\n" +
	"\x04item\x18\x02 \x01(\v2?.com.digitalasset.canton.protocol.v30.MediatorSynchronizerStateR\x04item\"\xb3\x01\n" +
	"%ListSequencerSynchronizerStateRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x124\n" +
	"\x16filter_synchronizer_id\x18\x02 \x01(\tR\x14filterSynchronizerId\"\xd0\x02\n" +
	"&ListSequencerSynchronizerStateResponse\x12s\n" +
	"\aresults\x18\x01 \x03(\v2Y.com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse.ResultR\aresults\x1a\xb0\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12T\n" +
	"\x04item\x18\x02 \x01(\v2@.com.digitalasset.canton.protocol.v30.SequencerSynchronizerStateR\x04item\"\xb1\x01\n" +
	"#ListPurgeTopologyTransactionRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x124\n" +
	"\x16filter_synchronizer_id\x18\x02 \x01(\tR\x14filterSynchronizerId\"\xca\x02\n" +
	"$ListPurgeTopologyTransactionResponse\x12q\n" +
	"\aresults\x18\x01 \x03(\v2W.com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse.ResultR\aresults\x1a\xae\x01\n" +
	"\x06Result\x12P\n" +
	"\acontext\x18\x01 \x01(\v26.com.digitalasset.canton.topology.admin.v30.BaseResultR\acontext\x12R\n" +
	"\x04item\x18\x02 \x01(\v2>.com.digitalasset.canton.protocol.v30.PurgeTopologyTransactionR\x04item\"\x1c\n" +
	"\x1aListAvailableStoresRequest\"o\n" +
	"\x1bListAvailableStoresResponse\x12P\n" +
	"\tstore_ids\x18\x01 \x03(\v23.com.digitalasset.canton.topology.admin.v30.StoreIdR\bstoreIds\"\xbc\x01\n" +
	"\x0eListAllRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12)\n" +
	"\x10exclude_mappings\x18\x02 \x03(\tR\x0fexcludeMappings\x12)\n" +
	"\x10filter_namespace\x18\x03 \x01(\tR\x0ffilterNamespace\"\xcb\x01\n" +
	"\x1dExportTopologySnapshotRequest\x12T\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v30.BaseQueryR\tbaseQuery\x12)\n" +
	"\x10exclude_mappings\x18\x02 \x03(\tR\x0fexcludeMappings\x12)\n" +
	"\x10filter_namespace\x18\x03 \x01(\tR\x0ffilterNamespace\"k\n" +
	"\x0fListAllResponse\x12X\n" +
	"\x06result\x18\x01 \x01(\v2@.com.digitalasset.canton.topology.admin.v30.TopologyTransactionsR\x06result\"6\n" +
	"\x1eExportTopologySnapshotResponse\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\"\xcf\x01\n" +
	"\x13GenesisStateRequest\x12g\n" +
	"\x12synchronizer_store\x18\x01 \x01(\v23.com.digitalasset.canton.topology.admin.v30.StoreIdH\x00R\x11synchronizerStore\x88\x01\x01\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestampB\x15\n" +
	"\x13_synchronizer_store\",\n" +
	"\x14GenesisStateResponse\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk2\xde\x18\n" +
	"\x1aTopologyManagerReadService\x12\xb2\x01\n" +
	"\x17ListNamespaceDelegation\x12J.com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationRequest\x1aK.com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse\x12\xd9\x01\n" +
	"$ListDecentralizedNamespaceDefinition\x12W.com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionRequest\x1aX.com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse\x12\xac\x01\n" +
	"\x15ListOwnerToKeyMapping\x12H.com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingRequest\x1aI.com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse\x12\xac\x01\n" +
	"\x15ListPartyToKeyMapping\x12H.com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingRequest\x1aI.com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse\x12\xcd\x01\n" +
	" ListSynchronizerTrustCertificate\x12S.com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateRequest\x1aT.com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse\x12\xdc\x01\n" +
	"%ListParticipantSynchronizerPermission\x12X.com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionRequest\x1aY.com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse\x12\xaf\x01\n" +
	"\x16ListPartyHostingLimits\x12I.com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsRequest\x1aJ.com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse\x12\xa3\x01\n" +
	"\x12ListVettedPackages\x12E.com.digitalasset.canton.topology.admin.v30.ListVettedPackagesRequest\x1aF.com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse\x12\xaf\x01\n" +
	"\x16ListPartyToParticipant\x12I.com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantRequest\x1aJ.com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse\x12\xca\x01\n" +
	"\x1fListSynchronizerParametersState\x12R.com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateRequest\x1aS.com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse\x12\xc4\x01\n" +
	"\x1dListMediatorSynchronizerState\x12P.com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateRequest\x1aQ.com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse\x12\xc7\x01\n" +
	"\x1eListSequencerSynchronizerState\x12Q.com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateRequest\x1aR.com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse\x12\xc1\x01\n" +
	"\x1cListPurgeTopologyTransaction\x12O.com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionRequest\x1aP.com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse\x12\xa6\x01\n" +
	"\x13ListAvailableStores\x12F.com.digitalasset.canton.topology.admin.v30.ListAvailableStoresRequest\x1aG.com.digitalasset.canton.topology.admin.v30.ListAvailableStoresResponse\x12\x82\x01\n" +
	"\aListAll\x12:.com.digitalasset.canton.topology.admin.v30.ListAllRequest\x1a;.com.digitalasset.canton.topology.admin.v30.ListAllResponse\x12\xb1\x01\n" +
	"\x16ExportTopologySnapshot\x12I.com.digitalasset.canton.topology.admin.v30.ExportTopologySnapshotRequest\x1aJ.com.digitalasset.canton.topology.admin.v30.ExportTopologySnapshotResponse0\x01\x12\x93\x01\n" +
	"\fGenesisState\x12?.com.digitalasset.canton.topology.admin.v30.GenesisStateRequest\x1a@.com.digitalasset.canton.topology.admin.v30.GenesisStateResponse0\x01B[ZYgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/topology/admin/v30b\x06proto3"

var (
	file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescData []byte
)

func file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDesc), len(file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDescData
}

var file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_goTypes = []any{
	(*BaseQuery)(nil),                                            // 0: com.digitalasset.canton.topology.admin.v30.BaseQuery
	(*BaseResult)(nil),                                           // 1: com.digitalasset.canton.topology.admin.v30.BaseResult
	(*ListNamespaceDelegationRequest)(nil),                       // 2: com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationRequest
	(*ListNamespaceDelegationResponse)(nil),                      // 3: com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse
	(*ListDecentralizedNamespaceDefinitionRequest)(nil),          // 4: com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionRequest
	(*ListDecentralizedNamespaceDefinitionResponse)(nil),         // 5: com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse
	(*ListOwnerToKeyMappingRequest)(nil),                         // 6: com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingRequest
	(*ListOwnerToKeyMappingResponse)(nil),                        // 7: com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse
	(*ListPartyToKeyMappingRequest)(nil),                         // 8: com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingRequest
	(*ListPartyToKeyMappingResponse)(nil),                        // 9: com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse
	(*ListSynchronizerTrustCertificateRequest)(nil),              // 10: com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateRequest
	(*ListSynchronizerTrustCertificateResponse)(nil),             // 11: com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse
	(*ListParticipantSynchronizerPermissionRequest)(nil),         // 12: com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionRequest
	(*ListParticipantSynchronizerPermissionResponse)(nil),        // 13: com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse
	(*ListPartyHostingLimitsRequest)(nil),                        // 14: com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsRequest
	(*ListPartyHostingLimitsResponse)(nil),                       // 15: com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse
	(*ListVettedPackagesRequest)(nil),                            // 16: com.digitalasset.canton.topology.admin.v30.ListVettedPackagesRequest
	(*ListVettedPackagesResponse)(nil),                           // 17: com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse
	(*ListPartyToParticipantRequest)(nil),                        // 18: com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantRequest
	(*ListPartyToParticipantResponse)(nil),                       // 19: com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse
	(*ListSynchronizerParametersStateRequest)(nil),               // 20: com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateRequest
	(*ListSynchronizerParametersStateResponse)(nil),              // 21: com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse
	(*ListMediatorSynchronizerStateRequest)(nil),                 // 22: com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateRequest
	(*ListMediatorSynchronizerStateResponse)(nil),                // 23: com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse
	(*ListSequencerSynchronizerStateRequest)(nil),                // 24: com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateRequest
	(*ListSequencerSynchronizerStateResponse)(nil),               // 25: com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse
	(*ListPurgeTopologyTransactionRequest)(nil),                  // 26: com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionRequest
	(*ListPurgeTopologyTransactionResponse)(nil),                 // 27: com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse
	(*ListAvailableStoresRequest)(nil),                           // 28: com.digitalasset.canton.topology.admin.v30.ListAvailableStoresRequest
	(*ListAvailableStoresResponse)(nil),                          // 29: com.digitalasset.canton.topology.admin.v30.ListAvailableStoresResponse
	(*ListAllRequest)(nil),                                       // 30: com.digitalasset.canton.topology.admin.v30.ListAllRequest
	(*ExportTopologySnapshotRequest)(nil),                        // 31: com.digitalasset.canton.topology.admin.v30.ExportTopologySnapshotRequest
	(*ListAllResponse)(nil),                                      // 32: com.digitalasset.canton.topology.admin.v30.ListAllResponse
	(*ExportTopologySnapshotResponse)(nil),                       // 33: com.digitalasset.canton.topology.admin.v30.ExportTopologySnapshotResponse
	(*GenesisStateRequest)(nil),                                  // 34: com.digitalasset.canton.topology.admin.v30.GenesisStateRequest
	(*GenesisStateResponse)(nil),                                 // 35: com.digitalasset.canton.topology.admin.v30.GenesisStateResponse
	(*BaseQuery_TimeRange)(nil),                                  // 36: com.digitalasset.canton.topology.admin.v30.BaseQuery.TimeRange
	(*ListNamespaceDelegationResponse_Result)(nil),               // 37: com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse.Result
	(*ListDecentralizedNamespaceDefinitionResponse_Result)(nil),  // 38: com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse.Result
	(*ListOwnerToKeyMappingResponse_Result)(nil),                 // 39: com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse.Result
	(*ListPartyToKeyMappingResponse_Result)(nil),                 // 40: com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse.Result
	(*ListSynchronizerTrustCertificateResponse_Result)(nil),      // 41: com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse.Result
	(*ListParticipantSynchronizerPermissionResponse_Result)(nil), // 42: com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse.Result
	(*ListPartyHostingLimitsResponse_Result)(nil),                // 43: com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse.Result
	(*ListVettedPackagesResponse_Result)(nil),                    // 44: com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse.Result
	(*ListPartyToParticipantResponse_Result)(nil),                // 45: com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse.Result
	(*ListSynchronizerParametersStateResponse_Result)(nil),       // 46: com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse.Result
	(*ListMediatorSynchronizerStateResponse_Result)(nil),         // 47: com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse.Result
	(*ListSequencerSynchronizerStateResponse_Result)(nil),        // 48: com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse.Result
	(*ListPurgeTopologyTransactionResponse_Result)(nil),          // 49: com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse.Result
	(*StoreId)(nil),                               // 50: com.digitalasset.canton.topology.admin.v30.StoreId
	(v30.Enums_TopologyChangeOp)(0),               // 51: com.digitalasset.canton.protocol.v30.Enums.TopologyChangeOp
	(*timestamppb.Timestamp)(nil),                 // 52: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                         // 53: google.protobuf.Empty
	(*TopologyTransactions)(nil),                  // 54: com.digitalasset.canton.topology.admin.v30.TopologyTransactions
	(*v30.NamespaceDelegation)(nil),               // 55: com.digitalasset.canton.protocol.v30.NamespaceDelegation
	(*v30.DecentralizedNamespaceDefinition)(nil),  // 56: com.digitalasset.canton.protocol.v30.DecentralizedNamespaceDefinition
	(*v30.OwnerToKeyMapping)(nil),                 // 57: com.digitalasset.canton.protocol.v30.OwnerToKeyMapping
	(*v30.PartyToKeyMapping)(nil),                 // 58: com.digitalasset.canton.protocol.v30.PartyToKeyMapping
	(*v30.SynchronizerTrustCertificate)(nil),      // 59: com.digitalasset.canton.protocol.v30.SynchronizerTrustCertificate
	(*v30.ParticipantSynchronizerPermission)(nil), // 60: com.digitalasset.canton.protocol.v30.ParticipantSynchronizerPermission
	(*v30.PartyHostingLimits)(nil),                // 61: com.digitalasset.canton.protocol.v30.PartyHostingLimits
	(*v30.VettedPackages)(nil),                    // 62: com.digitalasset.canton.protocol.v30.VettedPackages
	(*v30.PartyToParticipant)(nil),                // 63: com.digitalasset.canton.protocol.v30.PartyToParticipant
	(*v30.DynamicSynchronizerParameters)(nil),     // 64: com.digitalasset.canton.protocol.v30.DynamicSynchronizerParameters
	(*v30.MediatorSynchronizerState)(nil),         // 65: com.digitalasset.canton.protocol.v30.MediatorSynchronizerState
	(*v30.SequencerSynchronizerState)(nil),        // 66: com.digitalasset.canton.protocol.v30.SequencerSynchronizerState
	(*v30.PurgeTopologyTransaction)(nil),          // 67: com.digitalasset.canton.protocol.v30.PurgeTopologyTransaction
}
var file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_depIdxs = []int32{
	50, // 0: com.digitalasset.canton.topology.admin.v30.BaseQuery.store:type_name -> com.digitalasset.canton.topology.admin.v30.StoreId
	51, // 1: com.digitalasset.canton.topology.admin.v30.BaseQuery.operation:type_name -> com.digitalasset.canton.protocol.v30.Enums.TopologyChangeOp
	52, // 2: com.digitalasset.canton.topology.admin.v30.BaseQuery.snapshot:type_name -> google.protobuf.Timestamp
	53, // 3: com.digitalasset.canton.topology.admin.v30.BaseQuery.head_state:type_name -> google.protobuf.Empty
	36, // 4: com.digitalasset.canton.topology.admin.v30.BaseQuery.range:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery.TimeRange
	50, // 5: com.digitalasset.canton.topology.admin.v30.BaseResult.store:type_name -> com.digitalasset.canton.topology.admin.v30.StoreId
	52, // 6: com.digitalasset.canton.topology.admin.v30.BaseResult.sequenced:type_name -> google.protobuf.Timestamp
	52, // 7: com.digitalasset.canton.topology.admin.v30.BaseResult.valid_from:type_name -> google.protobuf.Timestamp
	52, // 8: com.digitalasset.canton.topology.admin.v30.BaseResult.valid_until:type_name -> google.protobuf.Timestamp
	51, // 9: com.digitalasset.canton.topology.admin.v30.BaseResult.operation:type_name -> com.digitalasset.canton.protocol.v30.Enums.TopologyChangeOp
	0,  // 10: com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	37, // 11: com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse.Result
	0,  // 12: com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	38, // 13: com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse.Result
	0,  // 14: com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	39, // 15: com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse.Result
	0,  // 16: com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	40, // 17: com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse.Result
	0,  // 18: com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	41, // 19: com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse.Result
	0,  // 20: com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	42, // 21: com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse.Result
	0,  // 22: com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	43, // 23: com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse.Result
	0,  // 24: com.digitalasset.canton.topology.admin.v30.ListVettedPackagesRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	44, // 25: com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse.Result
	0,  // 26: com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	45, // 27: com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse.Result
	0,  // 28: com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	46, // 29: com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse.Result
	0,  // 30: com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	47, // 31: com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse.Result
	0,  // 32: com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	48, // 33: com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse.Result
	0,  // 34: com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	49, // 35: com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse.Result
	50, // 36: com.digitalasset.canton.topology.admin.v30.ListAvailableStoresResponse.store_ids:type_name -> com.digitalasset.canton.topology.admin.v30.StoreId
	0,  // 37: com.digitalasset.canton.topology.admin.v30.ListAllRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	0,  // 38: com.digitalasset.canton.topology.admin.v30.ExportTopologySnapshotRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v30.BaseQuery
	54, // 39: com.digitalasset.canton.topology.admin.v30.ListAllResponse.result:type_name -> com.digitalasset.canton.topology.admin.v30.TopologyTransactions
	50, // 40: com.digitalasset.canton.topology.admin.v30.GenesisStateRequest.synchronizer_store:type_name -> com.digitalasset.canton.topology.admin.v30.StoreId
	52, // 41: com.digitalasset.canton.topology.admin.v30.GenesisStateRequest.timestamp:type_name -> google.protobuf.Timestamp
	52, // 42: com.digitalasset.canton.topology.admin.v30.BaseQuery.TimeRange.from:type_name -> google.protobuf.Timestamp
	52, // 43: com.digitalasset.canton.topology.admin.v30.BaseQuery.TimeRange.until:type_name -> google.protobuf.Timestamp
	1,  // 44: com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	55, // 45: com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.NamespaceDelegation
	1,  // 46: com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	56, // 47: com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.DecentralizedNamespaceDefinition
	1,  // 48: com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	57, // 49: com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.OwnerToKeyMapping
	1,  // 50: com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	58, // 51: com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.PartyToKeyMapping
	1,  // 52: com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	59, // 53: com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.SynchronizerTrustCertificate
	1,  // 54: com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	60, // 55: com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.ParticipantSynchronizerPermission
	1,  // 56: com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	61, // 57: com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.PartyHostingLimits
	1,  // 58: com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	62, // 59: com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.VettedPackages
	1,  // 60: com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	63, // 61: com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.PartyToParticipant
	1,  // 62: com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	64, // 63: com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.DynamicSynchronizerParameters
	1,  // 64: com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	65, // 65: com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.MediatorSynchronizerState
	1,  // 66: com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	66, // 67: com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.SequencerSynchronizerState
	1,  // 68: com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse.Result.context:type_name -> com.digitalasset.canton.topology.admin.v30.BaseResult
	67, // 69: com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse.Result.item:type_name -> com.digitalasset.canton.protocol.v30.PurgeTopologyTransaction
	2,  // 70: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListNamespaceDelegation:input_type -> com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationRequest
	4,  // 71: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListDecentralizedNamespaceDefinition:input_type -> com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionRequest
	6,  // 72: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListOwnerToKeyMapping:input_type -> com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingRequest
	8,  // 73: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListPartyToKeyMapping:input_type -> com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingRequest
	10, // 74: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListSynchronizerTrustCertificate:input_type -> com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateRequest
	12, // 75: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListParticipantSynchronizerPermission:input_type -> com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionRequest
	14, // 76: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListPartyHostingLimits:input_type -> com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsRequest
	16, // 77: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListVettedPackages:input_type -> com.digitalasset.canton.topology.admin.v30.ListVettedPackagesRequest
	18, // 78: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListPartyToParticipant:input_type -> com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantRequest
	20, // 79: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListSynchronizerParametersState:input_type -> com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateRequest
	22, // 80: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListMediatorSynchronizerState:input_type -> com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateRequest
	24, // 81: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListSequencerSynchronizerState:input_type -> com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateRequest
	26, // 82: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListPurgeTopologyTransaction:input_type -> com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionRequest
	28, // 83: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListAvailableStores:input_type -> com.digitalasset.canton.topology.admin.v30.ListAvailableStoresRequest
	30, // 84: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListAll:input_type -> com.digitalasset.canton.topology.admin.v30.ListAllRequest
	31, // 85: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ExportTopologySnapshot:input_type -> com.digitalasset.canton.topology.admin.v30.ExportTopologySnapshotRequest
	34, // 86: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.GenesisState:input_type -> com.digitalasset.canton.topology.admin.v30.GenesisStateRequest
	3,  // 87: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListNamespaceDelegation:output_type -> com.digitalasset.canton.topology.admin.v30.ListNamespaceDelegationResponse
	5,  // 88: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListDecentralizedNamespaceDefinition:output_type -> com.digitalasset.canton.topology.admin.v30.ListDecentralizedNamespaceDefinitionResponse
	7,  // 89: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListOwnerToKeyMapping:output_type -> com.digitalasset.canton.topology.admin.v30.ListOwnerToKeyMappingResponse
	9,  // 90: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListPartyToKeyMapping:output_type -> com.digitalasset.canton.topology.admin.v30.ListPartyToKeyMappingResponse
	11, // 91: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListSynchronizerTrustCertificate:output_type -> com.digitalasset.canton.topology.admin.v30.ListSynchronizerTrustCertificateResponse
	13, // 92: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListParticipantSynchronizerPermission:output_type -> com.digitalasset.canton.topology.admin.v30.ListParticipantSynchronizerPermissionResponse
	15, // 93: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListPartyHostingLimits:output_type -> com.digitalasset.canton.topology.admin.v30.ListPartyHostingLimitsResponse
	17, // 94: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListVettedPackages:output_type -> com.digitalasset.canton.topology.admin.v30.ListVettedPackagesResponse
	19, // 95: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListPartyToParticipant:output_type -> com.digitalasset.canton.topology.admin.v30.ListPartyToParticipantResponse
	21, // 96: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListSynchronizerParametersState:output_type -> com.digitalasset.canton.topology.admin.v30.ListSynchronizerParametersStateResponse
	23, // 97: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListMediatorSynchronizerState:output_type -> com.digitalasset.canton.topology.admin.v30.ListMediatorSynchronizerStateResponse
	25, // 98: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListSequencerSynchronizerState:output_type -> com.digitalasset.canton.topology.admin.v30.ListSequencerSynchronizerStateResponse
	27, // 99: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListPurgeTopologyTransaction:output_type -> com.digitalasset.canton.topology.admin.v30.ListPurgeTopologyTransactionResponse
	29, // 100: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListAvailableStores:output_type -> com.digitalasset.canton.topology.admin.v30.ListAvailableStoresResponse
	32, // 101: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ListAll:output_type -> com.digitalasset.canton.topology.admin.v30.ListAllResponse
	33, // 102: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.ExportTopologySnapshot:output_type -> com.digitalasset.canton.topology.admin.v30.ExportTopologySnapshotResponse
	35, // 103: com.digitalasset.canton.topology.admin.v30.TopologyManagerReadService.GenesisState:output_type -> com.digitalasset.canton.topology.admin.v30.GenesisStateResponse
	87, // [87:104] is the sub-list for method output_type
	70, // [70:87] is the sub-list for method input_type
	70, // [70:70] is the sub-list for extension type_name
	70, // [70:70] is the sub-list for extension extendee
	0,  // [0:70] is the sub-list for field type_name
}

func init() {
	file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_init()
}
func file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_init() {
	if File_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto != nil {
		return
	}
	file_com_digitalasset_canton_topology_admin_v30_common_proto_init()
	file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[0].OneofWrappers = []any{
		(*BaseQuery_Snapshot)(nil),
		(*BaseQuery_HeadState)(nil),
		(*BaseQuery_Range)(nil),
	}
	file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes[34].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDesc), len(file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto = out.File
	file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_goTypes = nil
	file_com_digitalasset_canton_topology_admin_v30_topology_manager_read_service_proto_depIdxs = nil
}
