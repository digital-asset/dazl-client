// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/digitalasset/canton/topology/admin/v30/topology_aggregation_service.proto

package v30

import (
	v301 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v30"
	v30 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v30"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListPartiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AsOf              *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=as_of,json=asOf,proto3" json:"as_of,omitempty"`
	Limit             int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	FilterDomain      string                 `protobuf:"bytes,3,opt,name=filter_domain,json=filterDomain,proto3" json:"filter_domain,omitempty"`
	FilterParty       string                 `protobuf:"bytes,4,opt,name=filter_party,json=filterParty,proto3" json:"filter_party,omitempty"`
	FilterParticipant string                 `protobuf:"bytes,5,opt,name=filter_participant,json=filterParticipant,proto3" json:"filter_participant,omitempty"`
}

func (x *ListPartiesRequest) Reset() {
	*x = ListPartiesRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartiesRequest) ProtoMessage() {}

func (x *ListPartiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartiesRequest.ProtoReflect.Descriptor instead.
func (*ListPartiesRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListPartiesRequest) GetAsOf() *timestamppb.Timestamp {
	if x != nil {
		return x.AsOf
	}
	return nil
}

func (x *ListPartiesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPartiesRequest) GetFilterDomain() string {
	if x != nil {
		return x.FilterDomain
	}
	return ""
}

func (x *ListPartiesRequest) GetFilterParty() string {
	if x != nil {
		return x.FilterParty
	}
	return ""
}

func (x *ListPartiesRequest) GetFilterParticipant() string {
	if x != nil {
		return x.FilterParticipant
	}
	return ""
}

type ListPartiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ListPartiesResponse_Result `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListPartiesResponse) Reset() {
	*x = ListPartiesResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartiesResponse) ProtoMessage() {}

func (x *ListPartiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartiesResponse.ProtoReflect.Descriptor instead.
func (*ListPartiesResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListPartiesResponse) GetResults() []*ListPartiesResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListKeyOwnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AsOf               *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=as_of,json=asOf,proto3" json:"as_of,omitempty"`
	Limit              int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	FilterDomain       string                 `protobuf:"bytes,3,opt,name=filter_domain,json=filterDomain,proto3" json:"filter_domain,omitempty"`
	FilterKeyOwnerType string                 `protobuf:"bytes,4,opt,name=filter_key_owner_type,json=filterKeyOwnerType,proto3" json:"filter_key_owner_type,omitempty"`
	FilterKeyOwnerUid  string                 `protobuf:"bytes,5,opt,name=filter_key_owner_uid,json=filterKeyOwnerUid,proto3" json:"filter_key_owner_uid,omitempty"`
}

func (x *ListKeyOwnersRequest) Reset() {
	*x = ListKeyOwnersRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeyOwnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyOwnersRequest) ProtoMessage() {}

func (x *ListKeyOwnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyOwnersRequest.ProtoReflect.Descriptor instead.
func (*ListKeyOwnersRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListKeyOwnersRequest) GetAsOf() *timestamppb.Timestamp {
	if x != nil {
		return x.AsOf
	}
	return nil
}

func (x *ListKeyOwnersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListKeyOwnersRequest) GetFilterDomain() string {
	if x != nil {
		return x.FilterDomain
	}
	return ""
}

func (x *ListKeyOwnersRequest) GetFilterKeyOwnerType() string {
	if x != nil {
		return x.FilterKeyOwnerType
	}
	return ""
}

func (x *ListKeyOwnersRequest) GetFilterKeyOwnerUid() string {
	if x != nil {
		return x.FilterKeyOwnerUid
	}
	return ""
}

type ListKeyOwnersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ListKeyOwnersResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListKeyOwnersResponse) Reset() {
	*x = ListKeyOwnersResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeyOwnersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyOwnersResponse) ProtoMessage() {}

func (x *ListKeyOwnersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyOwnersResponse.ProtoReflect.Descriptor instead.
func (*ListKeyOwnersResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListKeyOwnersResponse) GetResults() []*ListKeyOwnersResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListPartiesResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Party        string                                           `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	Participants []*ListPartiesResponse_Result_ParticipantDomains `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *ListPartiesResponse_Result) Reset() {
	*x = ListPartiesResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartiesResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartiesResponse_Result) ProtoMessage() {}

func (x *ListPartiesResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartiesResponse_Result.ProtoReflect.Descriptor instead.
func (*ListPartiesResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListPartiesResponse_Result) GetParty() string {
	if x != nil {
		return x.Party
	}
	return ""
}

func (x *ListPartiesResponse_Result) GetParticipants() []*ListPartiesResponse_Result_ParticipantDomains {
	if x != nil {
		return x.Participants
	}
	return nil
}

type ListPartiesResponse_Result_ParticipantDomains struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantUid string                                                             `protobuf:"bytes,1,opt,name=participant_uid,json=participantUid,proto3" json:"participant_uid,omitempty"`
	Domains        []*ListPartiesResponse_Result_ParticipantDomains_DomainPermissions `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *ListPartiesResponse_Result_ParticipantDomains) Reset() {
	*x = ListPartiesResponse_Result_ParticipantDomains{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartiesResponse_Result_ParticipantDomains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartiesResponse_Result_ParticipantDomains) ProtoMessage() {}

func (x *ListPartiesResponse_Result_ParticipantDomains) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartiesResponse_Result_ParticipantDomains.ProtoReflect.Descriptor instead.
func (*ListPartiesResponse_Result_ParticipantDomains) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ListPartiesResponse_Result_ParticipantDomains) GetParticipantUid() string {
	if x != nil {
		return x.ParticipantUid
	}
	return ""
}

func (x *ListPartiesResponse_Result_ParticipantDomains) GetDomains() []*ListPartiesResponse_Result_ParticipantDomains_DomainPermissions {
	if x != nil {
		return x.Domains
	}
	return nil
}

type ListPartiesResponse_Result_ParticipantDomains_DomainPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain     string                          `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Permission v30.Enums_ParticipantPermission `protobuf:"varint,2,opt,name=permission,proto3,enum=com.digitalasset.canton.protocol.v30.Enums_ParticipantPermission" json:"permission,omitempty"`
}

func (x *ListPartiesResponse_Result_ParticipantDomains_DomainPermissions) Reset() {
	*x = ListPartiesResponse_Result_ParticipantDomains_DomainPermissions{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartiesResponse_Result_ParticipantDomains_DomainPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartiesResponse_Result_ParticipantDomains_DomainPermissions) ProtoMessage() {}

func (x *ListPartiesResponse_Result_ParticipantDomains_DomainPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartiesResponse_Result_ParticipantDomains_DomainPermissions.ProtoReflect.Descriptor instead.
func (*ListPartiesResponse_Result_ParticipantDomains_DomainPermissions) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP(), []int{1, 0, 0, 0}
}

func (x *ListPartiesResponse_Result_ParticipantDomains_DomainPermissions) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListPartiesResponse_Result_ParticipantDomains_DomainPermissions) GetPermission() v30.Enums_ParticipantPermission {
	if x != nil {
		return x.Permission
	}
	return v30.Enums_ParticipantPermission(0)
}

type ListKeyOwnersResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain         string                      `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	KeyOwner       string                      `protobuf:"bytes,2,opt,name=key_owner,json=keyOwner,proto3" json:"key_owner,omitempty"`
	SigningKeys    []*v301.SigningPublicKey    `protobuf:"bytes,3,rep,name=signing_keys,json=signingKeys,proto3" json:"signing_keys,omitempty"`
	EncryptionKeys []*v301.EncryptionPublicKey `protobuf:"bytes,4,rep,name=encryption_keys,json=encryptionKeys,proto3" json:"encryption_keys,omitempty"`
}

func (x *ListKeyOwnersResponse_Result) Reset() {
	*x = ListKeyOwnersResponse_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeyOwnersResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyOwnersResponse_Result) ProtoMessage() {}

func (x *ListKeyOwnersResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyOwnersResponse_Result.ProtoReflect.Descriptor instead.
func (*ListKeyOwnersResponse_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListKeyOwnersResponse_Result) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListKeyOwnersResponse_Result) GetKeyOwner() string {
	if x != nil {
		return x.KeyOwner
	}
	return ""
}

func (x *ListKeyOwnersResponse_Result) GetSigningKeys() []*v301.SigningPublicKey {
	if x != nil {
		return x.SigningKeys
	}
	return nil
}

func (x *ListKeyOwnersResponse_Result) GetEncryptionKeys() []*v301.EncryptionPublicKey {
	if x != nil {
		return x.EncryptionKeys
	}
	return nil
}

var File_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto protoreflect.FileDescriptor

var file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDesc = []byte{
	0x0a, 0x4d, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x33, 0x30, 0x2f, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x2a, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x1a, 0x2f, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x76, 0x33, 0x30, 0x2f,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76,
	0x33, 0x30, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x5f,
	0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x61, 0x73, 0x4f, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0xf0, 0x04, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x1a, 0xf6, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x12, 0x7d, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64,
	0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x1a, 0xd6, 0x02, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x69,
	0x64, 0x12, 0x85, 0x01, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x1a, 0x8e, 0x01, 0x0a, 0x11, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x61, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x33, 0x30, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe6, 0x01, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x5f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x61, 0x73, 0x4f, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x31, 0x0a, 0x15, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x22, 0xf6, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x1a, 0xf8, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x57, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x0b, 0x73,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x60, 0x0a, 0x0f, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x32, 0xc4, 0x02, 0x0a,
	0x1a, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x63,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x94, 0x01, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x40,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x33, 0x30, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4b, 0x65, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x5b, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f,
	0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f, 0x67,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x33, 0x30,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescData = file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDesc
)

func file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescData)
	})
	return file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDescData
}

var file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_goTypes = []any{
	(*ListPartiesRequest)(nil),                                              // 0: com.digitalasset.canton.topology.admin.v30.ListPartiesRequest
	(*ListPartiesResponse)(nil),                                             // 1: com.digitalasset.canton.topology.admin.v30.ListPartiesResponse
	(*ListKeyOwnersRequest)(nil),                                            // 2: com.digitalasset.canton.topology.admin.v30.ListKeyOwnersRequest
	(*ListKeyOwnersResponse)(nil),                                           // 3: com.digitalasset.canton.topology.admin.v30.ListKeyOwnersResponse
	(*ListPartiesResponse_Result)(nil),                                      // 4: com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result
	(*ListPartiesResponse_Result_ParticipantDomains)(nil),                   // 5: com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result.ParticipantDomains
	(*ListPartiesResponse_Result_ParticipantDomains_DomainPermissions)(nil), // 6: com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result.ParticipantDomains.DomainPermissions
	(*ListKeyOwnersResponse_Result)(nil),                                    // 7: com.digitalasset.canton.topology.admin.v30.ListKeyOwnersResponse.Result
	(*timestamppb.Timestamp)(nil),                                           // 8: google.protobuf.Timestamp
	(v30.Enums_ParticipantPermission)(0),                                    // 9: com.digitalasset.canton.protocol.v30.Enums.ParticipantPermission
	(*v301.SigningPublicKey)(nil),                                           // 10: com.digitalasset.canton.crypto.v30.SigningPublicKey
	(*v301.EncryptionPublicKey)(nil),                                        // 11: com.digitalasset.canton.crypto.v30.EncryptionPublicKey
}
var file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_depIdxs = []int32{
	8,  // 0: com.digitalasset.canton.topology.admin.v30.ListPartiesRequest.as_of:type_name -> google.protobuf.Timestamp
	4,  // 1: com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result
	8,  // 2: com.digitalasset.canton.topology.admin.v30.ListKeyOwnersRequest.as_of:type_name -> google.protobuf.Timestamp
	7,  // 3: com.digitalasset.canton.topology.admin.v30.ListKeyOwnersResponse.results:type_name -> com.digitalasset.canton.topology.admin.v30.ListKeyOwnersResponse.Result
	5,  // 4: com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result.participants:type_name -> com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result.ParticipantDomains
	6,  // 5: com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result.ParticipantDomains.domains:type_name -> com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result.ParticipantDomains.DomainPermissions
	9,  // 6: com.digitalasset.canton.topology.admin.v30.ListPartiesResponse.Result.ParticipantDomains.DomainPermissions.permission:type_name -> com.digitalasset.canton.protocol.v30.Enums.ParticipantPermission
	10, // 7: com.digitalasset.canton.topology.admin.v30.ListKeyOwnersResponse.Result.signing_keys:type_name -> com.digitalasset.canton.crypto.v30.SigningPublicKey
	11, // 8: com.digitalasset.canton.topology.admin.v30.ListKeyOwnersResponse.Result.encryption_keys:type_name -> com.digitalasset.canton.crypto.v30.EncryptionPublicKey
	0,  // 9: com.digitalasset.canton.topology.admin.v30.TopologyAggregationService.ListParties:input_type -> com.digitalasset.canton.topology.admin.v30.ListPartiesRequest
	2,  // 10: com.digitalasset.canton.topology.admin.v30.TopologyAggregationService.ListKeyOwners:input_type -> com.digitalasset.canton.topology.admin.v30.ListKeyOwnersRequest
	1,  // 11: com.digitalasset.canton.topology.admin.v30.TopologyAggregationService.ListParties:output_type -> com.digitalasset.canton.topology.admin.v30.ListPartiesResponse
	3,  // 12: com.digitalasset.canton.topology.admin.v30.TopologyAggregationService.ListKeyOwners:output_type -> com.digitalasset.canton.topology.admin.v30.ListKeyOwnersResponse
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() {
	file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_init()
}
func file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_init() {
	if File_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto = out.File
	file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_rawDesc = nil
	file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_goTypes = nil
	file_com_digitalasset_canton_topology_admin_v30_topology_aggregation_service_proto_depIdxs = nil
}
