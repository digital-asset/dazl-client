// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/digitalasset/canton/topology/admin/v0/topology_manager_read_service.proto

package v0

import (
	v01 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v0"
	v0 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v0"
	v1 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v1"
	v2 "github.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListNamespaceDelegationRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery       *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterNamespace string                 `protobuf:"bytes,2,opt,name=filter_namespace,json=filterNamespace,proto3" json:"filter_namespace,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListNamespaceDelegationRequest) Reset() {
	*x = ListNamespaceDelegationRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespaceDelegationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceDelegationRequest) ProtoMessage() {}

func (x *ListNamespaceDelegationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceDelegationRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceDelegationRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListNamespaceDelegationRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListNamespaceDelegationRequest) GetFilterNamespace() string {
	if x != nil {
		return x.FilterNamespace
	}
	return ""
}

type ListNamespaceDelegationResult struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Results       []*ListNamespaceDelegationResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespaceDelegationResult) Reset() {
	*x = ListNamespaceDelegationResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespaceDelegationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceDelegationResult) ProtoMessage() {}

func (x *ListNamespaceDelegationResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceDelegationResult.ProtoReflect.Descriptor instead.
func (*ListNamespaceDelegationResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListNamespaceDelegationResult) GetResults() []*ListNamespaceDelegationResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListIdentifierDelegationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery     *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterUid     string                 `protobuf:"bytes,2,opt,name=filter_uid,json=filterUid,proto3" json:"filter_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIdentifierDelegationRequest) Reset() {
	*x = ListIdentifierDelegationRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIdentifierDelegationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentifierDelegationRequest) ProtoMessage() {}

func (x *ListIdentifierDelegationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentifierDelegationRequest.ProtoReflect.Descriptor instead.
func (*ListIdentifierDelegationRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListIdentifierDelegationRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListIdentifierDelegationRequest) GetFilterUid() string {
	if x != nil {
		return x.FilterUid
	}
	return ""
}

type ListIdentifierDelegationResult struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Results       []*ListIdentifierDelegationResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIdentifierDelegationResult) Reset() {
	*x = ListIdentifierDelegationResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIdentifierDelegationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentifierDelegationResult) ProtoMessage() {}

func (x *ListIdentifierDelegationResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentifierDelegationResult.ProtoReflect.Descriptor instead.
func (*ListIdentifierDelegationResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListIdentifierDelegationResult) GetResults() []*ListIdentifierDelegationResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type BaseQuery struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FilterStore     string                 `protobuf:"bytes,1,opt,name=filter_store,json=filterStore,proto3" json:"filter_store,omitempty"`
	UseStateStore   bool                   `protobuf:"varint,2,opt,name=use_state_store,json=useStateStore,proto3" json:"use_state_store,omitempty"`
	Operation       v0.TopologyChangeOp    `protobuf:"varint,3,opt,name=operation,proto3,enum=com.digitalasset.canton.protocol.v0.TopologyChangeOp" json:"operation,omitempty"`
	FilterOperation bool                   `protobuf:"varint,4,opt,name=filter_operation,json=filterOperation,proto3" json:"filter_operation,omitempty"`
	// Types that are valid to be assigned to TimeQuery:
	//
	//	*BaseQuery_Snapshot
	//	*BaseQuery_HeadState
	//	*BaseQuery_Range
	TimeQuery       isBaseQuery_TimeQuery   `protobuf_oneof:"time_query"`
	FilterSignedKey string                  `protobuf:"bytes,8,opt,name=filter_signed_key,json=filterSignedKey,proto3" json:"filter_signed_key,omitempty"`
	ProtocolVersion *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BaseQuery) Reset() {
	*x = BaseQuery{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseQuery) ProtoMessage() {}

func (x *BaseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseQuery.ProtoReflect.Descriptor instead.
func (*BaseQuery) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{4}
}

func (x *BaseQuery) GetFilterStore() string {
	if x != nil {
		return x.FilterStore
	}
	return ""
}

func (x *BaseQuery) GetUseStateStore() bool {
	if x != nil {
		return x.UseStateStore
	}
	return false
}

func (x *BaseQuery) GetOperation() v0.TopologyChangeOp {
	if x != nil {
		return x.Operation
	}
	return v0.TopologyChangeOp(0)
}

func (x *BaseQuery) GetFilterOperation() bool {
	if x != nil {
		return x.FilterOperation
	}
	return false
}

func (x *BaseQuery) GetTimeQuery() isBaseQuery_TimeQuery {
	if x != nil {
		return x.TimeQuery
	}
	return nil
}

func (x *BaseQuery) GetSnapshot() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.TimeQuery.(*BaseQuery_Snapshot); ok {
			return x.Snapshot
		}
	}
	return nil
}

func (x *BaseQuery) GetHeadState() *emptypb.Empty {
	if x != nil {
		if x, ok := x.TimeQuery.(*BaseQuery_HeadState); ok {
			return x.HeadState
		}
	}
	return nil
}

func (x *BaseQuery) GetRange() *BaseQuery_TimeRange {
	if x != nil {
		if x, ok := x.TimeQuery.(*BaseQuery_Range); ok {
			return x.Range
		}
	}
	return nil
}

func (x *BaseQuery) GetFilterSignedKey() string {
	if x != nil {
		return x.FilterSignedKey
	}
	return ""
}

func (x *BaseQuery) GetProtocolVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.ProtocolVersion
	}
	return nil
}

type isBaseQuery_TimeQuery interface {
	isBaseQuery_TimeQuery()
}

type BaseQuery_Snapshot struct {
	Snapshot *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=snapshot,proto3,oneof"`
}

type BaseQuery_HeadState struct {
	HeadState *emptypb.Empty `protobuf:"bytes,6,opt,name=head_state,json=headState,proto3,oneof"`
}

type BaseQuery_Range struct {
	Range *BaseQuery_TimeRange `protobuf:"bytes,7,opt,name=range,proto3,oneof"`
}

func (*BaseQuery_Snapshot) isBaseQuery_TimeQuery() {}

func (*BaseQuery_HeadState) isBaseQuery_TimeQuery() {}

func (*BaseQuery_Range) isBaseQuery_TimeQuery() {}

type BaseResult struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Store               string                 `protobuf:"bytes,1,opt,name=store,proto3" json:"store,omitempty"`
	Sequenced           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=sequenced,proto3" json:"sequenced,omitempty"`
	ValidFrom           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidUntil          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Operation           v0.TopologyChangeOp    `protobuf:"varint,4,opt,name=operation,proto3,enum=com.digitalasset.canton.protocol.v0.TopologyChangeOp" json:"operation,omitempty"`
	Serialized          []byte                 `protobuf:"bytes,5,opt,name=serialized,proto3" json:"serialized,omitempty"`
	SignedByFingerprint string                 `protobuf:"bytes,6,opt,name=signed_by_fingerprint,json=signedByFingerprint,proto3" json:"signed_by_fingerprint,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *BaseResult) Reset() {
	*x = BaseResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResult) ProtoMessage() {}

func (x *BaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResult.ProtoReflect.Descriptor instead.
func (*BaseResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{5}
}

func (x *BaseResult) GetStore() string {
	if x != nil {
		return x.Store
	}
	return ""
}

func (x *BaseResult) GetSequenced() *timestamppb.Timestamp {
	if x != nil {
		return x.Sequenced
	}
	return nil
}

func (x *BaseResult) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *BaseResult) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *BaseResult) GetOperation() v0.TopologyChangeOp {
	if x != nil {
		return x.Operation
	}
	return v0.TopologyChangeOp(0)
}

func (x *BaseResult) GetSerialized() []byte {
	if x != nil {
		return x.Serialized
	}
	return nil
}

func (x *BaseResult) GetSignedByFingerprint() string {
	if x != nil {
		return x.SignedByFingerprint
	}
	return ""
}

type ListPartyToParticipantResult struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Results       []*ListPartyToParticipantResult_Result `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToParticipantResult) Reset() {
	*x = ListPartyToParticipantResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToParticipantResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToParticipantResult) ProtoMessage() {}

func (x *ListPartyToParticipantResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToParticipantResult.ProtoReflect.Descriptor instead.
func (*ListPartyToParticipantResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListPartyToParticipantResult) GetResults() []*ListPartyToParticipantResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListPartyToParticipantRequest struct {
	state             protoimpl.MessageState                           `protogen:"open.v1"`
	BaseQuery         *BaseQuery                                       `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterParty       string                                           `protobuf:"bytes,2,opt,name=filter_party,json=filterParty,proto3" json:"filter_party,omitempty"`
	FilterParticipant string                                           `protobuf:"bytes,3,opt,name=filter_participant,json=filterParticipant,proto3" json:"filter_participant,omitempty"`
	FilterRequestSide *ListPartyToParticipantRequest_FilterRequestSide `protobuf:"bytes,4,opt,name=filter_request_side,json=filterRequestSide,proto3" json:"filter_request_side,omitempty"`
	FilterPermission  *ListPartyToParticipantRequest_FilterPermission  `protobuf:"bytes,5,opt,name=filter_permission,json=filterPermission,proto3" json:"filter_permission,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListPartyToParticipantRequest) Reset() {
	*x = ListPartyToParticipantRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToParticipantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToParticipantRequest) ProtoMessage() {}

func (x *ListPartyToParticipantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToParticipantRequest.ProtoReflect.Descriptor instead.
func (*ListPartyToParticipantRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListPartyToParticipantRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListPartyToParticipantRequest) GetFilterParty() string {
	if x != nil {
		return x.FilterParty
	}
	return ""
}

func (x *ListPartyToParticipantRequest) GetFilterParticipant() string {
	if x != nil {
		return x.FilterParticipant
	}
	return ""
}

func (x *ListPartyToParticipantRequest) GetFilterRequestSide() *ListPartyToParticipantRequest_FilterRequestSide {
	if x != nil {
		return x.FilterRequestSide
	}
	return nil
}

func (x *ListPartyToParticipantRequest) GetFilterPermission() *ListPartyToParticipantRequest_FilterPermission {
	if x != nil {
		return x.FilterPermission
	}
	return nil
}

type ListOwnerToKeyMappingRequest struct {
	state              protoimpl.MessageState                         `protogen:"open.v1"`
	BaseQuery          *BaseQuery                                     `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterKeyOwnerType string                                         `protobuf:"bytes,2,opt,name=filter_key_owner_type,json=filterKeyOwnerType,proto3" json:"filter_key_owner_type,omitempty"`
	FilterKeyOwnerUid  string                                         `protobuf:"bytes,3,opt,name=filter_key_owner_uid,json=filterKeyOwnerUid,proto3" json:"filter_key_owner_uid,omitempty"`
	FilterKeyPurpose   *ListOwnerToKeyMappingRequest_FilterKeyPurpose `protobuf:"bytes,4,opt,name=filter_key_purpose,json=filterKeyPurpose,proto3" json:"filter_key_purpose,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListOwnerToKeyMappingRequest) Reset() {
	*x = ListOwnerToKeyMappingRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnerToKeyMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnerToKeyMappingRequest) ProtoMessage() {}

func (x *ListOwnerToKeyMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnerToKeyMappingRequest.ProtoReflect.Descriptor instead.
func (*ListOwnerToKeyMappingRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListOwnerToKeyMappingRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListOwnerToKeyMappingRequest) GetFilterKeyOwnerType() string {
	if x != nil {
		return x.FilterKeyOwnerType
	}
	return ""
}

func (x *ListOwnerToKeyMappingRequest) GetFilterKeyOwnerUid() string {
	if x != nil {
		return x.FilterKeyOwnerUid
	}
	return ""
}

func (x *ListOwnerToKeyMappingRequest) GetFilterKeyPurpose() *ListOwnerToKeyMappingRequest_FilterKeyPurpose {
	if x != nil {
		return x.FilterKeyPurpose
	}
	return nil
}

type ListOwnerToKeyMappingResult struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Results       []*ListOwnerToKeyMappingResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOwnerToKeyMappingResult) Reset() {
	*x = ListOwnerToKeyMappingResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnerToKeyMappingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnerToKeyMappingResult) ProtoMessage() {}

func (x *ListOwnerToKeyMappingResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnerToKeyMappingResult.ProtoReflect.Descriptor instead.
func (*ListOwnerToKeyMappingResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListOwnerToKeyMappingResult) GetResults() []*ListOwnerToKeyMappingResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListSignedLegalIdentityClaimRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery     *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterUid     string                 `protobuf:"bytes,2,opt,name=filter_uid,json=filterUid,proto3" json:"filter_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignedLegalIdentityClaimRequest) Reset() {
	*x = ListSignedLegalIdentityClaimRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignedLegalIdentityClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignedLegalIdentityClaimRequest) ProtoMessage() {}

func (x *ListSignedLegalIdentityClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignedLegalIdentityClaimRequest.ProtoReflect.Descriptor instead.
func (*ListSignedLegalIdentityClaimRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListSignedLegalIdentityClaimRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListSignedLegalIdentityClaimRequest) GetFilterUid() string {
	if x != nil {
		return x.FilterUid
	}
	return ""
}

type ListSignedLegalIdentityClaimResult struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Results       []*ListSignedLegalIdentityClaimResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignedLegalIdentityClaimResult) Reset() {
	*x = ListSignedLegalIdentityClaimResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignedLegalIdentityClaimResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignedLegalIdentityClaimResult) ProtoMessage() {}

func (x *ListSignedLegalIdentityClaimResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignedLegalIdentityClaimResult.ProtoReflect.Descriptor instead.
func (*ListSignedLegalIdentityClaimResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListSignedLegalIdentityClaimResult) GetResults() []*ListSignedLegalIdentityClaimResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListVettedPackagesRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery         *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterParticipant string                 `protobuf:"bytes,2,opt,name=filter_participant,json=filterParticipant,proto3" json:"filter_participant,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListVettedPackagesRequest) Reset() {
	*x = ListVettedPackagesRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVettedPackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVettedPackagesRequest) ProtoMessage() {}

func (x *ListVettedPackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVettedPackagesRequest.ProtoReflect.Descriptor instead.
func (*ListVettedPackagesRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListVettedPackagesRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListVettedPackagesRequest) GetFilterParticipant() string {
	if x != nil {
		return x.FilterParticipant
	}
	return ""
}

type ListVettedPackagesResult struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Results       []*ListVettedPackagesResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVettedPackagesResult) Reset() {
	*x = ListVettedPackagesResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVettedPackagesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVettedPackagesResult) ProtoMessage() {}

func (x *ListVettedPackagesResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVettedPackagesResult.ProtoReflect.Descriptor instead.
func (*ListVettedPackagesResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListVettedPackagesResult) GetResults() []*ListVettedPackagesResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListCheckOnlyPackagesRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery         *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterParticipant string                 `protobuf:"bytes,2,opt,name=filter_participant,json=filterParticipant,proto3" json:"filter_participant,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListCheckOnlyPackagesRequest) Reset() {
	*x = ListCheckOnlyPackagesRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCheckOnlyPackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCheckOnlyPackagesRequest) ProtoMessage() {}

func (x *ListCheckOnlyPackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCheckOnlyPackagesRequest.ProtoReflect.Descriptor instead.
func (*ListCheckOnlyPackagesRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListCheckOnlyPackagesRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListCheckOnlyPackagesRequest) GetFilterParticipant() string {
	if x != nil {
		return x.FilterParticipant
	}
	return ""
}

type ListCheckOnlyPackagesResult struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Results       []*ListCheckOnlyPackagesResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCheckOnlyPackagesResult) Reset() {
	*x = ListCheckOnlyPackagesResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCheckOnlyPackagesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCheckOnlyPackagesResult) ProtoMessage() {}

func (x *ListCheckOnlyPackagesResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCheckOnlyPackagesResult.ProtoReflect.Descriptor instead.
func (*ListCheckOnlyPackagesResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListCheckOnlyPackagesResult) GetResults() []*ListCheckOnlyPackagesResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListDomainParametersChangesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery     *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDomainParametersChangesRequest) Reset() {
	*x = ListDomainParametersChangesRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDomainParametersChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainParametersChangesRequest) ProtoMessage() {}

func (x *ListDomainParametersChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainParametersChangesRequest.ProtoReflect.Descriptor instead.
func (*ListDomainParametersChangesRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListDomainParametersChangesRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

type ListDomainParametersChangesResult struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Results       []*ListDomainParametersChangesResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDomainParametersChangesResult) Reset() {
	*x = ListDomainParametersChangesResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDomainParametersChangesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainParametersChangesResult) ProtoMessage() {}

func (x *ListDomainParametersChangesResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainParametersChangesResult.ProtoReflect.Descriptor instead.
func (*ListDomainParametersChangesResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListDomainParametersChangesResult) GetResults() []*ListDomainParametersChangesResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListAvailableStoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAvailableStoresRequest) Reset() {
	*x = ListAvailableStoresRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableStoresRequest) ProtoMessage() {}

func (x *ListAvailableStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableStoresRequest.ProtoReflect.Descriptor instead.
func (*ListAvailableStoresRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{18}
}

type ListAvailableStoresResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreIds      []string               `protobuf:"bytes,1,rep,name=store_ids,json=storeIds,proto3" json:"store_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAvailableStoresResult) Reset() {
	*x = ListAvailableStoresResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableStoresResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableStoresResult) ProtoMessage() {}

func (x *ListAvailableStoresResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableStoresResult.ProtoReflect.Descriptor instead.
func (*ListAvailableStoresResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListAvailableStoresResult) GetStoreIds() []string {
	if x != nil {
		return x.StoreIds
	}
	return nil
}

type ListParticipantDomainStateRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery         *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterDomain      string                 `protobuf:"bytes,2,opt,name=filter_domain,json=filterDomain,proto3" json:"filter_domain,omitempty"`
	FilterParticipant string                 `protobuf:"bytes,3,opt,name=filter_participant,json=filterParticipant,proto3" json:"filter_participant,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListParticipantDomainStateRequest) Reset() {
	*x = ListParticipantDomainStateRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListParticipantDomainStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantDomainStateRequest) ProtoMessage() {}

func (x *ListParticipantDomainStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantDomainStateRequest.ProtoReflect.Descriptor instead.
func (*ListParticipantDomainStateRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListParticipantDomainStateRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListParticipantDomainStateRequest) GetFilterDomain() string {
	if x != nil {
		return x.FilterDomain
	}
	return ""
}

func (x *ListParticipantDomainStateRequest) GetFilterParticipant() string {
	if x != nil {
		return x.FilterParticipant
	}
	return ""
}

type ListParticipantDomainStateResult struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Results       []*ListParticipantDomainStateResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListParticipantDomainStateResult) Reset() {
	*x = ListParticipantDomainStateResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListParticipantDomainStateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantDomainStateResult) ProtoMessage() {}

func (x *ListParticipantDomainStateResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantDomainStateResult.ProtoReflect.Descriptor instead.
func (*ListParticipantDomainStateResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListParticipantDomainStateResult) GetResults() []*ListParticipantDomainStateResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListMediatorDomainStateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery      *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	FilterDomain   string                 `protobuf:"bytes,2,opt,name=filter_domain,json=filterDomain,proto3" json:"filter_domain,omitempty"`
	FilterMediator string                 `protobuf:"bytes,3,opt,name=filter_mediator,json=filterMediator,proto3" json:"filter_mediator,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListMediatorDomainStateRequest) Reset() {
	*x = ListMediatorDomainStateRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediatorDomainStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediatorDomainStateRequest) ProtoMessage() {}

func (x *ListMediatorDomainStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediatorDomainStateRequest.ProtoReflect.Descriptor instead.
func (*ListMediatorDomainStateRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListMediatorDomainStateRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

func (x *ListMediatorDomainStateRequest) GetFilterDomain() string {
	if x != nil {
		return x.FilterDomain
	}
	return ""
}

func (x *ListMediatorDomainStateRequest) GetFilterMediator() string {
	if x != nil {
		return x.FilterMediator
	}
	return ""
}

type ListMediatorDomainStateResult struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Results       []*ListMediatorDomainStateResult_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMediatorDomainStateResult) Reset() {
	*x = ListMediatorDomainStateResult{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediatorDomainStateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediatorDomainStateResult) ProtoMessage() {}

func (x *ListMediatorDomainStateResult) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediatorDomainStateResult.ProtoReflect.Descriptor instead.
func (*ListMediatorDomainStateResult) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListMediatorDomainStateResult) GetResults() []*ListMediatorDomainStateResult_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListAllRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseQuery     *BaseQuery             `protobuf:"bytes,1,opt,name=base_query,json=baseQuery,proto3" json:"base_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllRequest) Reset() {
	*x = ListAllRequest{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllRequest) ProtoMessage() {}

func (x *ListAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllRequest.ProtoReflect.Descriptor instead.
func (*ListAllRequest) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{24}
}

func (x *ListAllRequest) GetBaseQuery() *BaseQuery {
	if x != nil {
		return x.BaseQuery
	}
	return nil
}

type ListAllResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Result        *v0.TopologyTransactions `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllResponse) Reset() {
	*x = ListAllResponse{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllResponse) ProtoMessage() {}

func (x *ListAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllResponse.ProtoReflect.Descriptor instead.
func (*ListAllResponse) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListAllResponse) GetResult() *v0.TopologyTransactions {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListNamespaceDelegationResult_Result struct {
	state                protoimpl.MessageState  `protogen:"open.v1"`
	Context              *BaseResult             `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item                 *v0.NamespaceDelegation `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	TargetKeyFingerprint string                  `protobuf:"bytes,3,opt,name=target_key_fingerprint,json=targetKeyFingerprint,proto3" json:"target_key_fingerprint,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListNamespaceDelegationResult_Result) Reset() {
	*x = ListNamespaceDelegationResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespaceDelegationResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceDelegationResult_Result) ProtoMessage() {}

func (x *ListNamespaceDelegationResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceDelegationResult_Result.ProtoReflect.Descriptor instead.
func (*ListNamespaceDelegationResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListNamespaceDelegationResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListNamespaceDelegationResult_Result) GetItem() *v0.NamespaceDelegation {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ListNamespaceDelegationResult_Result) GetTargetKeyFingerprint() string {
	if x != nil {
		return x.TargetKeyFingerprint
	}
	return ""
}

type ListIdentifierDelegationResult_Result struct {
	state                protoimpl.MessageState   `protogen:"open.v1"`
	Context              *BaseResult              `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item                 *v0.IdentifierDelegation `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	TargetKeyFingerprint string                   `protobuf:"bytes,3,opt,name=target_key_fingerprint,json=targetKeyFingerprint,proto3" json:"target_key_fingerprint,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListIdentifierDelegationResult_Result) Reset() {
	*x = ListIdentifierDelegationResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIdentifierDelegationResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentifierDelegationResult_Result) ProtoMessage() {}

func (x *ListIdentifierDelegationResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentifierDelegationResult_Result.ProtoReflect.Descriptor instead.
func (*ListIdentifierDelegationResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListIdentifierDelegationResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListIdentifierDelegationResult_Result) GetItem() *v0.IdentifierDelegation {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ListIdentifierDelegationResult_Result) GetTargetKeyFingerprint() string {
	if x != nil {
		return x.TargetKeyFingerprint
	}
	return ""
}

type BaseQuery_TimeRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Until         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=until,proto3" json:"until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseQuery_TimeRange) Reset() {
	*x = BaseQuery_TimeRange{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseQuery_TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseQuery_TimeRange) ProtoMessage() {}

func (x *BaseQuery_TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseQuery_TimeRange.ProtoReflect.Descriptor instead.
func (*BaseQuery_TimeRange) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *BaseQuery_TimeRange) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *BaseQuery_TimeRange) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

type ListPartyToParticipantResult_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v0.PartyToParticipant `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToParticipantResult_Result) Reset() {
	*x = ListPartyToParticipantResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToParticipantResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToParticipantResult_Result) ProtoMessage() {}

func (x *ListPartyToParticipantResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToParticipantResult_Result.ProtoReflect.Descriptor instead.
func (*ListPartyToParticipantResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ListPartyToParticipantResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListPartyToParticipantResult_Result) GetItem() *v0.PartyToParticipant {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListPartyToParticipantRequest_FilterRequestSide struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         v0.RequestSide         `protobuf:"varint,1,opt,name=value,proto3,enum=com.digitalasset.canton.protocol.v0.RequestSide" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToParticipantRequest_FilterRequestSide) Reset() {
	*x = ListPartyToParticipantRequest_FilterRequestSide{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToParticipantRequest_FilterRequestSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToParticipantRequest_FilterRequestSide) ProtoMessage() {}

func (x *ListPartyToParticipantRequest_FilterRequestSide) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToParticipantRequest_FilterRequestSide.ProtoReflect.Descriptor instead.
func (*ListPartyToParticipantRequest_FilterRequestSide) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListPartyToParticipantRequest_FilterRequestSide) GetValue() v0.RequestSide {
	if x != nil {
		return x.Value
	}
	return v0.RequestSide(0)
}

type ListPartyToParticipantRequest_FilterPermission struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Value         v0.ParticipantPermission `protobuf:"varint,1,opt,name=value,proto3,enum=com.digitalasset.canton.protocol.v0.ParticipantPermission" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartyToParticipantRequest_FilterPermission) Reset() {
	*x = ListPartyToParticipantRequest_FilterPermission{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartyToParticipantRequest_FilterPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartyToParticipantRequest_FilterPermission) ProtoMessage() {}

func (x *ListPartyToParticipantRequest_FilterPermission) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartyToParticipantRequest_FilterPermission.ProtoReflect.Descriptor instead.
func (*ListPartyToParticipantRequest_FilterPermission) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ListPartyToParticipantRequest_FilterPermission) GetValue() v0.ParticipantPermission {
	if x != nil {
		return x.Value
	}
	return v0.ParticipantPermission(0)
}

type ListOwnerToKeyMappingRequest_FilterKeyPurpose struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         v01.KeyPurpose         `protobuf:"varint,1,opt,name=value,proto3,enum=com.digitalasset.canton.crypto.v0.KeyPurpose" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOwnerToKeyMappingRequest_FilterKeyPurpose) Reset() {
	*x = ListOwnerToKeyMappingRequest_FilterKeyPurpose{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnerToKeyMappingRequest_FilterKeyPurpose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnerToKeyMappingRequest_FilterKeyPurpose) ProtoMessage() {}

func (x *ListOwnerToKeyMappingRequest_FilterKeyPurpose) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnerToKeyMappingRequest_FilterKeyPurpose.ProtoReflect.Descriptor instead.
func (*ListOwnerToKeyMappingRequest_FilterKeyPurpose) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListOwnerToKeyMappingRequest_FilterKeyPurpose) GetValue() v01.KeyPurpose {
	if x != nil {
		return x.Value
	}
	return v01.KeyPurpose(0)
}

type ListOwnerToKeyMappingResult_Result struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Context        *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item           *v0.OwnerToKeyMapping  `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	KeyFingerprint string                 `protobuf:"bytes,3,opt,name=key_fingerprint,json=keyFingerprint,proto3" json:"key_fingerprint,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListOwnerToKeyMappingResult_Result) Reset() {
	*x = ListOwnerToKeyMappingResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnerToKeyMappingResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnerToKeyMappingResult_Result) ProtoMessage() {}

func (x *ListOwnerToKeyMappingResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnerToKeyMappingResult_Result.ProtoReflect.Descriptor instead.
func (*ListOwnerToKeyMappingResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListOwnerToKeyMappingResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListOwnerToKeyMappingResult_Result) GetItem() *v0.OwnerToKeyMapping {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ListOwnerToKeyMappingResult_Result) GetKeyFingerprint() string {
	if x != nil {
		return x.KeyFingerprint
	}
	return ""
}

type ListSignedLegalIdentityClaimResult_Result struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Context       *BaseResult                  `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v0.SignedLegalIdentityClaim `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignedLegalIdentityClaimResult_Result) Reset() {
	*x = ListSignedLegalIdentityClaimResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignedLegalIdentityClaimResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignedLegalIdentityClaimResult_Result) ProtoMessage() {}

func (x *ListSignedLegalIdentityClaimResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignedLegalIdentityClaimResult_Result.ProtoReflect.Descriptor instead.
func (*ListSignedLegalIdentityClaimResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListSignedLegalIdentityClaimResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListSignedLegalIdentityClaimResult_Result) GetItem() *v0.SignedLegalIdentityClaim {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListVettedPackagesResult_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v0.VettedPackages     `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVettedPackagesResult_Result) Reset() {
	*x = ListVettedPackagesResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVettedPackagesResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVettedPackagesResult_Result) ProtoMessage() {}

func (x *ListVettedPackagesResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVettedPackagesResult_Result.ProtoReflect.Descriptor instead.
func (*ListVettedPackagesResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListVettedPackagesResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListVettedPackagesResult_Result) GetItem() *v0.VettedPackages {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListCheckOnlyPackagesResult_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v0.CheckOnlyPackages  `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCheckOnlyPackagesResult_Result) Reset() {
	*x = ListCheckOnlyPackagesResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCheckOnlyPackagesResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCheckOnlyPackagesResult_Result) ProtoMessage() {}

func (x *ListCheckOnlyPackagesResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCheckOnlyPackagesResult_Result.ProtoReflect.Descriptor instead.
func (*ListCheckOnlyPackagesResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ListCheckOnlyPackagesResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListCheckOnlyPackagesResult_Result) GetItem() *v0.CheckOnlyPackages {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListDomainParametersChangesResult_Result struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Context *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// Types that are valid to be assigned to Parameters:
	//
	//	*ListDomainParametersChangesResult_Result_V0
	//	*ListDomainParametersChangesResult_Result_V1
	//	*ListDomainParametersChangesResult_Result_V2
	Parameters    isListDomainParametersChangesResult_Result_Parameters `protobuf_oneof:"parameters"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDomainParametersChangesResult_Result) Reset() {
	*x = ListDomainParametersChangesResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDomainParametersChangesResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainParametersChangesResult_Result) ProtoMessage() {}

func (x *ListDomainParametersChangesResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainParametersChangesResult_Result.ProtoReflect.Descriptor instead.
func (*ListDomainParametersChangesResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ListDomainParametersChangesResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListDomainParametersChangesResult_Result) GetParameters() isListDomainParametersChangesResult_Result_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ListDomainParametersChangesResult_Result) GetV0() *v0.DynamicDomainParameters {
	if x != nil {
		if x, ok := x.Parameters.(*ListDomainParametersChangesResult_Result_V0); ok {
			return x.V0
		}
	}
	return nil
}

func (x *ListDomainParametersChangesResult_Result) GetV1() *v1.DynamicDomainParameters {
	if x != nil {
		if x, ok := x.Parameters.(*ListDomainParametersChangesResult_Result_V1); ok {
			return x.V1
		}
	}
	return nil
}

func (x *ListDomainParametersChangesResult_Result) GetV2() *v2.DynamicDomainParameters {
	if x != nil {
		if x, ok := x.Parameters.(*ListDomainParametersChangesResult_Result_V2); ok {
			return x.V2
		}
	}
	return nil
}

type isListDomainParametersChangesResult_Result_Parameters interface {
	isListDomainParametersChangesResult_Result_Parameters()
}

type ListDomainParametersChangesResult_Result_V0 struct {
	V0 *v0.DynamicDomainParameters `protobuf:"bytes,2,opt,name=v0,proto3,oneof"`
}

type ListDomainParametersChangesResult_Result_V1 struct {
	V1 *v1.DynamicDomainParameters `protobuf:"bytes,3,opt,name=v1,proto3,oneof"`
}

type ListDomainParametersChangesResult_Result_V2 struct {
	V2 *v2.DynamicDomainParameters `protobuf:"bytes,4,opt,name=v2,proto3,oneof"`
}

func (*ListDomainParametersChangesResult_Result_V0) isListDomainParametersChangesResult_Result_Parameters() {
}

func (*ListDomainParametersChangesResult_Result_V1) isListDomainParametersChangesResult_Result_Parameters() {
}

func (*ListDomainParametersChangesResult_Result_V2) isListDomainParametersChangesResult_Result_Parameters() {
}

type ListParticipantDomainStateResult_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *BaseResult            `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v0.ParticipantState   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListParticipantDomainStateResult_Result) Reset() {
	*x = ListParticipantDomainStateResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListParticipantDomainStateResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantDomainStateResult_Result) ProtoMessage() {}

func (x *ListParticipantDomainStateResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantDomainStateResult_Result.ProtoReflect.Descriptor instead.
func (*ListParticipantDomainStateResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ListParticipantDomainStateResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListParticipantDomainStateResult_Result) GetItem() *v0.ParticipantState {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListMediatorDomainStateResult_Result struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Context       *BaseResult             `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Item          *v0.MediatorDomainState `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMediatorDomainStateResult_Result) Reset() {
	*x = ListMediatorDomainStateResult_Result{}
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediatorDomainStateResult_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediatorDomainStateResult_Result) ProtoMessage() {}

func (x *ListMediatorDomainStateResult_Result) ProtoReflect() protoreflect.Message {
	mi := &file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediatorDomainStateResult_Result.ProtoReflect.Descriptor instead.
func (*ListMediatorDomainStateResult_Result) Descriptor() ([]byte, []int) {
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP(), []int{23, 0}
}

func (x *ListMediatorDomainStateResult_Result) GetContext() *BaseResult {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ListMediatorDomainStateResult_Result) GetItem() *v0.MediatorDomainState {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto protoreflect.FileDescriptor

const file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDesc = "" +
	"\n" +
	"Mcom/digitalasset/canton/topology/admin/v0/topology_manager_read_service.proto\x12)com.digitalasset.canton.topology.admin.v0\x1a.com/digitalasset/canton/crypto/v0/crypto.proto\x1a4com/digitalasset/canton/protocol/v0/sequencing.proto\x1a2com/digitalasset/canton/protocol/v0/topology.proto\x1a4com/digitalasset/canton/protocol/v1/sequencing.proto\x1a7com/digitalasset/canton/protocol/v2/domain_params.proto\x1a6com/digitalasset/canton/protocol/v0/topology_ext.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xa0\x01\n" +
	"\x1eListNamespaceDelegationRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x12)\n" +
	"\x10filter_namespace\x18\x02 \x01(\tR\x0ffilterNamespace\"\xea\x02\n" +
	"\x1dListNamespaceDelegationResult\x12i\n" +
	"\aresults\x18\x01 \x03(\v2O.com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult.ResultR\aresults\x1a\xdd\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12L\n" +
	"\x04item\x18\x02 \x01(\v28.com.digitalasset.canton.protocol.v0.NamespaceDelegationR\x04item\x124\n" +
	"\x16target_key_fingerprint\x18\x03 \x01(\tR\x14targetKeyFingerprint\"\x95\x01\n" +
	"\x1fListIdentifierDelegationRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x12\x1d\n" +
	"\n" +
	"filter_uid\x18\x02 \x01(\tR\tfilterUid\"\xed\x02\n" +
	"\x1eListIdentifierDelegationResult\x12j\n" +
	"\aresults\x18\x01 \x03(\v2P.com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult.ResultR\aresults\x1a\xde\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12M\n" +
	"\x04item\x18\x02 \x01(\v29.com.digitalasset.canton.protocol.v0.IdentifierDelegationR\x04item\x124\n" +
	"\x16target_key_fingerprint\x18\x03 \x01(\tR\x14targetKeyFingerprint\"\x93\x05\n" +
	"\tBaseQuery\x12!\n" +
	"\ffilter_store\x18\x01 \x01(\tR\vfilterStore\x12&\n" +
	"\x0fuse_state_store\x18\x02 \x01(\bR\ruseStateStore\x12S\n" +
	"\toperation\x18\x03 \x01(\x0e25.com.digitalasset.canton.protocol.v0.TopologyChangeOpR\toperation\x12)\n" +
	"\x10filter_operation\x18\x04 \x01(\bR\x0ffilterOperation\x128\n" +
	"\bsnapshot\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\bsnapshot\x127\n" +
	"\n" +
	"head_state\x18\x06 \x01(\v2\x16.google.protobuf.EmptyH\x00R\theadState\x12V\n" +
	"\x05range\x18\a \x01(\v2>.com.digitalasset.canton.topology.admin.v0.BaseQuery.TimeRangeH\x00R\x05range\x12*\n" +
	"\x11filter_signed_key\x18\b \x01(\tR\x0ffilterSignedKey\x12G\n" +
	"\x10protocol_version\x18\t \x01(\v2\x1c.google.protobuf.StringValueR\x0fprotocolVersion\x1am\n" +
	"\tTimeRange\x12.\n" +
	"\x04from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x120\n" +
	"\x05until\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x05untilB\f\n" +
	"\n" +
	"time_query\"\xfd\x02\n" +
	"\n" +
	"BaseResult\x12\x14\n" +
	"\x05store\x18\x01 \x01(\tR\x05store\x128\n" +
	"\tsequenced\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tsequenced\x129\n" +
	"\n" +
	"valid_from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tvalidFrom\x12;\n" +
	"\vvalid_until\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"validUntil\x12S\n" +
	"\toperation\x18\x04 \x01(\x0e25.com.digitalasset.canton.protocol.v0.TopologyChangeOpR\toperation\x12\x1e\n" +
	"\n" +
	"serialized\x18\x05 \x01(\fR\n" +
	"serialized\x122\n" +
	"\x15signed_by_fingerprint\x18\x06 \x01(\tR\x13signedByFingerprint\"\xb1\x02\n" +
	"\x1cListPartyToParticipantResult\x12h\n" +
	"\aresults\x18\x02 \x03(\v2N.com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult.ResultR\aresults\x1a\xa6\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12K\n" +
	"\x04item\x18\x02 \x01(\v27.com.digitalasset.canton.protocol.v0.PartyToParticipantR\x04item\"\x9f\x05\n" +
	"\x1dListPartyToParticipantRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x12!\n" +
	"\ffilter_party\x18\x02 \x01(\tR\vfilterParty\x12-\n" +
	"\x12filter_participant\x18\x03 \x01(\tR\x11filterParticipant\x12\x8a\x01\n" +
	"\x13filter_request_side\x18\x04 \x01(\v2Z.com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.FilterRequestSideR\x11filterRequestSide\x12\x86\x01\n" +
	"\x11filter_permission\x18\x05 \x01(\v2Y.com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.FilterPermissionR\x10filterPermission\x1a[\n" +
	"\x11FilterRequestSide\x12F\n" +
	"\x05value\x18\x01 \x01(\x0e20.com.digitalasset.canton.protocol.v0.RequestSideR\x05value\x1ad\n" +
	"\x10FilterPermission\x12P\n" +
	"\x05value\x18\x01 \x01(\x0e2:.com.digitalasset.canton.protocol.v0.ParticipantPermissionR\x05value\"\xb9\x03\n" +
	"\x1cListOwnerToKeyMappingRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x121\n" +
	"\x15filter_key_owner_type\x18\x02 \x01(\tR\x12filterKeyOwnerType\x12/\n" +
	"\x14filter_key_owner_uid\x18\x03 \x01(\tR\x11filterKeyOwnerUid\x12\x86\x01\n" +
	"\x12filter_key_purpose\x18\x04 \x01(\v2X.com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest.FilterKeyPurposeR\x10filterKeyPurpose\x1aW\n" +
	"\x10FilterKeyPurpose\x12C\n" +
	"\x05value\x18\x01 \x01(\x0e2-.com.digitalasset.canton.crypto.v0.KeyPurposeR\x05value\"\xd7\x02\n" +
	"\x1bListOwnerToKeyMappingResult\x12g\n" +
	"\aresults\x18\x01 \x03(\v2M.com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult.ResultR\aresults\x1a\xce\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12J\n" +
	"\x04item\x18\x02 \x01(\v26.com.digitalasset.canton.protocol.v0.OwnerToKeyMappingR\x04item\x12'\n" +
	"\x0fkey_fingerprint\x18\x03 \x01(\tR\x0ekeyFingerprint\"\x99\x01\n" +
	"#ListSignedLegalIdentityClaimRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x12\x1d\n" +
	"\n" +
	"filter_uid\x18\x02 \x01(\tR\tfilterUid\"\xc3\x02\n" +
	"\"ListSignedLegalIdentityClaimResult\x12n\n" +
	"\aresults\x18\x01 \x03(\v2T.com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult.ResultR\aresults\x1a\xac\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12Q\n" +
	"\x04item\x18\x02 \x01(\v2=.com.digitalasset.canton.protocol.v0.SignedLegalIdentityClaimR\x04item\"\x9f\x01\n" +
	"\x19ListVettedPackagesRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x12-\n" +
	"\x12filter_participant\x18\x02 \x01(\tR\x11filterParticipant\"\xa5\x02\n" +
	"\x18ListVettedPackagesResult\x12d\n" +
	"\aresults\x18\x01 \x03(\v2J.com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult.ResultR\aresults\x1a\xa2\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12G\n" +
	"\x04item\x18\x02 \x01(\v23.com.digitalasset.canton.protocol.v0.VettedPackagesR\x04item\"\xa2\x01\n" +
	"\x1cListCheckOnlyPackagesRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x12-\n" +
	"\x12filter_participant\x18\x02 \x01(\tR\x11filterParticipant\"\xae\x02\n" +
	"\x1bListCheckOnlyPackagesResult\x12g\n" +
	"\aresults\x18\x01 \x03(\v2M.com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult.ResultR\aresults\x1a\xa5\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12J\n" +
	"\x04item\x18\x02 \x01(\v26.com.digitalasset.canton.protocol.v0.CheckOnlyPackagesR\x04item\"y\n" +
	"\"ListDomainParametersChangesRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\"\xec\x03\n" +
	"!ListDomainParametersChangesResult\x12m\n" +
	"\aresults\x18\x01 \x03(\v2S.com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult.ResultR\aresults\x1a\xd7\x02\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12N\n" +
	"\x02v0\x18\x02 \x01(\v2<.com.digitalasset.canton.protocol.v0.DynamicDomainParametersH\x00R\x02v0\x12N\n" +
	"\x02v1\x18\x03 \x01(\v2<.com.digitalasset.canton.protocol.v1.DynamicDomainParametersH\x00R\x02v1\x12N\n" +
	"\x02v2\x18\x04 \x01(\v2<.com.digitalasset.canton.protocol.v2.DynamicDomainParametersH\x00R\x02v2B\f\n" +
	"\n" +
	"parameters\"\x1c\n" +
	"\x1aListAvailableStoresRequest\"8\n" +
	"\x19ListAvailableStoresResult\x12\x1b\n" +
	"\tstore_ids\x18\x01 \x03(\tR\bstoreIds\"\xcc\x01\n" +
	"!ListParticipantDomainStateRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x12#\n" +
	"\rfilter_domain\x18\x02 \x01(\tR\ffilterDomain\x12-\n" +
	"\x12filter_participant\x18\x03 \x01(\tR\x11filterParticipant\"\xb7\x02\n" +
	" ListParticipantDomainStateResult\x12l\n" +
	"\aresults\x18\x01 \x03(\v2R.com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult.ResultR\aresults\x1a\xa4\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12I\n" +
	"\x04item\x18\x02 \x01(\v25.com.digitalasset.canton.protocol.v0.ParticipantStateR\x04item\"\xc3\x01\n" +
	"\x1eListMediatorDomainStateRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\x12#\n" +
	"\rfilter_domain\x18\x02 \x01(\tR\ffilterDomain\x12'\n" +
	"\x0ffilter_mediator\x18\x03 \x01(\tR\x0efilterMediator\"\xb4\x02\n" +
	"\x1dListMediatorDomainStateResult\x12i\n" +
	"\aresults\x18\x01 \x03(\v2O.com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult.ResultR\aresults\x1a\xa7\x01\n" +
	"\x06Result\x12O\n" +
	"\acontext\x18\x01 \x01(\v25.com.digitalasset.canton.topology.admin.v0.BaseResultR\acontext\x12L\n" +
	"\x04item\x18\x02 \x01(\v28.com.digitalasset.canton.protocol.v0.MediatorDomainStateR\x04item\"e\n" +
	"\x0eListAllRequest\x12S\n" +
	"\n" +
	"base_query\x18\x01 \x01(\v24.com.digitalasset.canton.topology.admin.v0.BaseQueryR\tbaseQuery\"d\n" +
	"\x0fListAllResponse\x12Q\n" +
	"\x06result\x18\x01 \x01(\v29.com.digitalasset.canton.protocol.v0.TopologyTransactionsR\x06result2\xb7\x10\n" +
	"\x1aTopologyManagerReadService\x12\xa2\x01\n" +
	"\x13ListAvailableStores\x12E.com.digitalasset.canton.topology.admin.v0.ListAvailableStoresRequest\x1aD.com.digitalasset.canton.topology.admin.v0.ListAvailableStoresResult\x12\xab\x01\n" +
	"\x16ListPartyToParticipant\x12H.com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest\x1aG.com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult\x12\xa8\x01\n" +
	"\x15ListOwnerToKeyMapping\x12G.com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest\x1aF.com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult\x12\xae\x01\n" +
	"\x17ListNamespaceDelegation\x12I.com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationRequest\x1aH.com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult\x12\xb1\x01\n" +
	"\x18ListIdentifierDelegation\x12J.com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationRequest\x1aI.com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult\x12\xbd\x01\n" +
	"\x1cListSignedLegalIdentityClaim\x12N.com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimRequest\x1aM.com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult\x12\xb7\x01\n" +
	"\x1aListParticipantDomainState\x12L.com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateRequest\x1aK.com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult\x12\xae\x01\n" +
	"\x17ListMediatorDomainState\x12I.com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateRequest\x1aH.com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult\x12\x9f\x01\n" +
	"\x12ListVettedPackages\x12D.com.digitalasset.canton.topology.admin.v0.ListVettedPackagesRequest\x1aC.com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult\x12\xa8\x01\n" +
	"\x15ListCheckOnlyPackages\x12G.com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesRequest\x1aF.com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult\x12\xba\x01\n" +
	"\x1bListDomainParametersChanges\x12M.com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesRequest\x1aL.com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult\x12\x80\x01\n" +
	"\aListAll\x129.com.digitalasset.canton.topology.admin.v0.ListAllRequest\x1a:.com.digitalasset.canton.topology.admin.v0.ListAllResponseBZZXgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/topology/admin/v0b\x06proto3"

var (
	file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescOnce sync.Once
	file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescData []byte
)

func file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescGZIP() []byte {
	file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescOnce.Do(func() {
		file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDesc), len(file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDesc)))
	})
	return file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDescData
}

var file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_goTypes = []any{
	(*ListNamespaceDelegationRequest)(nil),                  // 0: com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationRequest
	(*ListNamespaceDelegationResult)(nil),                   // 1: com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult
	(*ListIdentifierDelegationRequest)(nil),                 // 2: com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationRequest
	(*ListIdentifierDelegationResult)(nil),                  // 3: com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult
	(*BaseQuery)(nil),                                       // 4: com.digitalasset.canton.topology.admin.v0.BaseQuery
	(*BaseResult)(nil),                                      // 5: com.digitalasset.canton.topology.admin.v0.BaseResult
	(*ListPartyToParticipantResult)(nil),                    // 6: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult
	(*ListPartyToParticipantRequest)(nil),                   // 7: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest
	(*ListOwnerToKeyMappingRequest)(nil),                    // 8: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest
	(*ListOwnerToKeyMappingResult)(nil),                     // 9: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult
	(*ListSignedLegalIdentityClaimRequest)(nil),             // 10: com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimRequest
	(*ListSignedLegalIdentityClaimResult)(nil),              // 11: com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult
	(*ListVettedPackagesRequest)(nil),                       // 12: com.digitalasset.canton.topology.admin.v0.ListVettedPackagesRequest
	(*ListVettedPackagesResult)(nil),                        // 13: com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult
	(*ListCheckOnlyPackagesRequest)(nil),                    // 14: com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesRequest
	(*ListCheckOnlyPackagesResult)(nil),                     // 15: com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult
	(*ListDomainParametersChangesRequest)(nil),              // 16: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesRequest
	(*ListDomainParametersChangesResult)(nil),               // 17: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult
	(*ListAvailableStoresRequest)(nil),                      // 18: com.digitalasset.canton.topology.admin.v0.ListAvailableStoresRequest
	(*ListAvailableStoresResult)(nil),                       // 19: com.digitalasset.canton.topology.admin.v0.ListAvailableStoresResult
	(*ListParticipantDomainStateRequest)(nil),               // 20: com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateRequest
	(*ListParticipantDomainStateResult)(nil),                // 21: com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult
	(*ListMediatorDomainStateRequest)(nil),                  // 22: com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateRequest
	(*ListMediatorDomainStateResult)(nil),                   // 23: com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult
	(*ListAllRequest)(nil),                                  // 24: com.digitalasset.canton.topology.admin.v0.ListAllRequest
	(*ListAllResponse)(nil),                                 // 25: com.digitalasset.canton.topology.admin.v0.ListAllResponse
	(*ListNamespaceDelegationResult_Result)(nil),            // 26: com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult.Result
	(*ListIdentifierDelegationResult_Result)(nil),           // 27: com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult.Result
	(*BaseQuery_TimeRange)(nil),                             // 28: com.digitalasset.canton.topology.admin.v0.BaseQuery.TimeRange
	(*ListPartyToParticipantResult_Result)(nil),             // 29: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult.Result
	(*ListPartyToParticipantRequest_FilterRequestSide)(nil), // 30: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.FilterRequestSide
	(*ListPartyToParticipantRequest_FilterPermission)(nil),  // 31: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.FilterPermission
	(*ListOwnerToKeyMappingRequest_FilterKeyPurpose)(nil),   // 32: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest.FilterKeyPurpose
	(*ListOwnerToKeyMappingResult_Result)(nil),              // 33: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult.Result
	(*ListSignedLegalIdentityClaimResult_Result)(nil),       // 34: com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult.Result
	(*ListVettedPackagesResult_Result)(nil),                 // 35: com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult.Result
	(*ListCheckOnlyPackagesResult_Result)(nil),              // 36: com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult.Result
	(*ListDomainParametersChangesResult_Result)(nil),        // 37: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult.Result
	(*ListParticipantDomainStateResult_Result)(nil),         // 38: com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult.Result
	(*ListMediatorDomainStateResult_Result)(nil),            // 39: com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult.Result
	(v0.TopologyChangeOp)(0),                                // 40: com.digitalasset.canton.protocol.v0.TopologyChangeOp
	(*timestamppb.Timestamp)(nil),                           // 41: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                   // 42: google.protobuf.Empty
	(*wrapperspb.StringValue)(nil),                          // 43: google.protobuf.StringValue
	(*v0.TopologyTransactions)(nil),                         // 44: com.digitalasset.canton.protocol.v0.TopologyTransactions
	(*v0.NamespaceDelegation)(nil),                          // 45: com.digitalasset.canton.protocol.v0.NamespaceDelegation
	(*v0.IdentifierDelegation)(nil),                         // 46: com.digitalasset.canton.protocol.v0.IdentifierDelegation
	(*v0.PartyToParticipant)(nil),                           // 47: com.digitalasset.canton.protocol.v0.PartyToParticipant
	(v0.RequestSide)(0),                                     // 48: com.digitalasset.canton.protocol.v0.RequestSide
	(v0.ParticipantPermission)(0),                           // 49: com.digitalasset.canton.protocol.v0.ParticipantPermission
	(v01.KeyPurpose)(0),                                     // 50: com.digitalasset.canton.crypto.v0.KeyPurpose
	(*v0.OwnerToKeyMapping)(nil),                            // 51: com.digitalasset.canton.protocol.v0.OwnerToKeyMapping
	(*v0.SignedLegalIdentityClaim)(nil),                     // 52: com.digitalasset.canton.protocol.v0.SignedLegalIdentityClaim
	(*v0.VettedPackages)(nil),                               // 53: com.digitalasset.canton.protocol.v0.VettedPackages
	(*v0.CheckOnlyPackages)(nil),                            // 54: com.digitalasset.canton.protocol.v0.CheckOnlyPackages
	(*v0.DynamicDomainParameters)(nil),                      // 55: com.digitalasset.canton.protocol.v0.DynamicDomainParameters
	(*v1.DynamicDomainParameters)(nil),                      // 56: com.digitalasset.canton.protocol.v1.DynamicDomainParameters
	(*v2.DynamicDomainParameters)(nil),                      // 57: com.digitalasset.canton.protocol.v2.DynamicDomainParameters
	(*v0.ParticipantState)(nil),                             // 58: com.digitalasset.canton.protocol.v0.ParticipantState
	(*v0.MediatorDomainState)(nil),                          // 59: com.digitalasset.canton.protocol.v0.MediatorDomainState
}
var file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_depIdxs = []int32{
	4,  // 0: com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	26, // 1: com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult.Result
	4,  // 2: com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	27, // 3: com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult.Result
	40, // 4: com.digitalasset.canton.topology.admin.v0.BaseQuery.operation:type_name -> com.digitalasset.canton.protocol.v0.TopologyChangeOp
	41, // 5: com.digitalasset.canton.topology.admin.v0.BaseQuery.snapshot:type_name -> google.protobuf.Timestamp
	42, // 6: com.digitalasset.canton.topology.admin.v0.BaseQuery.head_state:type_name -> google.protobuf.Empty
	28, // 7: com.digitalasset.canton.topology.admin.v0.BaseQuery.range:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery.TimeRange
	43, // 8: com.digitalasset.canton.topology.admin.v0.BaseQuery.protocol_version:type_name -> google.protobuf.StringValue
	41, // 9: com.digitalasset.canton.topology.admin.v0.BaseResult.sequenced:type_name -> google.protobuf.Timestamp
	41, // 10: com.digitalasset.canton.topology.admin.v0.BaseResult.valid_from:type_name -> google.protobuf.Timestamp
	41, // 11: com.digitalasset.canton.topology.admin.v0.BaseResult.valid_until:type_name -> google.protobuf.Timestamp
	40, // 12: com.digitalasset.canton.topology.admin.v0.BaseResult.operation:type_name -> com.digitalasset.canton.protocol.v0.TopologyChangeOp
	29, // 13: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult.Result
	4,  // 14: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	30, // 15: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.filter_request_side:type_name -> com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.FilterRequestSide
	31, // 16: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.filter_permission:type_name -> com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.FilterPermission
	4,  // 17: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	32, // 18: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest.filter_key_purpose:type_name -> com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest.FilterKeyPurpose
	33, // 19: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult.Result
	4,  // 20: com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	34, // 21: com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult.Result
	4,  // 22: com.digitalasset.canton.topology.admin.v0.ListVettedPackagesRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	35, // 23: com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult.Result
	4,  // 24: com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	36, // 25: com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult.Result
	4,  // 26: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	37, // 27: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult.Result
	4,  // 28: com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	38, // 29: com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult.Result
	4,  // 30: com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	39, // 31: com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult.results:type_name -> com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult.Result
	4,  // 32: com.digitalasset.canton.topology.admin.v0.ListAllRequest.base_query:type_name -> com.digitalasset.canton.topology.admin.v0.BaseQuery
	44, // 33: com.digitalasset.canton.topology.admin.v0.ListAllResponse.result:type_name -> com.digitalasset.canton.protocol.v0.TopologyTransactions
	5,  // 34: com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	45, // 35: com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.NamespaceDelegation
	5,  // 36: com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	46, // 37: com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.IdentifierDelegation
	41, // 38: com.digitalasset.canton.topology.admin.v0.BaseQuery.TimeRange.from:type_name -> google.protobuf.Timestamp
	41, // 39: com.digitalasset.canton.topology.admin.v0.BaseQuery.TimeRange.until:type_name -> google.protobuf.Timestamp
	5,  // 40: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	47, // 41: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.PartyToParticipant
	48, // 42: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.FilterRequestSide.value:type_name -> com.digitalasset.canton.protocol.v0.RequestSide
	49, // 43: com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest.FilterPermission.value:type_name -> com.digitalasset.canton.protocol.v0.ParticipantPermission
	50, // 44: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest.FilterKeyPurpose.value:type_name -> com.digitalasset.canton.crypto.v0.KeyPurpose
	5,  // 45: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	51, // 46: com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.OwnerToKeyMapping
	5,  // 47: com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	52, // 48: com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.SignedLegalIdentityClaim
	5,  // 49: com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	53, // 50: com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.VettedPackages
	5,  // 51: com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	54, // 52: com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.CheckOnlyPackages
	5,  // 53: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	55, // 54: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult.Result.v0:type_name -> com.digitalasset.canton.protocol.v0.DynamicDomainParameters
	56, // 55: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult.Result.v1:type_name -> com.digitalasset.canton.protocol.v1.DynamicDomainParameters
	57, // 56: com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult.Result.v2:type_name -> com.digitalasset.canton.protocol.v2.DynamicDomainParameters
	5,  // 57: com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	58, // 58: com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.ParticipantState
	5,  // 59: com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult.Result.context:type_name -> com.digitalasset.canton.topology.admin.v0.BaseResult
	59, // 60: com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult.Result.item:type_name -> com.digitalasset.canton.protocol.v0.MediatorDomainState
	18, // 61: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListAvailableStores:input_type -> com.digitalasset.canton.topology.admin.v0.ListAvailableStoresRequest
	7,  // 62: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListPartyToParticipant:input_type -> com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantRequest
	8,  // 63: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListOwnerToKeyMapping:input_type -> com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingRequest
	0,  // 64: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListNamespaceDelegation:input_type -> com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationRequest
	2,  // 65: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListIdentifierDelegation:input_type -> com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationRequest
	10, // 66: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListSignedLegalIdentityClaim:input_type -> com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimRequest
	20, // 67: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListParticipantDomainState:input_type -> com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateRequest
	22, // 68: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListMediatorDomainState:input_type -> com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateRequest
	12, // 69: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListVettedPackages:input_type -> com.digitalasset.canton.topology.admin.v0.ListVettedPackagesRequest
	14, // 70: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListCheckOnlyPackages:input_type -> com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesRequest
	16, // 71: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListDomainParametersChanges:input_type -> com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesRequest
	24, // 72: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListAll:input_type -> com.digitalasset.canton.topology.admin.v0.ListAllRequest
	19, // 73: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListAvailableStores:output_type -> com.digitalasset.canton.topology.admin.v0.ListAvailableStoresResult
	6,  // 74: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListPartyToParticipant:output_type -> com.digitalasset.canton.topology.admin.v0.ListPartyToParticipantResult
	9,  // 75: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListOwnerToKeyMapping:output_type -> com.digitalasset.canton.topology.admin.v0.ListOwnerToKeyMappingResult
	1,  // 76: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListNamespaceDelegation:output_type -> com.digitalasset.canton.topology.admin.v0.ListNamespaceDelegationResult
	3,  // 77: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListIdentifierDelegation:output_type -> com.digitalasset.canton.topology.admin.v0.ListIdentifierDelegationResult
	11, // 78: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListSignedLegalIdentityClaim:output_type -> com.digitalasset.canton.topology.admin.v0.ListSignedLegalIdentityClaimResult
	21, // 79: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListParticipantDomainState:output_type -> com.digitalasset.canton.topology.admin.v0.ListParticipantDomainStateResult
	23, // 80: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListMediatorDomainState:output_type -> com.digitalasset.canton.topology.admin.v0.ListMediatorDomainStateResult
	13, // 81: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListVettedPackages:output_type -> com.digitalasset.canton.topology.admin.v0.ListVettedPackagesResult
	15, // 82: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListCheckOnlyPackages:output_type -> com.digitalasset.canton.topology.admin.v0.ListCheckOnlyPackagesResult
	17, // 83: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListDomainParametersChanges:output_type -> com.digitalasset.canton.topology.admin.v0.ListDomainParametersChangesResult
	25, // 84: com.digitalasset.canton.topology.admin.v0.TopologyManagerReadService.ListAll:output_type -> com.digitalasset.canton.topology.admin.v0.ListAllResponse
	73, // [73:85] is the sub-list for method output_type
	61, // [61:73] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() {
	file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_init()
}
func file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_init() {
	if File_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto != nil {
		return
	}
	file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[4].OneofWrappers = []any{
		(*BaseQuery_Snapshot)(nil),
		(*BaseQuery_HeadState)(nil),
		(*BaseQuery_Range)(nil),
	}
	file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes[37].OneofWrappers = []any{
		(*ListDomainParametersChangesResult_Result_V0)(nil),
		(*ListDomainParametersChangesResult_Result_V1)(nil),
		(*ListDomainParametersChangesResult_Result_V2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDesc), len(file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_goTypes,
		DependencyIndexes: file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_depIdxs,
		MessageInfos:      file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_msgTypes,
	}.Build()
	File_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto = out.File
	file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_goTypes = nil
	file_com_digitalasset_canton_topology_admin_v0_topology_manager_read_service_proto_depIdxs = nil
}
