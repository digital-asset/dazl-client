// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: com/daml/ledger/api/v1/commands.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Commands struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LedgerId      string                 `protobuf:"bytes,1,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ApplicationId string                 `protobuf:"bytes,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CommandId     string                 `protobuf:"bytes,4,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Party         string                 `protobuf:"bytes,5,opt,name=party,proto3" json:"party,omitempty"`
	Commands      []*Command             `protobuf:"bytes,8,rep,name=commands,proto3" json:"commands,omitempty"`
	// Types that are valid to be assigned to DeduplicationPeriod:
	//
	//	*Commands_DeduplicationTime
	//	*Commands_DeduplicationDuration
	//	*Commands_DeduplicationOffset
	DeduplicationPeriod          isCommands_DeduplicationPeriod `protobuf_oneof:"deduplication_period"`
	MinLedgerTimeAbs             *timestamppb.Timestamp         `protobuf:"bytes,10,opt,name=min_ledger_time_abs,json=minLedgerTimeAbs,proto3" json:"min_ledger_time_abs,omitempty"`
	MinLedgerTimeRel             *durationpb.Duration           `protobuf:"bytes,11,opt,name=min_ledger_time_rel,json=minLedgerTimeRel,proto3" json:"min_ledger_time_rel,omitempty"`
	ActAs                        []string                       `protobuf:"bytes,12,rep,name=act_as,json=actAs,proto3" json:"act_as,omitempty"`
	ReadAs                       []string                       `protobuf:"bytes,13,rep,name=read_as,json=readAs,proto3" json:"read_as,omitempty"`
	SubmissionId                 string                         `protobuf:"bytes,14,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	DisclosedContracts           []*DisclosedContract           `protobuf:"bytes,17,rep,name=disclosed_contracts,json=disclosedContracts,proto3" json:"disclosed_contracts,omitempty"`
	PackageIdSelectionPreference []string                       `protobuf:"bytes,18,rep,name=package_id_selection_preference,json=packageIdSelectionPreference,proto3" json:"package_id_selection_preference,omitempty"`
	PrefetchContractKeys         []*PrefetchContractKey         `protobuf:"bytes,19,rep,name=prefetch_contract_keys,json=prefetchContractKeys,proto3" json:"prefetch_contract_keys,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Commands) Reset() {
	*x = Commands{}
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commands) ProtoMessage() {}

func (x *Commands) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commands.ProtoReflect.Descriptor instead.
func (*Commands) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP(), []int{0}
}

func (x *Commands) GetLedgerId() string {
	if x != nil {
		return x.LedgerId
	}
	return ""
}

func (x *Commands) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Commands) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *Commands) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *Commands) GetParty() string {
	if x != nil {
		return x.Party
	}
	return ""
}

func (x *Commands) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *Commands) GetDeduplicationPeriod() isCommands_DeduplicationPeriod {
	if x != nil {
		return x.DeduplicationPeriod
	}
	return nil
}

// Deprecated: Marked as deprecated in com/daml/ledger/api/v1/commands.proto.
func (x *Commands) GetDeduplicationTime() *durationpb.Duration {
	if x != nil {
		if x, ok := x.DeduplicationPeriod.(*Commands_DeduplicationTime); ok {
			return x.DeduplicationTime
		}
	}
	return nil
}

func (x *Commands) GetDeduplicationDuration() *durationpb.Duration {
	if x != nil {
		if x, ok := x.DeduplicationPeriod.(*Commands_DeduplicationDuration); ok {
			return x.DeduplicationDuration
		}
	}
	return nil
}

func (x *Commands) GetDeduplicationOffset() string {
	if x != nil {
		if x, ok := x.DeduplicationPeriod.(*Commands_DeduplicationOffset); ok {
			return x.DeduplicationOffset
		}
	}
	return ""
}

func (x *Commands) GetMinLedgerTimeAbs() *timestamppb.Timestamp {
	if x != nil {
		return x.MinLedgerTimeAbs
	}
	return nil
}

func (x *Commands) GetMinLedgerTimeRel() *durationpb.Duration {
	if x != nil {
		return x.MinLedgerTimeRel
	}
	return nil
}

func (x *Commands) GetActAs() []string {
	if x != nil {
		return x.ActAs
	}
	return nil
}

func (x *Commands) GetReadAs() []string {
	if x != nil {
		return x.ReadAs
	}
	return nil
}

func (x *Commands) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *Commands) GetDisclosedContracts() []*DisclosedContract {
	if x != nil {
		return x.DisclosedContracts
	}
	return nil
}

func (x *Commands) GetPackageIdSelectionPreference() []string {
	if x != nil {
		return x.PackageIdSelectionPreference
	}
	return nil
}

func (x *Commands) GetPrefetchContractKeys() []*PrefetchContractKey {
	if x != nil {
		return x.PrefetchContractKeys
	}
	return nil
}

type isCommands_DeduplicationPeriod interface {
	isCommands_DeduplicationPeriod()
}

type Commands_DeduplicationTime struct {
	// Deprecated: Marked as deprecated in com/daml/ledger/api/v1/commands.proto.
	DeduplicationTime *durationpb.Duration `protobuf:"bytes,9,opt,name=deduplication_time,json=deduplicationTime,proto3,oneof"`
}

type Commands_DeduplicationDuration struct {
	DeduplicationDuration *durationpb.Duration `protobuf:"bytes,15,opt,name=deduplication_duration,json=deduplicationDuration,proto3,oneof"`
}

type Commands_DeduplicationOffset struct {
	DeduplicationOffset string `protobuf:"bytes,16,opt,name=deduplication_offset,json=deduplicationOffset,proto3,oneof"`
}

func (*Commands_DeduplicationTime) isCommands_DeduplicationPeriod() {}

func (*Commands_DeduplicationDuration) isCommands_DeduplicationPeriod() {}

func (*Commands_DeduplicationOffset) isCommands_DeduplicationPeriod() {}

type Command struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Command:
	//
	//	*Command_Create
	//	*Command_Exercise
	//	*Command_ExerciseByKey
	//	*Command_CreateAndExercise
	Command       isCommand_Command `protobuf_oneof:"command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP(), []int{1}
}

func (x *Command) GetCommand() isCommand_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Command) GetCreate() *CreateCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_Create); ok {
			return x.Create
		}
	}
	return nil
}

func (x *Command) GetExercise() *ExerciseCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_Exercise); ok {
			return x.Exercise
		}
	}
	return nil
}

func (x *Command) GetExerciseByKey() *ExerciseByKeyCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_ExerciseByKey); ok {
			return x.ExerciseByKey
		}
	}
	return nil
}

func (x *Command) GetCreateAndExercise() *CreateAndExerciseCommand {
	if x != nil {
		if x, ok := x.Command.(*Command_CreateAndExercise); ok {
			return x.CreateAndExercise
		}
	}
	return nil
}

type isCommand_Command interface {
	isCommand_Command()
}

type Command_Create struct {
	Create *CreateCommand `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type Command_Exercise struct {
	Exercise *ExerciseCommand `protobuf:"bytes,2,opt,name=exercise,proto3,oneof"`
}

type Command_ExerciseByKey struct {
	ExerciseByKey *ExerciseByKeyCommand `protobuf:"bytes,4,opt,name=exerciseByKey,proto3,oneof"`
}

type Command_CreateAndExercise struct {
	CreateAndExercise *CreateAndExerciseCommand `protobuf:"bytes,3,opt,name=createAndExercise,proto3,oneof"`
}

func (*Command_Create) isCommand_Command() {}

func (*Command_Exercise) isCommand_Command() {}

func (*Command_ExerciseByKey) isCommand_Command() {}

func (*Command_CreateAndExercise) isCommand_Command() {}

type CreateCommand struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TemplateId      *Identifier            `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	CreateArguments *Record                `protobuf:"bytes,2,opt,name=create_arguments,json=createArguments,proto3" json:"create_arguments,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateCommand) Reset() {
	*x = CreateCommand{}
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommand) ProtoMessage() {}

func (x *CreateCommand) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommand.ProtoReflect.Descriptor instead.
func (*CreateCommand) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommand) GetTemplateId() *Identifier {
	if x != nil {
		return x.TemplateId
	}
	return nil
}

func (x *CreateCommand) GetCreateArguments() *Record {
	if x != nil {
		return x.CreateArguments
	}
	return nil
}

type ExerciseCommand struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TemplateId     *Identifier            `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	ContractId     string                 `protobuf:"bytes,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Choice         string                 `protobuf:"bytes,3,opt,name=choice,proto3" json:"choice,omitempty"`
	ChoiceArgument *Value                 `protobuf:"bytes,4,opt,name=choice_argument,json=choiceArgument,proto3" json:"choice_argument,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExerciseCommand) Reset() {
	*x = ExerciseCommand{}
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseCommand) ProtoMessage() {}

func (x *ExerciseCommand) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseCommand.ProtoReflect.Descriptor instead.
func (*ExerciseCommand) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP(), []int{3}
}

func (x *ExerciseCommand) GetTemplateId() *Identifier {
	if x != nil {
		return x.TemplateId
	}
	return nil
}

func (x *ExerciseCommand) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ExerciseCommand) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

func (x *ExerciseCommand) GetChoiceArgument() *Value {
	if x != nil {
		return x.ChoiceArgument
	}
	return nil
}

type ExerciseByKeyCommand struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TemplateId     *Identifier            `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	ContractKey    *Value                 `protobuf:"bytes,2,opt,name=contract_key,json=contractKey,proto3" json:"contract_key,omitempty"`
	Choice         string                 `protobuf:"bytes,3,opt,name=choice,proto3" json:"choice,omitempty"`
	ChoiceArgument *Value                 `protobuf:"bytes,4,opt,name=choice_argument,json=choiceArgument,proto3" json:"choice_argument,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExerciseByKeyCommand) Reset() {
	*x = ExerciseByKeyCommand{}
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseByKeyCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseByKeyCommand) ProtoMessage() {}

func (x *ExerciseByKeyCommand) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseByKeyCommand.ProtoReflect.Descriptor instead.
func (*ExerciseByKeyCommand) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP(), []int{4}
}

func (x *ExerciseByKeyCommand) GetTemplateId() *Identifier {
	if x != nil {
		return x.TemplateId
	}
	return nil
}

func (x *ExerciseByKeyCommand) GetContractKey() *Value {
	if x != nil {
		return x.ContractKey
	}
	return nil
}

func (x *ExerciseByKeyCommand) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

func (x *ExerciseByKeyCommand) GetChoiceArgument() *Value {
	if x != nil {
		return x.ChoiceArgument
	}
	return nil
}

type CreateAndExerciseCommand struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TemplateId      *Identifier            `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	CreateArguments *Record                `protobuf:"bytes,2,opt,name=create_arguments,json=createArguments,proto3" json:"create_arguments,omitempty"`
	Choice          string                 `protobuf:"bytes,3,opt,name=choice,proto3" json:"choice,omitempty"`
	ChoiceArgument  *Value                 `protobuf:"bytes,4,opt,name=choice_argument,json=choiceArgument,proto3" json:"choice_argument,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateAndExerciseCommand) Reset() {
	*x = CreateAndExerciseCommand{}
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAndExerciseCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAndExerciseCommand) ProtoMessage() {}

func (x *CreateAndExerciseCommand) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAndExerciseCommand.ProtoReflect.Descriptor instead.
func (*CreateAndExerciseCommand) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAndExerciseCommand) GetTemplateId() *Identifier {
	if x != nil {
		return x.TemplateId
	}
	return nil
}

func (x *CreateAndExerciseCommand) GetCreateArguments() *Record {
	if x != nil {
		return x.CreateArguments
	}
	return nil
}

func (x *CreateAndExerciseCommand) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

func (x *CreateAndExerciseCommand) GetChoiceArgument() *Value {
	if x != nil {
		return x.ChoiceArgument
	}
	return nil
}

type DisclosedContract struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TemplateId       *Identifier            `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	ContractId       string                 `protobuf:"bytes,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	CreatedEventBlob []byte                 `protobuf:"bytes,6,opt,name=created_event_blob,json=createdEventBlob,proto3" json:"created_event_blob,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DisclosedContract) Reset() {
	*x = DisclosedContract{}
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisclosedContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisclosedContract) ProtoMessage() {}

func (x *DisclosedContract) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisclosedContract.ProtoReflect.Descriptor instead.
func (*DisclosedContract) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP(), []int{6}
}

func (x *DisclosedContract) GetTemplateId() *Identifier {
	if x != nil {
		return x.TemplateId
	}
	return nil
}

func (x *DisclosedContract) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *DisclosedContract) GetCreatedEventBlob() []byte {
	if x != nil {
		return x.CreatedEventBlob
	}
	return nil
}

type PrefetchContractKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateId    *Identifier            `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	ContractKey   *Value                 `protobuf:"bytes,2,opt,name=contract_key,json=contractKey,proto3" json:"contract_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrefetchContractKey) Reset() {
	*x = PrefetchContractKey{}
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrefetchContractKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefetchContractKey) ProtoMessage() {}

func (x *PrefetchContractKey) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_commands_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefetchContractKey.ProtoReflect.Descriptor instead.
func (*PrefetchContractKey) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP(), []int{7}
}

func (x *PrefetchContractKey) GetTemplateId() *Identifier {
	if x != nil {
		return x.TemplateId
	}
	return nil
}

func (x *PrefetchContractKey) GetContractKey() *Value {
	if x != nil {
		return x.ContractKey
	}
	return nil
}

var File_com_daml_ledger_api_v1_commands_proto protoreflect.FileDescriptor

const file_com_daml_ledger_api_v1_commands_proto_rawDesc = "" +
	"\n" +
	"%com/daml/ledger/api/v1/commands.proto\x12\x16com.daml.ledger.api.v1\x1a\"com/daml/ledger/api/v1/value.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\xce\a\n" +
	"\bCommands\x12\x1b\n" +
	"\tledger_id\x18\x01 \x01(\tR\bledgerId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12%\n" +
	"\x0eapplication_id\x18\x03 \x01(\tR\rapplicationId\x12\x1d\n" +
	"\n" +
	"command_id\x18\x04 \x01(\tR\tcommandId\x12\x14\n" +
	"\x05party\x18\x05 \x01(\tR\x05party\x12;\n" +
	"\bcommands\x18\b \x03(\v2\x1f.com.daml.ledger.api.v1.CommandR\bcommands\x12N\n" +
	"\x12deduplication_time\x18\t \x01(\v2\x19.google.protobuf.DurationB\x02\x18\x01H\x00R\x11deduplicationTime\x12R\n" +
	"\x16deduplication_duration\x18\x0f \x01(\v2\x19.google.protobuf.DurationH\x00R\x15deduplicationDuration\x123\n" +
	"\x14deduplication_offset\x18\x10 \x01(\tH\x00R\x13deduplicationOffset\x12I\n" +
	"\x13min_ledger_time_abs\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x10minLedgerTimeAbs\x12H\n" +
	"\x13min_ledger_time_rel\x18\v \x01(\v2\x19.google.protobuf.DurationR\x10minLedgerTimeRel\x12\x15\n" +
	"\x06act_as\x18\f \x03(\tR\x05actAs\x12\x17\n" +
	"\aread_as\x18\r \x03(\tR\x06readAs\x12#\n" +
	"\rsubmission_id\x18\x0e \x01(\tR\fsubmissionId\x12Z\n" +
	"\x13disclosed_contracts\x18\x11 \x03(\v2).com.daml.ledger.api.v1.DisclosedContractR\x12disclosedContracts\x12E\n" +
	"\x1fpackage_id_selection_preference\x18\x12 \x03(\tR\x1cpackageIdSelectionPreference\x12a\n" +
	"\x16prefetch_contract_keys\x18\x13 \x03(\v2+.com.daml.ledger.api.v1.PrefetchContractKeyR\x14prefetchContractKeysB\x16\n" +
	"\x14deduplication_periodJ\x04\b\x06\x10\aJ\x04\b\a\x10\b\"\xd4\x02\n" +
	"\aCommand\x12?\n" +
	"\x06create\x18\x01 \x01(\v2%.com.daml.ledger.api.v1.CreateCommandH\x00R\x06create\x12E\n" +
	"\bexercise\x18\x02 \x01(\v2'.com.daml.ledger.api.v1.ExerciseCommandH\x00R\bexercise\x12T\n" +
	"\rexerciseByKey\x18\x04 \x01(\v2,.com.daml.ledger.api.v1.ExerciseByKeyCommandH\x00R\rexerciseByKey\x12`\n" +
	"\x11createAndExercise\x18\x03 \x01(\v20.com.daml.ledger.api.v1.CreateAndExerciseCommandH\x00R\x11createAndExerciseB\t\n" +
	"\acommand\"\x9f\x01\n" +
	"\rCreateCommand\x12C\n" +
	"\vtemplate_id\x18\x01 \x01(\v2\".com.daml.ledger.api.v1.IdentifierR\n" +
	"templateId\x12I\n" +
	"\x10create_arguments\x18\x02 \x01(\v2\x1e.com.daml.ledger.api.v1.RecordR\x0fcreateArguments\"\xd7\x01\n" +
	"\x0fExerciseCommand\x12C\n" +
	"\vtemplate_id\x18\x01 \x01(\v2\".com.daml.ledger.api.v1.IdentifierR\n" +
	"templateId\x12\x1f\n" +
	"\vcontract_id\x18\x02 \x01(\tR\n" +
	"contractId\x12\x16\n" +
	"\x06choice\x18\x03 \x01(\tR\x06choice\x12F\n" +
	"\x0fchoice_argument\x18\x04 \x01(\v2\x1d.com.daml.ledger.api.v1.ValueR\x0echoiceArgument\"\xfd\x01\n" +
	"\x14ExerciseByKeyCommand\x12C\n" +
	"\vtemplate_id\x18\x01 \x01(\v2\".com.daml.ledger.api.v1.IdentifierR\n" +
	"templateId\x12@\n" +
	"\fcontract_key\x18\x02 \x01(\v2\x1d.com.daml.ledger.api.v1.ValueR\vcontractKey\x12\x16\n" +
	"\x06choice\x18\x03 \x01(\tR\x06choice\x12F\n" +
	"\x0fchoice_argument\x18\x04 \x01(\v2\x1d.com.daml.ledger.api.v1.ValueR\x0echoiceArgument\"\x8a\x02\n" +
	"\x18CreateAndExerciseCommand\x12C\n" +
	"\vtemplate_id\x18\x01 \x01(\v2\".com.daml.ledger.api.v1.IdentifierR\n" +
	"templateId\x12I\n" +
	"\x10create_arguments\x18\x02 \x01(\v2\x1e.com.daml.ledger.api.v1.RecordR\x0fcreateArguments\x12\x16\n" +
	"\x06choice\x18\x03 \x01(\tR\x06choice\x12F\n" +
	"\x0fchoice_argument\x18\x04 \x01(\v2\x1d.com.daml.ledger.api.v1.ValueR\x0echoiceArgument\"\xb9\x01\n" +
	"\x11DisclosedContract\x12C\n" +
	"\vtemplate_id\x18\x01 \x01(\v2\".com.daml.ledger.api.v1.IdentifierR\n" +
	"templateId\x12\x1f\n" +
	"\vcontract_id\x18\x02 \x01(\tR\n" +
	"contractId\x12,\n" +
	"\x12created_event_blob\x18\x06 \x01(\fR\x10createdEventBlobJ\x04\b\x03\x10\x04J\x04\b\x04\x10\x05J\x04\b\x05\x10\x06\"\x9c\x01\n" +
	"\x13PrefetchContractKey\x12C\n" +
	"\vtemplate_id\x18\x01 \x01(\v2\".com.daml.ledger.api.v1.IdentifierR\n" +
	"templateId\x12@\n" +
	"\fcontract_key\x18\x02 \x01(\v2\x1d.com.daml.ledger.api.v1.ValueR\vcontractKeyB\x8c\x01\n" +
	"\x16com.daml.ledger.api.v1B\x12CommandsOuterClassZEgithub.com/digital-asset/dazl-client/v8/go/api/com/daml/ledger/api/v1\xaa\x02\x16Com.Daml.Ledger.Api.V1b\x06proto3"

var (
	file_com_daml_ledger_api_v1_commands_proto_rawDescOnce sync.Once
	file_com_daml_ledger_api_v1_commands_proto_rawDescData []byte
)

func file_com_daml_ledger_api_v1_commands_proto_rawDescGZIP() []byte {
	file_com_daml_ledger_api_v1_commands_proto_rawDescOnce.Do(func() {
		file_com_daml_ledger_api_v1_commands_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_com_daml_ledger_api_v1_commands_proto_rawDesc), len(file_com_daml_ledger_api_v1_commands_proto_rawDesc)))
	})
	return file_com_daml_ledger_api_v1_commands_proto_rawDescData
}

var file_com_daml_ledger_api_v1_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_com_daml_ledger_api_v1_commands_proto_goTypes = []any{
	(*Commands)(nil),                 // 0: com.daml.ledger.api.v1.Commands
	(*Command)(nil),                  // 1: com.daml.ledger.api.v1.Command
	(*CreateCommand)(nil),            // 2: com.daml.ledger.api.v1.CreateCommand
	(*ExerciseCommand)(nil),          // 3: com.daml.ledger.api.v1.ExerciseCommand
	(*ExerciseByKeyCommand)(nil),     // 4: com.daml.ledger.api.v1.ExerciseByKeyCommand
	(*CreateAndExerciseCommand)(nil), // 5: com.daml.ledger.api.v1.CreateAndExerciseCommand
	(*DisclosedContract)(nil),        // 6: com.daml.ledger.api.v1.DisclosedContract
	(*PrefetchContractKey)(nil),      // 7: com.daml.ledger.api.v1.PrefetchContractKey
	(*durationpb.Duration)(nil),      // 8: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),    // 9: google.protobuf.Timestamp
	(*Identifier)(nil),               // 10: com.daml.ledger.api.v1.Identifier
	(*Record)(nil),                   // 11: com.daml.ledger.api.v1.Record
	(*Value)(nil),                    // 12: com.daml.ledger.api.v1.Value
}
var file_com_daml_ledger_api_v1_commands_proto_depIdxs = []int32{
	1,  // 0: com.daml.ledger.api.v1.Commands.commands:type_name -> com.daml.ledger.api.v1.Command
	8,  // 1: com.daml.ledger.api.v1.Commands.deduplication_time:type_name -> google.protobuf.Duration
	8,  // 2: com.daml.ledger.api.v1.Commands.deduplication_duration:type_name -> google.protobuf.Duration
	9,  // 3: com.daml.ledger.api.v1.Commands.min_ledger_time_abs:type_name -> google.protobuf.Timestamp
	8,  // 4: com.daml.ledger.api.v1.Commands.min_ledger_time_rel:type_name -> google.protobuf.Duration
	6,  // 5: com.daml.ledger.api.v1.Commands.disclosed_contracts:type_name -> com.daml.ledger.api.v1.DisclosedContract
	7,  // 6: com.daml.ledger.api.v1.Commands.prefetch_contract_keys:type_name -> com.daml.ledger.api.v1.PrefetchContractKey
	2,  // 7: com.daml.ledger.api.v1.Command.create:type_name -> com.daml.ledger.api.v1.CreateCommand
	3,  // 8: com.daml.ledger.api.v1.Command.exercise:type_name -> com.daml.ledger.api.v1.ExerciseCommand
	4,  // 9: com.daml.ledger.api.v1.Command.exerciseByKey:type_name -> com.daml.ledger.api.v1.ExerciseByKeyCommand
	5,  // 10: com.daml.ledger.api.v1.Command.createAndExercise:type_name -> com.daml.ledger.api.v1.CreateAndExerciseCommand
	10, // 11: com.daml.ledger.api.v1.CreateCommand.template_id:type_name -> com.daml.ledger.api.v1.Identifier
	11, // 12: com.daml.ledger.api.v1.CreateCommand.create_arguments:type_name -> com.daml.ledger.api.v1.Record
	10, // 13: com.daml.ledger.api.v1.ExerciseCommand.template_id:type_name -> com.daml.ledger.api.v1.Identifier
	12, // 14: com.daml.ledger.api.v1.ExerciseCommand.choice_argument:type_name -> com.daml.ledger.api.v1.Value
	10, // 15: com.daml.ledger.api.v1.ExerciseByKeyCommand.template_id:type_name -> com.daml.ledger.api.v1.Identifier
	12, // 16: com.daml.ledger.api.v1.ExerciseByKeyCommand.contract_key:type_name -> com.daml.ledger.api.v1.Value
	12, // 17: com.daml.ledger.api.v1.ExerciseByKeyCommand.choice_argument:type_name -> com.daml.ledger.api.v1.Value
	10, // 18: com.daml.ledger.api.v1.CreateAndExerciseCommand.template_id:type_name -> com.daml.ledger.api.v1.Identifier
	11, // 19: com.daml.ledger.api.v1.CreateAndExerciseCommand.create_arguments:type_name -> com.daml.ledger.api.v1.Record
	12, // 20: com.daml.ledger.api.v1.CreateAndExerciseCommand.choice_argument:type_name -> com.daml.ledger.api.v1.Value
	10, // 21: com.daml.ledger.api.v1.DisclosedContract.template_id:type_name -> com.daml.ledger.api.v1.Identifier
	10, // 22: com.daml.ledger.api.v1.PrefetchContractKey.template_id:type_name -> com.daml.ledger.api.v1.Identifier
	12, // 23: com.daml.ledger.api.v1.PrefetchContractKey.contract_key:type_name -> com.daml.ledger.api.v1.Value
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_com_daml_ledger_api_v1_commands_proto_init() }
func file_com_daml_ledger_api_v1_commands_proto_init() {
	if File_com_daml_ledger_api_v1_commands_proto != nil {
		return
	}
	file_com_daml_ledger_api_v1_value_proto_init()
	file_com_daml_ledger_api_v1_commands_proto_msgTypes[0].OneofWrappers = []any{
		(*Commands_DeduplicationTime)(nil),
		(*Commands_DeduplicationDuration)(nil),
		(*Commands_DeduplicationOffset)(nil),
	}
	file_com_daml_ledger_api_v1_commands_proto_msgTypes[1].OneofWrappers = []any{
		(*Command_Create)(nil),
		(*Command_Exercise)(nil),
		(*Command_ExerciseByKey)(nil),
		(*Command_CreateAndExercise)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_com_daml_ledger_api_v1_commands_proto_rawDesc), len(file_com_daml_ledger_api_v1_commands_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_daml_ledger_api_v1_commands_proto_goTypes,
		DependencyIndexes: file_com_daml_ledger_api_v1_commands_proto_depIdxs,
		MessageInfos:      file_com_daml_ledger_api_v1_commands_proto_msgTypes,
	}.Build()
	File_com_daml_ledger_api_v1_commands_proto = out.File
	file_com_daml_ledger_api_v1_commands_proto_goTypes = nil
	file_com_daml_ledger_api_v1_commands_proto_depIdxs = nil
}
