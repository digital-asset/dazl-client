// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/daml/ledger/api/v2/reassignment_command.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReassignmentCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId    string `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	ApplicationId string `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CommandId     string `protobuf:"bytes,3,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Submitter     string `protobuf:"bytes,4,opt,name=submitter,proto3" json:"submitter,omitempty"`
	// Types that are assignable to Command:
	//
	//	*ReassignmentCommand_UnassignCommand
	//	*ReassignmentCommand_AssignCommand
	Command      isReassignmentCommand_Command `protobuf_oneof:"command"`
	SubmissionId string                        `protobuf:"bytes,7,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *ReassignmentCommand) Reset() {
	*x = ReassignmentCommand{}
	mi := &file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReassignmentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReassignmentCommand) ProtoMessage() {}

func (x *ReassignmentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReassignmentCommand.ProtoReflect.Descriptor instead.
func (*ReassignmentCommand) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescGZIP(), []int{0}
}

func (x *ReassignmentCommand) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ReassignmentCommand) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ReassignmentCommand) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *ReassignmentCommand) GetSubmitter() string {
	if x != nil {
		return x.Submitter
	}
	return ""
}

func (m *ReassignmentCommand) GetCommand() isReassignmentCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *ReassignmentCommand) GetUnassignCommand() *UnassignCommand {
	if x, ok := x.GetCommand().(*ReassignmentCommand_UnassignCommand); ok {
		return x.UnassignCommand
	}
	return nil
}

func (x *ReassignmentCommand) GetAssignCommand() *AssignCommand {
	if x, ok := x.GetCommand().(*ReassignmentCommand_AssignCommand); ok {
		return x.AssignCommand
	}
	return nil
}

func (x *ReassignmentCommand) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

type isReassignmentCommand_Command interface {
	isReassignmentCommand_Command()
}

type ReassignmentCommand_UnassignCommand struct {
	UnassignCommand *UnassignCommand `protobuf:"bytes,5,opt,name=unassign_command,json=unassignCommand,proto3,oneof"`
}

type ReassignmentCommand_AssignCommand struct {
	AssignCommand *AssignCommand `protobuf:"bytes,6,opt,name=assign_command,json=assignCommand,proto3,oneof"`
}

func (*ReassignmentCommand_UnassignCommand) isReassignmentCommand_Command() {}

func (*ReassignmentCommand_AssignCommand) isReassignmentCommand_Command() {}

type UnassignCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Source     string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target     string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *UnassignCommand) Reset() {
	*x = UnassignCommand{}
	mi := &file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnassignCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignCommand) ProtoMessage() {}

func (x *UnassignCommand) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignCommand.ProtoReflect.Descriptor instead.
func (*UnassignCommand) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescGZIP(), []int{1}
}

func (x *UnassignCommand) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *UnassignCommand) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UnassignCommand) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type AssignCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnassignId string `protobuf:"bytes,1,opt,name=unassign_id,json=unassignId,proto3" json:"unassign_id,omitempty"`
	Source     string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target     string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *AssignCommand) Reset() {
	*x = AssignCommand{}
	mi := &file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignCommand) ProtoMessage() {}

func (x *AssignCommand) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignCommand.ProtoReflect.Descriptor instead.
func (*AssignCommand) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescGZIP(), []int{2}
}

func (x *AssignCommand) GetUnassignId() string {
	if x != nil {
		return x.UnassignId
	}
	return ""
}

func (x *AssignCommand) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AssignCommand) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

var File_com_daml_ledger_api_v2_reassignment_command_proto protoreflect.FileDescriptor

var file_com_daml_ledger_api_v2_reassignment_command_proto_rawDesc = []byte{
	0x0a, 0x31, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x22, 0xf0, 0x02, 0x0a, 0x13,
	0x52, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x10, 0x75, 0x6e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x6e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x75,
	0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x4e,
	0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d,
	0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x62,
	0x0a, 0x0f, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x22, 0x60, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x42, 0x97, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d,
	0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42,
	0x1d, 0x52, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x5a, 0x45,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x32, 0xaa, 0x02, 0x16, 0x43, 0x6f, 0x6d, 0x2e, 0x44, 0x61, 0x6d, 0x6c,
	0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescOnce sync.Once
	file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescData = file_com_daml_ledger_api_v2_reassignment_command_proto_rawDesc
)

func file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescGZIP() []byte {
	file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescOnce.Do(func() {
		file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescData)
	})
	return file_com_daml_ledger_api_v2_reassignment_command_proto_rawDescData
}

var file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_daml_ledger_api_v2_reassignment_command_proto_goTypes = []any{
	(*ReassignmentCommand)(nil), // 0: com.daml.ledger.api.v2.ReassignmentCommand
	(*UnassignCommand)(nil),     // 1: com.daml.ledger.api.v2.UnassignCommand
	(*AssignCommand)(nil),       // 2: com.daml.ledger.api.v2.AssignCommand
}
var file_com_daml_ledger_api_v2_reassignment_command_proto_depIdxs = []int32{
	1, // 0: com.daml.ledger.api.v2.ReassignmentCommand.unassign_command:type_name -> com.daml.ledger.api.v2.UnassignCommand
	2, // 1: com.daml.ledger.api.v2.ReassignmentCommand.assign_command:type_name -> com.daml.ledger.api.v2.AssignCommand
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_com_daml_ledger_api_v2_reassignment_command_proto_init() }
func file_com_daml_ledger_api_v2_reassignment_command_proto_init() {
	if File_com_daml_ledger_api_v2_reassignment_command_proto != nil {
		return
	}
	file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes[0].OneofWrappers = []any{
		(*ReassignmentCommand_UnassignCommand)(nil),
		(*ReassignmentCommand_AssignCommand)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_daml_ledger_api_v2_reassignment_command_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_daml_ledger_api_v2_reassignment_command_proto_goTypes,
		DependencyIndexes: file_com_daml_ledger_api_v2_reassignment_command_proto_depIdxs,
		MessageInfos:      file_com_daml_ledger_api_v2_reassignment_command_proto_msgTypes,
	}.Build()
	File_com_daml_ledger_api_v2_reassignment_command_proto = out.File
	file_com_daml_ledger_api_v2_reassignment_command_proto_rawDesc = nil
	file_com_daml_ledger_api_v2_reassignment_command_proto_goTypes = nil
	file_com_daml_ledger_api_v2_reassignment_command_proto_depIdxs = nil
}
