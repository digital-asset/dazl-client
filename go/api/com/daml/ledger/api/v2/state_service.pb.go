// Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.2
// source: com/daml/ledger/api/v2/state_service.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParticipantPermission int32

const (
	ParticipantPermission_PARTICIPANT_PERMISSION_UNSPECIFIED  ParticipantPermission = 0
	ParticipantPermission_PARTICIPANT_PERMISSION_SUBMISSION   ParticipantPermission = 1
	ParticipantPermission_PARTICIPANT_PERMISSION_CONFIRMATION ParticipantPermission = 2
	ParticipantPermission_PARTICIPANT_PERMISSION_OBSERVATION  ParticipantPermission = 3
)

// Enum value maps for ParticipantPermission.
var (
	ParticipantPermission_name = map[int32]string{
		0: "PARTICIPANT_PERMISSION_UNSPECIFIED",
		1: "PARTICIPANT_PERMISSION_SUBMISSION",
		2: "PARTICIPANT_PERMISSION_CONFIRMATION",
		3: "PARTICIPANT_PERMISSION_OBSERVATION",
	}
	ParticipantPermission_value = map[string]int32{
		"PARTICIPANT_PERMISSION_UNSPECIFIED":  0,
		"PARTICIPANT_PERMISSION_SUBMISSION":   1,
		"PARTICIPANT_PERMISSION_CONFIRMATION": 2,
		"PARTICIPANT_PERMISSION_OBSERVATION":  3,
	}
)

func (x ParticipantPermission) Enum() *ParticipantPermission {
	p := new(ParticipantPermission)
	*p = x
	return p
}

func (x ParticipantPermission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantPermission) Descriptor() protoreflect.EnumDescriptor {
	return file_com_daml_ledger_api_v2_state_service_proto_enumTypes[0].Descriptor()
}

func (ParticipantPermission) Type() protoreflect.EnumType {
	return &file_com_daml_ledger_api_v2_state_service_proto_enumTypes[0]
}

func (x ParticipantPermission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantPermission.Descriptor instead.
func (ParticipantPermission) EnumDescriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{0}
}

type GetActiveContractsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter         *TransactionFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Verbose        bool               `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
	ActiveAtOffset int64              `protobuf:"varint,3,opt,name=active_at_offset,json=activeAtOffset,proto3" json:"active_at_offset,omitempty"`
}

func (x *GetActiveContractsRequest) Reset() {
	*x = GetActiveContractsRequest{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveContractsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveContractsRequest) ProtoMessage() {}

func (x *GetActiveContractsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveContractsRequest.ProtoReflect.Descriptor instead.
func (*GetActiveContractsRequest) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetActiveContractsRequest) GetFilter() *TransactionFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetActiveContractsRequest) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

func (x *GetActiveContractsRequest) GetActiveAtOffset() int64 {
	if x != nil {
		return x.ActiveAtOffset
	}
	return 0
}

type GetActiveContractsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId string `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// Types that are assignable to ContractEntry:
	//
	//	*GetActiveContractsResponse_ActiveContract
	//	*GetActiveContractsResponse_IncompleteUnassigned
	//	*GetActiveContractsResponse_IncompleteAssigned
	ContractEntry isGetActiveContractsResponse_ContractEntry `protobuf_oneof:"contract_entry"`
}

func (x *GetActiveContractsResponse) Reset() {
	*x = GetActiveContractsResponse{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveContractsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveContractsResponse) ProtoMessage() {}

func (x *GetActiveContractsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveContractsResponse.ProtoReflect.Descriptor instead.
func (*GetActiveContractsResponse) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetActiveContractsResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (m *GetActiveContractsResponse) GetContractEntry() isGetActiveContractsResponse_ContractEntry {
	if m != nil {
		return m.ContractEntry
	}
	return nil
}

func (x *GetActiveContractsResponse) GetActiveContract() *ActiveContract {
	if x, ok := x.GetContractEntry().(*GetActiveContractsResponse_ActiveContract); ok {
		return x.ActiveContract
	}
	return nil
}

func (x *GetActiveContractsResponse) GetIncompleteUnassigned() *IncompleteUnassigned {
	if x, ok := x.GetContractEntry().(*GetActiveContractsResponse_IncompleteUnassigned); ok {
		return x.IncompleteUnassigned
	}
	return nil
}

func (x *GetActiveContractsResponse) GetIncompleteAssigned() *IncompleteAssigned {
	if x, ok := x.GetContractEntry().(*GetActiveContractsResponse_IncompleteAssigned); ok {
		return x.IncompleteAssigned
	}
	return nil
}

type isGetActiveContractsResponse_ContractEntry interface {
	isGetActiveContractsResponse_ContractEntry()
}

type GetActiveContractsResponse_ActiveContract struct {
	ActiveContract *ActiveContract `protobuf:"bytes,3,opt,name=active_contract,json=activeContract,proto3,oneof"`
}

type GetActiveContractsResponse_IncompleteUnassigned struct {
	IncompleteUnassigned *IncompleteUnassigned `protobuf:"bytes,4,opt,name=incomplete_unassigned,json=incompleteUnassigned,proto3,oneof"`
}

type GetActiveContractsResponse_IncompleteAssigned struct {
	IncompleteAssigned *IncompleteAssigned `protobuf:"bytes,5,opt,name=incomplete_assigned,json=incompleteAssigned,proto3,oneof"`
}

func (*GetActiveContractsResponse_ActiveContract) isGetActiveContractsResponse_ContractEntry() {}

func (*GetActiveContractsResponse_IncompleteUnassigned) isGetActiveContractsResponse_ContractEntry() {
}

func (*GetActiveContractsResponse_IncompleteAssigned) isGetActiveContractsResponse_ContractEntry() {}

type ActiveContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedEvent        *CreatedEvent `protobuf:"bytes,1,opt,name=created_event,json=createdEvent,proto3" json:"created_event,omitempty"`
	DomainId            string        `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ReassignmentCounter uint64        `protobuf:"varint,3,opt,name=reassignment_counter,json=reassignmentCounter,proto3" json:"reassignment_counter,omitempty"`
}

func (x *ActiveContract) Reset() {
	*x = ActiveContract{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveContract) ProtoMessage() {}

func (x *ActiveContract) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveContract.ProtoReflect.Descriptor instead.
func (*ActiveContract) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{2}
}

func (x *ActiveContract) GetCreatedEvent() *CreatedEvent {
	if x != nil {
		return x.CreatedEvent
	}
	return nil
}

func (x *ActiveContract) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ActiveContract) GetReassignmentCounter() uint64 {
	if x != nil {
		return x.ReassignmentCounter
	}
	return 0
}

type IncompleteUnassigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedEvent    *CreatedEvent    `protobuf:"bytes,1,opt,name=created_event,json=createdEvent,proto3" json:"created_event,omitempty"`
	UnassignedEvent *UnassignedEvent `protobuf:"bytes,2,opt,name=unassigned_event,json=unassignedEvent,proto3" json:"unassigned_event,omitempty"`
}

func (x *IncompleteUnassigned) Reset() {
	*x = IncompleteUnassigned{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncompleteUnassigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncompleteUnassigned) ProtoMessage() {}

func (x *IncompleteUnassigned) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncompleteUnassigned.ProtoReflect.Descriptor instead.
func (*IncompleteUnassigned) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{3}
}

func (x *IncompleteUnassigned) GetCreatedEvent() *CreatedEvent {
	if x != nil {
		return x.CreatedEvent
	}
	return nil
}

func (x *IncompleteUnassigned) GetUnassignedEvent() *UnassignedEvent {
	if x != nil {
		return x.UnassignedEvent
	}
	return nil
}

type IncompleteAssigned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignedEvent *AssignedEvent `protobuf:"bytes,1,opt,name=assigned_event,json=assignedEvent,proto3" json:"assigned_event,omitempty"`
}

func (x *IncompleteAssigned) Reset() {
	*x = IncompleteAssigned{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncompleteAssigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncompleteAssigned) ProtoMessage() {}

func (x *IncompleteAssigned) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncompleteAssigned.ProtoReflect.Descriptor instead.
func (*IncompleteAssigned) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{4}
}

func (x *IncompleteAssigned) GetAssignedEvent() *AssignedEvent {
	if x != nil {
		return x.AssignedEvent
	}
	return nil
}

type GetConnectedDomainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Party         string `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
}

func (x *GetConnectedDomainsRequest) Reset() {
	*x = GetConnectedDomainsRequest{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectedDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectedDomainsRequest) ProtoMessage() {}

func (x *GetConnectedDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectedDomainsRequest.ProtoReflect.Descriptor instead.
func (*GetConnectedDomainsRequest) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetConnectedDomainsRequest) GetParty() string {
	if x != nil {
		return x.Party
	}
	return ""
}

func (x *GetConnectedDomainsRequest) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type GetConnectedDomainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectedDomains []*GetConnectedDomainsResponse_ConnectedDomain `protobuf:"bytes,1,rep,name=connected_domains,json=connectedDomains,proto3" json:"connected_domains,omitempty"`
}

func (x *GetConnectedDomainsResponse) Reset() {
	*x = GetConnectedDomainsResponse{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectedDomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectedDomainsResponse) ProtoMessage() {}

func (x *GetConnectedDomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectedDomainsResponse.ProtoReflect.Descriptor instead.
func (*GetConnectedDomainsResponse) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetConnectedDomainsResponse) GetConnectedDomains() []*GetConnectedDomainsResponse_ConnectedDomain {
	if x != nil {
		return x.ConnectedDomains
	}
	return nil
}

type GetLedgerEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLedgerEndRequest) Reset() {
	*x = GetLedgerEndRequest{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLedgerEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerEndRequest) ProtoMessage() {}

func (x *GetLedgerEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerEndRequest.ProtoReflect.Descriptor instead.
func (*GetLedgerEndRequest) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{7}
}

type GetLedgerEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetLedgerEndResponse) Reset() {
	*x = GetLedgerEndResponse{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLedgerEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerEndResponse) ProtoMessage() {}

func (x *GetLedgerEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerEndResponse.ProtoReflect.Descriptor instead.
func (*GetLedgerEndResponse) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetLedgerEndResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetLatestPrunedOffsetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLatestPrunedOffsetsRequest) Reset() {
	*x = GetLatestPrunedOffsetsRequest{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestPrunedOffsetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestPrunedOffsetsRequest) ProtoMessage() {}

func (x *GetLatestPrunedOffsetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestPrunedOffsetsRequest.ProtoReflect.Descriptor instead.
func (*GetLatestPrunedOffsetsRequest) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{9}
}

type GetLatestPrunedOffsetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticipantPrunedUpToInclusive          int64 `protobuf:"varint,1,opt,name=participant_pruned_up_to_inclusive,json=participantPrunedUpToInclusive,proto3" json:"participant_pruned_up_to_inclusive,omitempty"`
	AllDivulgedContractsPrunedUpToInclusive int64 `protobuf:"varint,2,opt,name=all_divulged_contracts_pruned_up_to_inclusive,json=allDivulgedContractsPrunedUpToInclusive,proto3" json:"all_divulged_contracts_pruned_up_to_inclusive,omitempty"`
}

func (x *GetLatestPrunedOffsetsResponse) Reset() {
	*x = GetLatestPrunedOffsetsResponse{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestPrunedOffsetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestPrunedOffsetsResponse) ProtoMessage() {}

func (x *GetLatestPrunedOffsetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestPrunedOffsetsResponse.ProtoReflect.Descriptor instead.
func (*GetLatestPrunedOffsetsResponse) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetLatestPrunedOffsetsResponse) GetParticipantPrunedUpToInclusive() int64 {
	if x != nil {
		return x.ParticipantPrunedUpToInclusive
	}
	return 0
}

func (x *GetLatestPrunedOffsetsResponse) GetAllDivulgedContractsPrunedUpToInclusive() int64 {
	if x != nil {
		return x.AllDivulgedContractsPrunedUpToInclusive
	}
	return 0
}

type GetConnectedDomainsResponse_ConnectedDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainAlias string                `protobuf:"bytes,1,opt,name=domain_alias,json=domainAlias,proto3" json:"domain_alias,omitempty"`
	DomainId    string                `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Permission  ParticipantPermission `protobuf:"varint,3,opt,name=permission,proto3,enum=com.daml.ledger.api.v2.ParticipantPermission" json:"permission,omitempty"`
}

func (x *GetConnectedDomainsResponse_ConnectedDomain) Reset() {
	*x = GetConnectedDomainsResponse_ConnectedDomain{}
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnectedDomainsResponse_ConnectedDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectedDomainsResponse_ConnectedDomain) ProtoMessage() {}

func (x *GetConnectedDomainsResponse_ConnectedDomain) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v2_state_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectedDomainsResponse_ConnectedDomain.ProtoReflect.Descriptor instead.
func (*GetConnectedDomainsResponse_ConnectedDomain) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetConnectedDomainsResponse_ConnectedDomain) GetDomainAlias() string {
	if x != nil {
		return x.DomainAlias
	}
	return ""
}

func (x *GetConnectedDomainsResponse_ConnectedDomain) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *GetConnectedDomainsResponse_ConnectedDomain) GetPermission() ParticipantPermission {
	if x != nil {
		return x.Permission
	}
	return ParticipantPermission_PARTICIPANT_PERMISSION_UNSPECIFIED
}

var File_com_daml_ledger_api_v2_state_service_proto protoreflect.FileDescriptor

var file_com_daml_ledger_api_v2_state_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x1a, 0x22, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c, 0x2f, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61,
	0x6d, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32,
	0x2f, 0x72, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c, 0x2f, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xe6, 0x02, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x63, 0x0a, 0x15,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x12, 0x5d, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x42, 0x10, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0xab, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x14, 0x72, 0x65, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x72, 0x65, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x22, 0xb5, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x10, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x75, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x62, 0x0a, 0x12, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x4c,
	0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d,
	0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x1a, 0xa0, 0x01, 0x0a, 0x0f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x4d, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x70,
	0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x1e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x50, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x55, 0x70, 0x54, 0x6f, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x12, 0x5e, 0x0a, 0x2d, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x69, 0x76, 0x75, 0x6c,
	0x67, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x5f, 0x70, 0x72,
	0x75, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x27, 0x61, 0x6c, 0x6c, 0x44,
	0x69, 0x76, 0x75, 0x6c, 0x67, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x50, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x55, 0x70, 0x54, 0x6f, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x2a, 0xb7, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a,
	0x22, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x52,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49,
	0x50, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x55, 0x42, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49,
	0x50, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x32, 0x82, 0x04,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61,
	0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x7e, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64,
	0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x12, 0x2b, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75,
	0x6e, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x90, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x16, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x65, 0x72,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f,
	0x64, 0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x38, 0x2f, 0x67,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c, 0x2f, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0xaa, 0x02, 0x16, 0x43,
	0x6f, 0x6d, 0x2e, 0x44, 0x61, 0x6d, 0x6c, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x41,
	0x70, 0x69, 0x2e, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_daml_ledger_api_v2_state_service_proto_rawDescOnce sync.Once
	file_com_daml_ledger_api_v2_state_service_proto_rawDescData = file_com_daml_ledger_api_v2_state_service_proto_rawDesc
)

func file_com_daml_ledger_api_v2_state_service_proto_rawDescGZIP() []byte {
	file_com_daml_ledger_api_v2_state_service_proto_rawDescOnce.Do(func() {
		file_com_daml_ledger_api_v2_state_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_daml_ledger_api_v2_state_service_proto_rawDescData)
	})
	return file_com_daml_ledger_api_v2_state_service_proto_rawDescData
}

var file_com_daml_ledger_api_v2_state_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_daml_ledger_api_v2_state_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_com_daml_ledger_api_v2_state_service_proto_goTypes = []any{
	(ParticipantPermission)(0),                          // 0: com.daml.ledger.api.v2.ParticipantPermission
	(*GetActiveContractsRequest)(nil),                   // 1: com.daml.ledger.api.v2.GetActiveContractsRequest
	(*GetActiveContractsResponse)(nil),                  // 2: com.daml.ledger.api.v2.GetActiveContractsResponse
	(*ActiveContract)(nil),                              // 3: com.daml.ledger.api.v2.ActiveContract
	(*IncompleteUnassigned)(nil),                        // 4: com.daml.ledger.api.v2.IncompleteUnassigned
	(*IncompleteAssigned)(nil),                          // 5: com.daml.ledger.api.v2.IncompleteAssigned
	(*GetConnectedDomainsRequest)(nil),                  // 6: com.daml.ledger.api.v2.GetConnectedDomainsRequest
	(*GetConnectedDomainsResponse)(nil),                 // 7: com.daml.ledger.api.v2.GetConnectedDomainsResponse
	(*GetLedgerEndRequest)(nil),                         // 8: com.daml.ledger.api.v2.GetLedgerEndRequest
	(*GetLedgerEndResponse)(nil),                        // 9: com.daml.ledger.api.v2.GetLedgerEndResponse
	(*GetLatestPrunedOffsetsRequest)(nil),               // 10: com.daml.ledger.api.v2.GetLatestPrunedOffsetsRequest
	(*GetLatestPrunedOffsetsResponse)(nil),              // 11: com.daml.ledger.api.v2.GetLatestPrunedOffsetsResponse
	(*GetConnectedDomainsResponse_ConnectedDomain)(nil), // 12: com.daml.ledger.api.v2.GetConnectedDomainsResponse.ConnectedDomain
	(*TransactionFilter)(nil),                           // 13: com.daml.ledger.api.v2.TransactionFilter
	(*CreatedEvent)(nil),                                // 14: com.daml.ledger.api.v2.CreatedEvent
	(*UnassignedEvent)(nil),                             // 15: com.daml.ledger.api.v2.UnassignedEvent
	(*AssignedEvent)(nil),                               // 16: com.daml.ledger.api.v2.AssignedEvent
}
var file_com_daml_ledger_api_v2_state_service_proto_depIdxs = []int32{
	13, // 0: com.daml.ledger.api.v2.GetActiveContractsRequest.filter:type_name -> com.daml.ledger.api.v2.TransactionFilter
	3,  // 1: com.daml.ledger.api.v2.GetActiveContractsResponse.active_contract:type_name -> com.daml.ledger.api.v2.ActiveContract
	4,  // 2: com.daml.ledger.api.v2.GetActiveContractsResponse.incomplete_unassigned:type_name -> com.daml.ledger.api.v2.IncompleteUnassigned
	5,  // 3: com.daml.ledger.api.v2.GetActiveContractsResponse.incomplete_assigned:type_name -> com.daml.ledger.api.v2.IncompleteAssigned
	14, // 4: com.daml.ledger.api.v2.ActiveContract.created_event:type_name -> com.daml.ledger.api.v2.CreatedEvent
	14, // 5: com.daml.ledger.api.v2.IncompleteUnassigned.created_event:type_name -> com.daml.ledger.api.v2.CreatedEvent
	15, // 6: com.daml.ledger.api.v2.IncompleteUnassigned.unassigned_event:type_name -> com.daml.ledger.api.v2.UnassignedEvent
	16, // 7: com.daml.ledger.api.v2.IncompleteAssigned.assigned_event:type_name -> com.daml.ledger.api.v2.AssignedEvent
	12, // 8: com.daml.ledger.api.v2.GetConnectedDomainsResponse.connected_domains:type_name -> com.daml.ledger.api.v2.GetConnectedDomainsResponse.ConnectedDomain
	0,  // 9: com.daml.ledger.api.v2.GetConnectedDomainsResponse.ConnectedDomain.permission:type_name -> com.daml.ledger.api.v2.ParticipantPermission
	1,  // 10: com.daml.ledger.api.v2.StateService.GetActiveContracts:input_type -> com.daml.ledger.api.v2.GetActiveContractsRequest
	6,  // 11: com.daml.ledger.api.v2.StateService.GetConnectedDomains:input_type -> com.daml.ledger.api.v2.GetConnectedDomainsRequest
	8,  // 12: com.daml.ledger.api.v2.StateService.GetLedgerEnd:input_type -> com.daml.ledger.api.v2.GetLedgerEndRequest
	10, // 13: com.daml.ledger.api.v2.StateService.GetLatestPrunedOffsets:input_type -> com.daml.ledger.api.v2.GetLatestPrunedOffsetsRequest
	2,  // 14: com.daml.ledger.api.v2.StateService.GetActiveContracts:output_type -> com.daml.ledger.api.v2.GetActiveContractsResponse
	7,  // 15: com.daml.ledger.api.v2.StateService.GetConnectedDomains:output_type -> com.daml.ledger.api.v2.GetConnectedDomainsResponse
	9,  // 16: com.daml.ledger.api.v2.StateService.GetLedgerEnd:output_type -> com.daml.ledger.api.v2.GetLedgerEndResponse
	11, // 17: com.daml.ledger.api.v2.StateService.GetLatestPrunedOffsets:output_type -> com.daml.ledger.api.v2.GetLatestPrunedOffsetsResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_com_daml_ledger_api_v2_state_service_proto_init() }
func file_com_daml_ledger_api_v2_state_service_proto_init() {
	if File_com_daml_ledger_api_v2_state_service_proto != nil {
		return
	}
	file_com_daml_ledger_api_v2_event_proto_init()
	file_com_daml_ledger_api_v2_reassignment_proto_init()
	file_com_daml_ledger_api_v2_transaction_filter_proto_init()
	file_com_daml_ledger_api_v2_state_service_proto_msgTypes[1].OneofWrappers = []any{
		(*GetActiveContractsResponse_ActiveContract)(nil),
		(*GetActiveContractsResponse_IncompleteUnassigned)(nil),
		(*GetActiveContractsResponse_IncompleteAssigned)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_daml_ledger_api_v2_state_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_daml_ledger_api_v2_state_service_proto_goTypes,
		DependencyIndexes: file_com_daml_ledger_api_v2_state_service_proto_depIdxs,
		EnumInfos:         file_com_daml_ledger_api_v2_state_service_proto_enumTypes,
		MessageInfos:      file_com_daml_ledger_api_v2_state_service_proto_msgTypes,
	}.Build()
	File_com_daml_ledger_api_v2_state_service_proto = out.File
	file_com_daml_ledger_api_v2_state_service_proto_rawDesc = nil
	file_com_daml_ledger_api_v2_state_service_proto_goTypes = nil
	file_com_daml_ledger_api_v2_state_service_proto_depIdxs = nil
}
