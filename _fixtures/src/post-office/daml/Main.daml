-- Copyright (c) 2017-2025, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Main where


-- Roles -----------------------------------------------------------------------

template PostmanRole
  with
    postman : Party
  where
    signatory postman
    key postman : Party
    maintainer key

    nonconsuming choice InviteParticipant : ()
      with
        party : Party; address: Text
      controller postman
        do
          create InviteAuthorRole with postman; author = party
          create InviteReceiverRole with postman; receiver = party; address
          return ()

template AuthorRole
  with
    postman : Party
    author: Party
  where
    signatory postman
    observer author

    nonconsuming choice CreateLetter : ContractId UnsortedLetter
      with
        address : Text
        content : Text
      controller author
        do
          create UnsortedLetter
            with
              postman
              sender = author
              address
              content

    nonconsuming choice CreateIntLetter : ContractId UnsortedLetter
      with
        address : Text
        content : Int
      controller author
        do
          create UnsortedLetter
            with
              postman
              sender = author
              address
              content = (show content)

    nonconsuming choice CreateDecimalLetter : ContractId UnsortedLetter
      with
        address : Text
        content : Decimal
      controller author
        do
          create UnsortedLetter
            with
              postman
              sender = author
              address
              content = (show content)

    nonconsuming choice CreateTimeLetter : ContractId UnsortedLetter
      with
        address : Text
        content : Time
      controller author
        do
          create UnsortedLetter
            with
              postman
              sender = author
              address
              content = (show content)

    nonconsuming choice CreateListIntLetter : ContractId UnsortedLetter
      with
        address : Text
        content : [Int]
      controller author
        do
          create UnsortedLetter
            with
              postman
              sender = author
              address
              content = (show content)

template ReceiverRole
  with
    postman : Party
    receiver : Party
    address : Text
  where
    signatory postman
    observer receiver

    choice AcceptLetter : ContractId AcknowlegedLetter
      with
        sentLetterCid : ContractId SentLetter
      controller receiver
        do
          sentLetterCid2 <- fetch sentLetterCid
          assert $ sentLetterCid2.receiver == receiver
          assert $ sentLetterCid2.receiverAddress == address

          create AcknowlegedLetter
            with
              sender = sentLetterCid2.sender
              receiver
              receiverAddress = address
              content = sentLetterCid2.content

    choice Deactivate : ()
      controller postman
        do
          assert $ postman == postman

template InviteAuthorRole
  with
    postman : Party
    author : Party
  where
    signatory postman
    observer author

    choice AcceptInviteAuthorRole : ContractId AuthorRole
      controller author
        do
          create AuthorRole with postman; author

template InviteReceiverRole
  with
    postman : Party
    receiver : Party
    address : Text
  where
    signatory postman
    observer receiver

    choice AcceptInviteReceiverRole : ContractId ReceiverRole
      controller receiver
        do
          create ReceiverRole with postman; receiver; address

-- Letters ---------------------------------------------------------------------

template UnsortedLetter
  with
    postman : Party
    sender : Party
    address : Text
    content : Text
  where
    signatory sender
    observer postman

    choice Sort : ContractId SortedLetter
      with
        receiverCid : ContractId ReceiverRole
      controller postman
        do
          receiverCid2 <- fetch receiverCid
          assert $ receiverCid2.address == address
          assert $ receiverCid2.postman == postman

          create SortedLetter
            with
              postman
              sender
              receiver = receiverCid2.receiver
              receiverAddress = receiverCid2.address
              content

template SortedLetter
  with
    postman : Party
    sender : Party
    receiver : Party
    receiverAddress : Text
    content : Text
  where
    signatory sender
    observer postman

    choice Deliver : ContractId SentLetter
      controller postman
        do
          create SentLetter with sender; receiver; receiverAddress; content

template SentLetter
  with
    sender : Party
    receiver : Party
    receiverAddress : Text
    content : Text
  where
    signatory sender
    observer receiver

    choice AcceptSentLetter : ContractId AcknowlegedLetter
      controller receiver
        do
          create AcknowlegedLetter with sender; receiver; receiverAddress; content

template AcknowlegedLetter
  with
    sender : Party
    receiver : Party
    receiverAddress : Text
    content : Text
  where
    signatory receiver

    agreement (show sender) <> " sent" <> content <> " to " <> (show receiver) <> " at " <> (show receiverAddress)


template PrivateNote
  with
    party : Party
    text : Text
  where
    signatory party
