# Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: com/digitalasset/canton/crypto/v30/crypto.proto
# Protobuf Python Version: 6.30.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    0,
    '',
    'com/digitalasset/canton/crypto/v30/crypto.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n/com/digitalasset/canton/crypto/v30/crypto.proto\x12\"com.digitalasset.canton.crypto.v30\"k\n\x04Hmac\x12O\n\talgorithm\x18\x01 \x01(\x0e\x32\x31.com.digitalasset.canton.crypto.v30.HmacAlgorithmR\talgorithm\x12\x12\n\x04hmac\x18\x02 \x01(\x0cR\x04hmac\"p\n\x04Salt\x12G\n\x04hmac\x18\x01 \x01(\x0e\x32\x31.com.digitalasset.canton.crypto.v30.HmacAlgorithmH\x00R\x04hmac\x12\x12\n\x04salt\x18\x02 \x01(\x0cR\x04saltB\x0b\n\talgorithm\"\x8d\x03\n\tSignature\x12K\n\x06\x66ormat\x18\x01 \x01(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.SignatureFormatR\x06\x66ormat\x12\x1c\n\tsignature\x18\x02 \x01(\x0cR\tsignature\x12\x1b\n\tsigned_by\x18\x03 \x01(\tR\x08signedBy\x12n\n\x16signing_algorithm_spec\x18\x04 \x01(\x0e\x32\x38.com.digitalasset.canton.crypto.v30.SigningAlgorithmSpecR\x14signingAlgorithmSpec\x12o\n\x14signature_delegation\x18\x05 \x01(\x0b\x32\x37.com.digitalasset.canton.crypto.v30.SignatureDelegationH\x00R\x13signatureDelegation\x88\x01\x01\x42\x17\n\x15_signature_delegation\"\xfd\x03\n\x13SignatureDelegation\x12\x1f\n\x0bsession_key\x18\x01 \x01(\x0cR\nsessionKey\x12\\\n\x10session_key_spec\x18\x02 \x01(\x0e\x32\x32.com.digitalasset.canton.crypto.v30.SigningKeySpecR\x0esessionKeySpec\x12\x43\n\x1evalidity_period_from_inclusive\x18\x03 \x01(\x03R\x1bvalidityPeriodFromInclusive\x12G\n validity_period_duration_seconds\x18\x04 \x01(\rR\x1dvalidityPeriodDurationSeconds\x12K\n\x06\x66ormat\x18\x05 \x01(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.SignatureFormatR\x06\x66ormat\x12\x1c\n\tsignature\x18\x06 \x01(\x0cR\tsignature\x12n\n\x16signing_algorithm_spec\x18\x07 \x01(\x0e\x32\x38.com.digitalasset.canton.crypto.v30.SigningAlgorithmSpecR\x14signingAlgorithmSpec\"\xe7\x01\n\tPublicKey\x12\x64\n\x12signing_public_key\x18\x01 \x01(\x0b\x32\x34.com.digitalasset.canton.crypto.v30.SigningPublicKeyH\x00R\x10signingPublicKey\x12m\n\x15\x65ncryption_public_key\x18\x02 \x01(\x0b\x32\x37.com.digitalasset.canton.crypto.v30.EncryptionPublicKeyH\x00R\x13\x65ncryptionPublicKeyB\x05\n\x03key\"u\n\x11PublicKeyWithName\x12L\n\npublic_key\x18\x01 \x01(\x0b\x32-.com.digitalasset.canton.crypto.v30.PublicKeyR\tpublicKey\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\"\xee\x01\n\nPrivateKey\x12g\n\x13signing_private_key\x18\x01 \x01(\x0b\x32\x35.com.digitalasset.canton.crypto.v30.SigningPrivateKeyH\x00R\x11signingPrivateKey\x12p\n\x16\x65ncryption_private_key\x18\x02 \x01(\x0b\x32\x38.com.digitalasset.canton.crypto.v30.EncryptionPrivateKeyH\x00R\x14\x65ncryptionPrivateKeyB\x05\n\x03key\"\xf0\x02\n\x10SigningPublicKey\x12K\n\x06\x66ormat\x18\x02 \x01(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.CryptoKeyFormatR\x06\x66ormat\x12\x1d\n\npublic_key\x18\x03 \x01(\x0cR\tpublicKey\x12P\n\x06scheme\x18\x04 \x01(\x0e\x32\x34.com.digitalasset.canton.crypto.v30.SigningKeySchemeB\x02\x18\x01R\x06scheme\x12I\n\x05usage\x18\x05 \x03(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.SigningKeyUsageR\x05usage\x12M\n\x08key_spec\x18\x06 \x01(\x0e\x32\x32.com.digitalasset.canton.crypto.v30.SigningKeySpecR\x07keySpecJ\x04\x08\x01\x10\x02\"\xfd\x02\n\x11SigningPrivateKey\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12K\n\x06\x66ormat\x18\x02 \x01(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.CryptoKeyFormatR\x06\x66ormat\x12\x1f\n\x0bprivate_key\x18\x03 \x01(\x0cR\nprivateKey\x12P\n\x06scheme\x18\x04 \x01(\x0e\x32\x34.com.digitalasset.canton.crypto.v30.SigningKeySchemeB\x02\x18\x01R\x06scheme\x12I\n\x05usage\x18\x05 \x03(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.SigningKeyUsageR\x05usage\x12M\n\x08key_spec\x18\x06 \x01(\x0e\x32\x32.com.digitalasset.canton.crypto.v30.SigningKeySpecR\x07keySpec\"\xbd\x01\n\x0eSigningKeyPair\x12S\n\npublic_key\x18\x01 \x01(\x0b\x32\x34.com.digitalasset.canton.crypto.v30.SigningPublicKeyR\tpublicKey\x12V\n\x0bprivate_key\x18\x02 \x01(\x0b\x32\x35.com.digitalasset.canton.crypto.v30.SigningPrivateKeyR\nprivateKey\"\xb8\x01\n\x14RequiredSigningSpecs\x12X\n\nalgorithms\x18\x01 \x03(\x0e\x32\x38.com.digitalasset.canton.crypto.v30.SigningAlgorithmSpecR\nalgorithms\x12\x46\n\x04keys\x18\x02 \x03(\x0e\x32\x32.com.digitalasset.canton.crypto.v30.SigningKeySpecR\x04keys\"\xae\x02\n\x13\x45ncryptionPublicKey\x12K\n\x06\x66ormat\x18\x02 \x01(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.CryptoKeyFormatR\x06\x66ormat\x12\x1d\n\npublic_key\x18\x03 \x01(\x0cR\tpublicKey\x12S\n\x06scheme\x18\x04 \x01(\x0e\x32\x37.com.digitalasset.canton.crypto.v30.EncryptionKeySchemeB\x02\x18\x01R\x06scheme\x12P\n\x08key_spec\x18\x05 \x01(\x0e\x32\x35.com.digitalasset.canton.crypto.v30.EncryptionKeySpecR\x07keySpecJ\x04\x08\x01\x10\x02\"\xbb\x02\n\x14\x45ncryptionPrivateKey\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12K\n\x06\x66ormat\x18\x02 \x01(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.CryptoKeyFormatR\x06\x66ormat\x12\x1f\n\x0bprivate_key\x18\x03 \x01(\x0cR\nprivateKey\x12S\n\x06scheme\x18\x04 \x01(\x0e\x32\x37.com.digitalasset.canton.crypto.v30.EncryptionKeySchemeB\x02\x18\x01R\x06scheme\x12P\n\x08key_spec\x18\x05 \x01(\x0e\x32\x35.com.digitalasset.canton.crypto.v30.EncryptionKeySpecR\x07keySpec\"\xc6\x01\n\x11\x45ncryptionKeyPair\x12V\n\npublic_key\x18\x01 \x01(\x0b\x32\x37.com.digitalasset.canton.crypto.v30.EncryptionPublicKeyR\tpublicKey\x12Y\n\x0bprivate_key\x18\x02 \x01(\x0b\x32\x38.com.digitalasset.canton.crypto.v30.EncryptionPrivateKeyR\nprivateKey\"\xc1\x01\n\x17RequiredEncryptionSpecs\x12[\n\nalgorithms\x18\x01 \x03(\x0e\x32;.com.digitalasset.canton.crypto.v30.EncryptionAlgorithmSpecR\nalgorithms\x12I\n\x04keys\x18\x02 \x03(\x0e\x32\x35.com.digitalasset.canton.crypto.v30.EncryptionKeySpecR\x04keys\"\xe0\x01\n\rCryptoKeyPair\x12^\n\x10signing_key_pair\x18\x01 \x01(\x0b\x32\x32.com.digitalasset.canton.crypto.v30.SigningKeyPairH\x00R\x0esigningKeyPair\x12g\n\x13\x65ncryption_key_pair\x18\x02 \x01(\x0b\x32\x35.com.digitalasset.canton.crypto.v30.EncryptionKeyPairH\x00R\x11\x65ncryptionKeyPairB\x06\n\x04pair\"\xbd\x01\n\x0cSymmetricKey\x12K\n\x06\x66ormat\x18\x01 \x01(\x0e\x32\x33.com.digitalasset.canton.crypto.v30.CryptoKeyFormatR\x06\x66ormat\x12\x10\n\x03key\x18\x02 \x01(\x0cR\x03key\x12N\n\x06scheme\x18\x03 \x01(\x0e\x32\x36.com.digitalasset.canton.crypto.v30.SymmetricKeySchemeR\x06scheme\"\x8a\x02\n\x16PasswordBasedEncrypted\x12\x1e\n\nciphertext\x18\x01 \x01(\x0cR\nciphertext\x12h\n\x14symmetric_key_scheme\x18\x02 \x01(\x0e\x32\x36.com.digitalasset.canton.crypto.v30.SymmetricKeySchemeR\x12symmetricKeyScheme\x12R\n\x0cpbkdf_scheme\x18\x03 \x01(\x0e\x32/.com.digitalasset.canton.crypto.v30.PbkdfSchemeR\x0bpbkdfScheme\x12\x12\n\x04salt\x18\x04 \x01(\x0cR\x04salt\"\xd0\x01\n\x13\x41symmetricEncrypted\x12\x1e\n\nciphertext\x18\x01 \x01(\x0cR\nciphertext\x12w\n\x19\x65ncryption_algorithm_spec\x18\x02 \x01(\x0e\x32;.com.digitalasset.canton.crypto.v30.EncryptionAlgorithmSpecR\x17\x65ncryptionAlgorithmSpec\x12 \n\x0b\x66ingerprint\x18\x03 \x01(\tR\x0b\x66ingerprint*J\n\rHashAlgorithm\x12\x1e\n\x1aHASH_ALGORITHM_UNSPECIFIED\x10\x00\x12\x19\n\x15HASH_ALGORITHM_SHA256\x10\x01*O\n\rHmacAlgorithm\x12\x1e\n\x1aHMAC_ALGORITHM_UNSPECIFIED\x10\x00\x12\x1e\n\x1aHMAC_ALGORITHM_HMAC_SHA256\x10\x01*\xa4\x01\n\x0fSignatureFormat\x12 \n\x1cSIGNATURE_FORMAT_UNSPECIFIED\x10\x00\x12\x18\n\x14SIGNATURE_FORMAT_RAW\x10\x01\x12\x18\n\x14SIGNATURE_FORMAT_DER\x10\x02\x12\x1b\n\x17SIGNATURE_FORMAT_CONCAT\x10\x03\x12\x1e\n\x19SIGNATURE_FORMAT_SYMBOLIC\x10\x90N*{\n\x11\x45ncryptionKeySpec\x12#\n\x1f\x45NCRYPTION_KEY_SPEC_UNSPECIFIED\x10\x00\x12\x1f\n\x1b\x45NCRYPTION_KEY_SPEC_EC_P256\x10\x01\x12 \n\x1c\x45NCRYPTION_KEY_SPEC_RSA_2048\x10\x02*\xb5\x01\n\x0eSigningKeySpec\x12 \n\x1cSIGNING_KEY_SPEC_UNSPECIFIED\x10\x00\x12\"\n\x1eSIGNING_KEY_SPEC_EC_CURVE25519\x10\x01\x12\x1c\n\x18SIGNING_KEY_SPEC_EC_P256\x10\x02\x12\x1c\n\x18SIGNING_KEY_SPEC_EC_P384\x10\x03\x12!\n\x1dSIGNING_KEY_SPEC_EC_SECP256K1\x10\x04*^\n\nKeyPurpose\x12\x1b\n\x17KEY_PURPOSE_UNSPECIFIED\x10\x00\x12\x17\n\x13KEY_PURPOSE_SIGNING\x10\x01\x12\x1a\n\x16KEY_PURPOSE_ENCRYPTION\x10\x02*\xfe\x01\n\x0fSigningKeyUsage\x12!\n\x1dSIGNING_KEY_USAGE_UNSPECIFIED\x10\x00\x12\x1f\n\x1bSIGNING_KEY_USAGE_NAMESPACE\x10\x01\x12-\n%SIGNING_KEY_USAGE_IDENTITY_DELEGATION\x10\x02\x1a\x02\x08\x01\x12.\n*SIGNING_KEY_USAGE_SEQUENCER_AUTHENTICATION\x10\x03\x12\x1e\n\x1aSIGNING_KEY_USAGE_PROTOCOL\x10\x04\x12(\n$SIGNING_KEY_USAGE_PROOF_OF_OWNERSHIP\x10\x05*\xb8\x01\n\x14SigningAlgorithmSpec\x12&\n\"SIGNING_ALGORITHM_SPEC_UNSPECIFIED\x10\x00\x12\"\n\x1eSIGNING_ALGORITHM_SPEC_ED25519\x10\x01\x12)\n%SIGNING_ALGORITHM_SPEC_EC_DSA_SHA_256\x10\x02\x12)\n%SIGNING_ALGORITHM_SPEC_EC_DSA_SHA_384\x10\x03*\x9e\x01\n\x10SigningKeyScheme\x12\"\n\x1eSIGNING_KEY_SCHEME_UNSPECIFIED\x10\x00\x12\x1e\n\x1aSIGNING_KEY_SCHEME_ED25519\x10\x01\x12\"\n\x1eSIGNING_KEY_SCHEME_EC_DSA_P256\x10\x02\x12\"\n\x1eSIGNING_KEY_SCHEME_EC_DSA_P384\x10\x03*\xf3\x01\n\x17\x45ncryptionAlgorithmSpec\x12)\n%ENCRYPTION_ALGORITHM_SPEC_UNSPECIFIED\x10\x00\x12>\n:ENCRYPTION_ALGORITHM_SPEC_ECIES_HKDF_HMAC_SHA256_AES128GCM\x10\x01\x12>\n:ENCRYPTION_ALGORITHM_SPEC_ECIES_HKDF_HMAC_SHA256_AES128CBC\x10\x02\x12-\n)ENCRYPTION_ALGORITHM_SPEC_RSA_OAEP_SHA256\x10\x03*\xe8\x01\n\x13\x45ncryptionKeyScheme\x12%\n!ENCRYPTION_KEY_SCHEME_UNSPECIFIED\x10\x00\x12?\n;ENCRYPTION_KEY_SCHEME_ECIES_P256_HKDF_HMAC_SHA256_AES128GCM\x10\x01\x12:\n6ENCRYPTION_KEY_SCHEME_ECIES_P256_HMAC_SHA256A_ES128CBC\x10\x02\x12-\n)ENCRYPTION_KEY_SCHEME_RSA2048_OAEP_SHA256\x10\x03*^\n\x12SymmetricKeyScheme\x12$\n SYMMETRIC_KEY_SCHEME_UNSPECIFIED\x10\x00\x12\"\n\x1eSYMMETRIC_KEY_SCHEME_AES128GCM\x10\x01*\xfb\x01\n\x0f\x43ryptoKeyFormat\x12!\n\x1d\x43RYPTO_KEY_FORMAT_UNSPECIFIED\x10\x00\x12\x19\n\x15\x43RYPTO_KEY_FORMAT_DER\x10\x02\x12\x19\n\x15\x43RYPTO_KEY_FORMAT_RAW\x10\x03\x12\x36\n2CRYPTO_KEY_FORMAT_DER_X509_SUBJECT_PUBLIC_KEY_INFO\x10\x04\x12\x30\n,CRYPTO_KEY_FORMAT_DER_PKCS8_PRIVATE_KEY_INFO\x10\x05\x12\x1f\n\x1a\x43RYPTO_KEY_FORMAT_SYMBOLIC\x10\x90N\"\x04\x08\x01\x10\x01*L\n\x0bPbkdfScheme\x12\x1c\n\x18PBKDF_SCHEME_UNSPECIFIED\x10\x00\x12\x1f\n\x1bPBKDF_SCHEME_ARGON2ID_MODE1\x10\x01\x42SZQgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v30b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'com.digitalasset.canton.crypto.v30.crypto_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZQgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/crypto/v30'
  _globals['_SIGNINGKEYUSAGE'].values_by_name["SIGNING_KEY_USAGE_IDENTITY_DELEGATION"]._loaded_options = None
  _globals['_SIGNINGKEYUSAGE'].values_by_name["SIGNING_KEY_USAGE_IDENTITY_DELEGATION"]._serialized_options = b'\010\001'
  _globals['_SIGNINGPUBLICKEY'].fields_by_name['scheme']._loaded_options = None
  _globals['_SIGNINGPUBLICKEY'].fields_by_name['scheme']._serialized_options = b'\030\001'
  _globals['_SIGNINGPRIVATEKEY'].fields_by_name['scheme']._loaded_options = None
  _globals['_SIGNINGPRIVATEKEY'].fields_by_name['scheme']._serialized_options = b'\030\001'
  _globals['_ENCRYPTIONPUBLICKEY'].fields_by_name['scheme']._loaded_options = None
  _globals['_ENCRYPTIONPUBLICKEY'].fields_by_name['scheme']._serialized_options = b'\030\001'
  _globals['_ENCRYPTIONPRIVATEKEY'].fields_by_name['scheme']._loaded_options = None
  _globals['_ENCRYPTIONPRIVATEKEY'].fields_by_name['scheme']._serialized_options = b'\030\001'
  _globals['_HASHALGORITHM']._serialized_start=4869
  _globals['_HASHALGORITHM']._serialized_end=4943
  _globals['_HMACALGORITHM']._serialized_start=4945
  _globals['_HMACALGORITHM']._serialized_end=5024
  _globals['_SIGNATUREFORMAT']._serialized_start=5027
  _globals['_SIGNATUREFORMAT']._serialized_end=5191
  _globals['_ENCRYPTIONKEYSPEC']._serialized_start=5193
  _globals['_ENCRYPTIONKEYSPEC']._serialized_end=5316
  _globals['_SIGNINGKEYSPEC']._serialized_start=5319
  _globals['_SIGNINGKEYSPEC']._serialized_end=5500
  _globals['_KEYPURPOSE']._serialized_start=5502
  _globals['_KEYPURPOSE']._serialized_end=5596
  _globals['_SIGNINGKEYUSAGE']._serialized_start=5599
  _globals['_SIGNINGKEYUSAGE']._serialized_end=5853
  _globals['_SIGNINGALGORITHMSPEC']._serialized_start=5856
  _globals['_SIGNINGALGORITHMSPEC']._serialized_end=6040
  _globals['_SIGNINGKEYSCHEME']._serialized_start=6043
  _globals['_SIGNINGKEYSCHEME']._serialized_end=6201
  _globals['_ENCRYPTIONALGORITHMSPEC']._serialized_start=6204
  _globals['_ENCRYPTIONALGORITHMSPEC']._serialized_end=6447
  _globals['_ENCRYPTIONKEYSCHEME']._serialized_start=6450
  _globals['_ENCRYPTIONKEYSCHEME']._serialized_end=6682
  _globals['_SYMMETRICKEYSCHEME']._serialized_start=6684
  _globals['_SYMMETRICKEYSCHEME']._serialized_end=6778
  _globals['_CRYPTOKEYFORMAT']._serialized_start=6781
  _globals['_CRYPTOKEYFORMAT']._serialized_end=7032
  _globals['_PBKDFSCHEME']._serialized_start=7034
  _globals['_PBKDFSCHEME']._serialized_end=7110
  _globals['_HMAC']._serialized_start=87
  _globals['_HMAC']._serialized_end=194
  _globals['_SALT']._serialized_start=196
  _globals['_SALT']._serialized_end=308
  _globals['_SIGNATURE']._serialized_start=311
  _globals['_SIGNATURE']._serialized_end=708
  _globals['_SIGNATUREDELEGATION']._serialized_start=711
  _globals['_SIGNATUREDELEGATION']._serialized_end=1220
  _globals['_PUBLICKEY']._serialized_start=1223
  _globals['_PUBLICKEY']._serialized_end=1454
  _globals['_PUBLICKEYWITHNAME']._serialized_start=1456
  _globals['_PUBLICKEYWITHNAME']._serialized_end=1573
  _globals['_PRIVATEKEY']._serialized_start=1576
  _globals['_PRIVATEKEY']._serialized_end=1814
  _globals['_SIGNINGPUBLICKEY']._serialized_start=1817
  _globals['_SIGNINGPUBLICKEY']._serialized_end=2185
  _globals['_SIGNINGPRIVATEKEY']._serialized_start=2188
  _globals['_SIGNINGPRIVATEKEY']._serialized_end=2569
  _globals['_SIGNINGKEYPAIR']._serialized_start=2572
  _globals['_SIGNINGKEYPAIR']._serialized_end=2761
  _globals['_REQUIREDSIGNINGSPECS']._serialized_start=2764
  _globals['_REQUIREDSIGNINGSPECS']._serialized_end=2948
  _globals['_ENCRYPTIONPUBLICKEY']._serialized_start=2951
  _globals['_ENCRYPTIONPUBLICKEY']._serialized_end=3253
  _globals['_ENCRYPTIONPRIVATEKEY']._serialized_start=3256
  _globals['_ENCRYPTIONPRIVATEKEY']._serialized_end=3571
  _globals['_ENCRYPTIONKEYPAIR']._serialized_start=3574
  _globals['_ENCRYPTIONKEYPAIR']._serialized_end=3772
  _globals['_REQUIREDENCRYPTIONSPECS']._serialized_start=3775
  _globals['_REQUIREDENCRYPTIONSPECS']._serialized_end=3968
  _globals['_CRYPTOKEYPAIR']._serialized_start=3971
  _globals['_CRYPTOKEYPAIR']._serialized_end=4195
  _globals['_SYMMETRICKEY']._serialized_start=4198
  _globals['_SYMMETRICKEY']._serialized_end=4387
  _globals['_PASSWORDBASEDENCRYPTED']._serialized_start=4390
  _globals['_PASSWORDBASEDENCRYPTED']._serialized_end=4656
  _globals['_ASYMMETRICENCRYPTED']._serialized_start=4659
  _globals['_ASYMMETRICENCRYPTED']._serialized_end=4867
# @@protoc_insertion_point(module_scope)
