# Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: com/digitalasset/canton/protocol/v1/sequencing.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'com/digitalasset/canton/protocol/v1/sequencing.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ...crypto.v0 import crypto_pb2 as com_dot_digitalasset_dot_canton_dot_crypto_dot_v0_dot_crypto__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n4com/digitalasset/canton/protocol/v1/sequencing.proto\x12#com.digitalasset.canton.protocol.v1\x1a.com/digitalasset/canton/crypto/v0/crypto.proto\x1a\x1egoogle/protobuf/duration.proto\"\xc5\x05\n\x16StaticDomainParameters\x12\x30\n\x14unique_contract_keys\x18\x01 \x01(\x08R\x12uniqueContractKeys\x12t\n\x1crequired_signing_key_schemes\x18\x02 \x03(\x0e\x32\x33.com.digitalasset.canton.crypto.v0.SigningKeySchemeR\x19requiredSigningKeySchemes\x12}\n\x1frequired_encryption_key_schemes\x18\x03 \x03(\x0e\x32\x36.com.digitalasset.canton.crypto.v0.EncryptionKeySchemeR\x1crequiredEncryptionKeySchemes\x12z\n\x1erequired_symmetric_key_schemes\x18\x04 \x03(\x0e\x32\x35.com.digitalasset.canton.crypto.v0.SymmetricKeySchemeR\x1brequiredSymmetricKeySchemes\x12j\n\x18required_hash_algorithms\x18\x05 \x03(\x0e\x32\x30.com.digitalasset.canton.crypto.v0.HashAlgorithmR\x16requiredHashAlgorithms\x12q\n\x1brequired_crypto_key_formats\x18\x06 \x03(\x0e\x32\x32.com.digitalasset.canton.crypto.v0.CryptoKeyFormatR\x18requiredCryptoKeyFormats\x12)\n\x10protocol_version\x18\x07 \x01(\x05R\x0fprotocolVersion\"\xf6\x05\n\x17\x44ynamicDomainParameters\x12[\n\x1cparticipant_response_timeout\x18\x01 \x01(\x0b\x32\x19.google.protobuf.DurationR\x1aparticipantResponseTimeout\x12U\n\x19mediator_reaction_timeout\x18\x02 \x01(\x0b\x32\x19.google.protobuf.DurationR\x17mediatorReactionTimeout\x12[\n\x1ctransfer_exclusivity_timeout\x18\x03 \x01(\x0b\x32\x19.google.protobuf.DurationR\x1atransferExclusivityTimeout\x12M\n\x15topology_change_delay\x18\x04 \x01(\x0b\x32\x19.google.protobuf.DurationR\x13topologyChangeDelay\x12\x63\n!ledger_time_record_time_tolerance\x18\x05 \x01(\x0b\x32\x19.google.protobuf.DurationR\x1dledgerTimeRecordTimeTolerance\x12R\n\x17reconciliation_interval\x18\x06 \x01(\x0b\x32\x19.google.protobuf.DurationR\x16reconciliationInterval\x12_\n\x1emediator_deduplication_timeout\x18\x07 \x01(\x0b\x32\x19.google.protobuf.DurationR\x1cmediatorDeduplicationTimeout\x12\x37\n\x18max_rate_per_participant\x18\x08 \x01(\rR\x15maxRatePerParticipant\x12(\n\x10max_request_size\x18\t \x01(\rR\x0emaxRequestSizeBTZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'com.digitalasset.canton.protocol.v1.sequencing_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZRgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/protocol/v1'
  _globals['_STATICDOMAINPARAMETERS']._serialized_start=174
  _globals['_STATICDOMAINPARAMETERS']._serialized_end=883
  _globals['_DYNAMICDOMAINPARAMETERS']._serialized_start=886
  _globals['_DYNAMICDOMAINPARAMETERS']._serialized_end=1644
# @@protoc_insertion_point(module_scope)
