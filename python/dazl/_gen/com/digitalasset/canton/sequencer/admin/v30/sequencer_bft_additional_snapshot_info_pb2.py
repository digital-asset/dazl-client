# Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: com/digitalasset/canton/sequencer/admin/v30/sequencer_bft_additional_snapshot_info.proto
# Protobuf Python Version: 6.30.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    0,
    '',
    'com/digitalasset/canton/sequencer/admin/v30/sequencer_bft_additional_snapshot_info.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nXcom/digitalasset/canton/sequencer/admin/v30/sequencer_bft_additional_snapshot_info.proto\x12+com.digitalasset.canton.sequencer.admin.v30\"\xb5\x08\n\"BftSequencerSnapshotAdditionalInfo\x12\x99\x01\n\x14sequencers_active_at\x18\x01 \x03(\x0b\x32g.com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencersActiveAtEntryR\x12sequencersActiveAt\x1a\xa8\x01\n\x17SequencersActiveAtEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12w\n\x05value\x18\x02 \x01(\x0b\x32\x61.com.digitalasset.canton.sequencer.admin.v30.BftSequencerSnapshotAdditionalInfo.SequencerActiveAtR\x05value:\x02\x38\x01\x1a\xc7\x05\n\x11SequencerActiveAt\x12\x1c\n\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x31\n\x12start_epoch_number\x18\x02 \x01(\x03H\x00R\x10startEpochNumber\x88\x01\x01\x12L\n!first_block_number_in_start_epoch\x18\x03 \x01(\x03H\x01R\x1c\x66irstBlockNumberInStartEpoch\x88\x01\x01\x12S\n$start_epoch_topology_query_timestamp\x18\x04 \x01(\x03H\x02R startEpochTopologyQueryTimestamp\x88\x01\x01\x12\\\n)start_epoch_could_alter_ordering_topology\x18\x05 \x01(\x08H\x03R$startEpochCouldAlterOrderingTopology\x88\x01\x01\x12/\n\x11previous_bft_time\x18\x06 \x01(\x03H\x04R\x0fpreviousBftTime\x88\x01\x01\x12Y\n\'previous_epoch_topology_query_timestamp\x18\x07 \x01(\x03H\x05R#previousEpochTopologyQueryTimestamp\x88\x01\x01\x42\x15\n\x13_start_epoch_numberB$\n\"_first_block_number_in_start_epochB\'\n%_start_epoch_topology_query_timestampB,\n*_start_epoch_could_alter_ordering_topologyB\x14\n\x12_previous_bft_timeB*\n(_previous_epoch_topology_query_timestampB\\ZZgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/sequencer/admin/v30b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'com.digitalasset.canton.sequencer.admin.v30.sequencer_bft_additional_snapshot_info_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZZgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/sequencer/admin/v30'
  _globals['_BFTSEQUENCERSNAPSHOTADDITIONALINFO_SEQUENCERSACTIVEATENTRY']._loaded_options = None
  _globals['_BFTSEQUENCERSNAPSHOTADDITIONALINFO_SEQUENCERSACTIVEATENTRY']._serialized_options = b'8\001'
  _globals['_BFTSEQUENCERSNAPSHOTADDITIONALINFO']._serialized_start=138
  _globals['_BFTSEQUENCERSNAPSHOTADDITIONALINFO']._serialized_end=1215
  _globals['_BFTSEQUENCERSNAPSHOTADDITIONALINFO_SEQUENCERSACTIVEATENTRY']._serialized_start=333
  _globals['_BFTSEQUENCERSNAPSHOTADDITIONALINFO_SEQUENCERSACTIVEATENTRY']._serialized_end=501
  _globals['_BFTSEQUENCERSNAPSHOTADDITIONALINFO_SEQUENCERACTIVEAT']._serialized_start=504
  _globals['_BFTSEQUENCERSNAPSHOTADDITIONALINFO_SEQUENCERACTIVEAT']._serialized_end=1215
# @@protoc_insertion_point(module_scope)
