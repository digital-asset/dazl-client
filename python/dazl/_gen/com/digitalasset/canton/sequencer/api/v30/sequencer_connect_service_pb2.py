# Copyright (c) 2017-2025 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
# fmt: off
# isort: skip_file
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: com/digitalasset/canton/sequencer/api/v30/sequencer_connect_service.proto
# Protobuf Python Version: 6.30.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    0,
    '',
    'com/digitalasset/canton/sequencer/api/v30/sequencer_connect_service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ....protocol.v30 import sequencing_pb2 as com_dot_digitalasset_dot_canton_dot_protocol_dot_v30_dot_sequencing__pb2
from ....protocol.v30 import topology_pb2 as com_dot_digitalasset_dot_canton_dot_protocol_dot_v30_dot_topology__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nIcom/digitalasset/canton/sequencer/api/v30/sequencer_connect_service.proto\x12)com.digitalasset.canton.sequencer.api.v30\x1a\x35\x63om/digitalasset/canton/protocol/v30/sequencing.proto\x1a\x33\x63om/digitalasset/canton/protocol/v30/topology.proto\"\xbc\x0b\n\x10SequencerConnect\x1a\xa8\x01\n\x10HandshakeRequest\x12\x38\n\x18\x63lient_protocol_versions\x18\x01 \x03(\x05R\x16\x63lientProtocolVersions\x12=\n\x18minimum_protocol_version\x18\x02 \x01(\x05H\x00R\x16minimumProtocolVersion\x88\x01\x01\x42\x1b\n\x19_minimum_protocol_version\x1a\xe8\x02\n\x11HandshakeResponse\x12\x36\n\x17server_protocol_version\x18\x01 \x01(\x05R\x15serverProtocolVersion\x12q\n\x07success\x18\x02 \x01(\x0b\x32U.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.HandshakeResponse.SuccessH\x00R\x07success\x12q\n\x07\x66\x61ilure\x18\x03 \x01(\x0b\x32U.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.HandshakeResponse.FailureH\x00R\x07\x66\x61ilure\x1a\t\n\x07Success\x1a!\n\x07\x46\x61ilure\x12\x16\n\x06reason\x18\x01 \x01(\tR\x06reasonB\x07\n\x05value\x1a\x1a\n\x18GetSynchronizerIdRequest\x1ai\n\x19GetSynchronizerIdResponse\x12\'\n\x0fsynchronizer_id\x18\x01 \x01(\tR\x0esynchronizerId\x12#\n\rsequencer_uid\x18\x02 \x01(\tR\x0csequencerUid\x1a\"\n GetSynchronizerParametersRequest\x1a\x9c\x01\n!GetSynchronizerParametersResponse\x12i\n\rparameters_v1\x18\x02 \x01(\x0b\x32\x42.com.digitalasset.canton.protocol.v30.StaticSynchronizerParametersH\x00R\x0cparametersV1B\x0c\n\nparameters\x1a\x15\n\x13VerifyActiveRequest\x1a\xd6\x02\n\x14VerifyActiveResponse\x12t\n\x07success\x18\x01 \x01(\x0b\x32X.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.VerifyActiveResponse.SuccessH\x00R\x07success\x12t\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32X.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.VerifyActiveResponse.FailureH\x00R\x07\x66\x61ilure\x1a&\n\x07Success\x12\x1b\n\tis_active\x18\x01 \x01(\x08R\x08isActive\x1a!\n\x07\x46\x61ilure\x12\x16\n\x06reason\x18\x01 \x01(\tR\x06reasonB\x07\n\x05value\x1a\xa5\x01\n-RegisterOnboardingTopologyTransactionsRequest\x12t\n\x15topology_transactions\x18\x01 \x03(\x0b\x32?.com.digitalasset.canton.protocol.v30.SignedTopologyTransactionR\x14topologyTransactions\x1a\x30\n.RegisterOnboardingTopologyTransactionsResponse2\x98\x08\n\x17SequencerConnectService\x12\xa8\x01\n\tHandshake\x12L.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.HandshakeRequest\x1aM.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.HandshakeResponse\x12\xc0\x01\n\x11GetSynchronizerId\x12T.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.GetSynchronizerIdRequest\x1aU.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.GetSynchronizerIdResponse\x12\xd8\x01\n\x19GetSynchronizerParameters\x12\\.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.GetSynchronizerParametersRequest\x1a].com.digitalasset.canton.sequencer.api.v30.SequencerConnect.GetSynchronizerParametersResponse\x12\xb1\x01\n\x0cVerifyActive\x12O.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.VerifyActiveRequest\x1aP.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.VerifyActiveResponse\x12\xff\x01\n&RegisterOnboardingTopologyTransactions\x12i.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.RegisterOnboardingTopologyTransactionsRequest\x1aj.com.digitalasset.canton.sequencer.api.v30.SequencerConnect.RegisterOnboardingTopologyTransactionsResponseBZZXgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/sequencer/api/v30b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'com.digitalasset.canton.sequencer.api.v30.sequencer_connect_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZXgithub.com/digital-asset/dazl-client/v8/go/api/com/digitalasset/canton/sequencer/api/v30'
  _globals['_SEQUENCERCONNECT']._serialized_start=229
  _globals['_SEQUENCERCONNECT']._serialized_end=1697
  _globals['_SEQUENCERCONNECT_HANDSHAKEREQUEST']._serialized_start=250
  _globals['_SEQUENCERCONNECT_HANDSHAKEREQUEST']._serialized_end=418
  _globals['_SEQUENCERCONNECT_HANDSHAKERESPONSE']._serialized_start=421
  _globals['_SEQUENCERCONNECT_HANDSHAKERESPONSE']._serialized_end=781
  _globals['_SEQUENCERCONNECT_HANDSHAKERESPONSE_SUCCESS']._serialized_start=728
  _globals['_SEQUENCERCONNECT_HANDSHAKERESPONSE_SUCCESS']._serialized_end=737
  _globals['_SEQUENCERCONNECT_HANDSHAKERESPONSE_FAILURE']._serialized_start=739
  _globals['_SEQUENCERCONNECT_HANDSHAKERESPONSE_FAILURE']._serialized_end=772
  _globals['_SEQUENCERCONNECT_GETSYNCHRONIZERIDREQUEST']._serialized_start=783
  _globals['_SEQUENCERCONNECT_GETSYNCHRONIZERIDREQUEST']._serialized_end=809
  _globals['_SEQUENCERCONNECT_GETSYNCHRONIZERIDRESPONSE']._serialized_start=811
  _globals['_SEQUENCERCONNECT_GETSYNCHRONIZERIDRESPONSE']._serialized_end=916
  _globals['_SEQUENCERCONNECT_GETSYNCHRONIZERPARAMETERSREQUEST']._serialized_start=918
  _globals['_SEQUENCERCONNECT_GETSYNCHRONIZERPARAMETERSREQUEST']._serialized_end=952
  _globals['_SEQUENCERCONNECT_GETSYNCHRONIZERPARAMETERSRESPONSE']._serialized_start=955
  _globals['_SEQUENCERCONNECT_GETSYNCHRONIZERPARAMETERSRESPONSE']._serialized_end=1111
  _globals['_SEQUENCERCONNECT_VERIFYACTIVEREQUEST']._serialized_start=1113
  _globals['_SEQUENCERCONNECT_VERIFYACTIVEREQUEST']._serialized_end=1134
  _globals['_SEQUENCERCONNECT_VERIFYACTIVERESPONSE']._serialized_start=1137
  _globals['_SEQUENCERCONNECT_VERIFYACTIVERESPONSE']._serialized_end=1479
  _globals['_SEQUENCERCONNECT_VERIFYACTIVERESPONSE_SUCCESS']._serialized_start=1397
  _globals['_SEQUENCERCONNECT_VERIFYACTIVERESPONSE_SUCCESS']._serialized_end=1435
  _globals['_SEQUENCERCONNECT_VERIFYACTIVERESPONSE_FAILURE']._serialized_start=739
  _globals['_SEQUENCERCONNECT_VERIFYACTIVERESPONSE_FAILURE']._serialized_end=772
  _globals['_SEQUENCERCONNECT_REGISTERONBOARDINGTOPOLOGYTRANSACTIONSREQUEST']._serialized_start=1482
  _globals['_SEQUENCERCONNECT_REGISTERONBOARDINGTOPOLOGYTRANSACTIONSREQUEST']._serialized_end=1647
  _globals['_SEQUENCERCONNECT_REGISTERONBOARDINGTOPOLOGYTRANSACTIONSRESPONSE']._serialized_start=1649
  _globals['_SEQUENCERCONNECT_REGISTERONBOARDINGTOPOLOGYTRANSACTIONSRESPONSE']._serialized_end=1697
  _globals['_SEQUENCERCONNECTSERVICE']._serialized_start=1700
  _globals['_SEQUENCERCONNECTSERVICE']._serialized_end=2748
# @@protoc_insertion_point(module_scope)
